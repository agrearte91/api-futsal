{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction main() {\n  return regeneratorRuntime.async(function main$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return regeneratorRuntime.awrap(_app[\"default\"].listen(4000));\n\n        case 2:\n          console.log('server en puerto 4000');\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsU0FBZUEsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQ0FDVUMsZ0JBQUlDLE1BQUosQ0FBVyxJQUFYLENBRFY7O0FBQUE7QUFFSUMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7O0FBRko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBS0FKLElBQUkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHYWJyaWVsXFxEb2N1bWVudHNcXFVuY29GdXRzYWxcXGFwaS1mdXRzYWxcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSAnLi9hcHAnO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gbWFpbigpIHtcclxuICAgIGF3YWl0IGFwcC5saXN0ZW4oNDAwMCk7XHJcbiAgICBjb25zb2xlLmxvZygnc2VydmVyIGVuIHB1ZXJ0byA0MDAwJylcclxufVxyXG5cclxubWFpbigpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "main",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AAEA,SAAeA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACUC,gBAAIC,MAAJ,CAAW,IAAX,CADV;;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAJ,IAAI",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src",
      "sourcesContent": [
        "import app from './app';\r\n\r\nasync function main() {\r\n    await app.listen(4000);\r\n    console.log('server en puerto 4000')\r\n}\r\n\r\nmain();"
      ]
    },
    "sourceType": "script",
    "mtime": 1573673075504
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _persona = _interopRequireDefault(require(\"./routes/persona\"));\n\nvar _jugador = _interopRequireDefault(require(\"./routes/jugador\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar app = (0, _express[\"default\"])(); //midelwares\n\napp.use((0, _morgan[\"default\"])('dev')); //muestra por consola lo que va llegando\n\napp.use((0, _express.json)()); //para que el servidor entienda los datos en formato json\n//\n\napp.use('/api/persona', _persona[\"default\"]);\napp.use('/api/jugadore', _jugador[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJwZXJzb25hUm91dGVzIiwianVnYWRvclJvdXRlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7O0FBQ0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaLEMsQ0FFQTs7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsd0JBQU8sS0FBUCxDQUFSLEUsQ0FBd0I7O0FBQ3hCRCxHQUFHLENBQUNDLEdBQUosQ0FBUSxvQkFBUixFLENBQWlCO0FBRWpCOztBQUVBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSxjQUFSLEVBQXdCQyxtQkFBeEI7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVEsZUFBUixFQUF5QkUsbUJBQXpCO2VBRWVILEciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHYWJyaWVsXFxEb2N1bWVudHNcXFVuY29GdXRzYWxcXGFwaS1mdXRzYWxcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzLCB7IGpzb24gfSBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xyXG5cclxuaW1wb3J0IHBlcnNvbmFSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvcGVyc29uYSc7XHJcbmltcG9ydCBqdWdhZG9yUm91dGVzIGZyb20gJy4vcm91dGVzL2p1Z2Fkb3InO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG4vL21pZGVsd2FyZXNcclxuYXBwLnVzZShtb3JnYW4oJ2RldicpKTsgLy9tdWVzdHJhIHBvciBjb25zb2xhIGxvIHF1ZSB2YSBsbGVnYW5kb1xyXG5hcHAudXNlKGpzb24oKSk7IC8vcGFyYSBxdWUgZWwgc2Vydmlkb3IgZW50aWVuZGEgbG9zIGRhdG9zIGVuIGZvcm1hdG8ganNvblxyXG5cclxuLy9cclxuXHJcbmFwcC51c2UoJy9hcGkvcGVyc29uYScsIHBlcnNvbmFSb3V0ZXMpO1xyXG5hcHAudXNlKCcvYXBpL2p1Z2Fkb3JlJywganVnYWRvclJvdXRlcyk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "personaRoutes",
        "jugadorRoutes"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAAwB;;AACxBD,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CAAiB;AAEjB;;AAEAD,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBC,mBAAxB;AACAF,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBE,mBAAzB;eAEeH,G",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src",
      "sourcesContent": [
        "import express, { json } from 'express';\r\nimport morgan from 'morgan';\r\n\r\nimport personaRoutes from './routes/persona';\r\nimport jugadorRoutes from './routes/jugador';\r\nconst app = express();\r\n\r\n//midelwares\r\napp.use(morgan('dev')); //muestra por consola lo que va llegando\r\napp.use(json()); //para que el servidor entienda los datos en formato json\r\n\r\n//\r\n\r\napp.use('/api/persona', personaRoutes);\r\napp.use('/api/jugadore', jugadorRoutes);\r\n\r\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573677258076
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\routes\\\\persona.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes\\persona.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes\\persona.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes\\persona.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes",
        "sourceFileName": "persona.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _persona = require(\"../controllers/persona.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/', _persona.crearPersona);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmEuanMiXSwibmFtZXMiOlsicm91dGVyIiwicG9zdCIsImNyZWFyUGVyc29uYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUtBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxHQUFaLEVBQWlCQyxxQkFBakI7ZUFDZUYsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdhYnJpZWxcXERvY3VtZW50c1xcVW5jb0Z1dHNhbFxcYXBpLWZ1dHNhbFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5pbXBvcnQgeyBjcmVhclBlcnNvbmEgfSBmcm9tICcuLi9jb250cm9sbGVycy9wZXJzb25hLmNvbnRyb2xsZXInO1xyXG5cclxuXHJcbnJvdXRlci5wb3N0KCcvJywgY3JlYXJQZXJzb25hKVxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "persona.js"
      ],
      "names": [
        "router",
        "post",
        "crearPersona"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAKAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBC,qBAAjB;eACeF,M",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport { crearPersona } from '../controllers/persona.controller';\r\n\r\n\r\nrouter.post('/', crearPersona)\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573681173731
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\routes\\\\jugador.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes\\jugador.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes\\jugador.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes\\jugador.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes",
        "sourceFileName": "jugador.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar router = (0, _express.Router)();\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp1Z2Fkb3IuanMiXSwibmFtZXMiOlsicm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO2VBRWVBLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHYWJyaWVsXFxEb2N1bWVudHNcXFVuY29GdXRzYWxcXGFwaS1mdXRzYWxcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "jugador.js"
      ],
      "names": [
        "router"
      ],
      "mappings": ";;;;;;;AAAA;;AACA,IAAMA,MAAM,GAAG,sBAAf;eAEeA,M",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573668307059
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\controllers\\\\persona.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\controllers\\persona.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\controllers\\persona.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\controllers\\persona.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\controllers",
        "sourceFileName": "persona.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.crearPersona = crearPersona;\n\nvar _Persona = _interopRequireDefault(require(\"../models/Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction crearPersona(req, res) {\n  var _req$body, dni, nombre, apellido, fecha_nacimiento, telefono, nuevaPersona;\n\n  return regeneratorRuntime.async(function crearPersona$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _req$body = req.body, dni = _req$body.dni, nombre = _req$body.nombre, apellido = _req$body.apellido, fecha_nacimiento = _req$body.fecha_nacimiento, telefono = _req$body.telefono;\n          console.log(req.body);\n          _context.prev = 2;\n          _context.next = 5;\n          return regeneratorRuntime.awrap(_Persona[\"default\"].create({\n            dni: dni,\n            nombre: nombre,\n            apellido: apellido,\n            fecha_nacimiento: fecha_nacimiento,\n            telefono: telefono\n          }));\n\n        case 5:\n          nuevaPersona = _context.sent;\n          console.log(nuevaPersona);\n\n          if (nuevaPersona) {\n            res.json({\n              mensaje: 'todo piola',\n              data: nuevaPersona\n            });\n          }\n\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](2);\n          res.status(500).json({\n            mensale: 'todo mal',\n            data: {}\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 10]]);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmEuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJjcmVhclBlcnNvbmEiLCJyZXEiLCJyZXMiLCJib2R5IiwiZG5pIiwibm9tYnJlIiwiYXBlbGxpZG8iLCJmZWNoYV9uYWNpbWllbnRvIiwidGVsZWZvbm8iLCJjb25zb2xlIiwibG9nIiwiUGVyc29uYSIsImNyZWF0ZSIsIm51ZXZhUGVyc29uYSIsImpzb24iLCJtZW5zYWplIiwiZGF0YSIsInN0YXR1cyIsIm1lbnNhbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUdPLFNBQWVBLFlBQWYsQ0FBNEJDLEdBQTVCLEVBQWlDQyxHQUFqQztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBQzJERCxHQUFHLENBQUNFLElBRC9ELEVBQ0tDLEdBREwsYUFDS0EsR0FETCxFQUNVQyxNQURWLGFBQ1VBLE1BRFYsRUFDa0JDLFFBRGxCLGFBQ2tCQSxRQURsQixFQUM0QkMsZ0JBRDVCLGFBQzRCQSxnQkFENUIsRUFDOENDLFFBRDlDLGFBQzhDQSxRQUQ5QztBQUVIQyxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsR0FBRyxDQUFDRSxJQUFoQjtBQUZHO0FBQUE7QUFBQSwwQ0FJMEJRLG9CQUFRQyxNQUFSLENBQWU7QUFDcENSLFlBQUFBLEdBQUcsRUFBSEEsR0FEb0M7QUFFcENDLFlBQUFBLE1BQU0sRUFBTkEsTUFGb0M7QUFHcENDLFlBQUFBLFFBQVEsRUFBUkEsUUFIb0M7QUFJcENDLFlBQUFBLGdCQUFnQixFQUFoQkEsZ0JBSm9DO0FBS3BDQyxZQUFBQSxRQUFRLEVBQVJBO0FBTG9DLFdBQWYsQ0FKMUI7O0FBQUE7QUFJS0ssVUFBQUEsWUFKTDtBQVdDSixVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsWUFBWjs7QUFDQSxjQUFJQSxZQUFKLEVBQWtCO0FBQ2RYLFlBQUFBLEdBQUcsQ0FBQ1ksSUFBSixDQUFTO0FBQ0xDLGNBQUFBLE9BQU8sRUFBRSxZQURKO0FBRUxDLGNBQUFBLElBQUksRUFBRUg7QUFGRCxhQUFUO0FBSUg7O0FBakJGO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBbUJDWCxVQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUNqQkksWUFBQUEsT0FBTyxFQUFFLFVBRFE7QUFFakJGLFlBQUFBLElBQUksRUFBRTtBQUZXLFdBQXJCOztBQW5CRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdhYnJpZWxcXERvY3VtZW50c1xcVW5jb0Z1dHNhbFxcYXBpLWZ1dHNhbFxcc3JjXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQZXJzb25hIGZyb20gJy4uL21vZGVscy9QZXJzb25hJztcclxuXHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXJQZXJzb25hKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCB7IGRuaSwgbm9tYnJlLCBhcGVsbGlkbywgZmVjaGFfbmFjaW1pZW50bywgdGVsZWZvbm8gfSA9IHJlcS5ib2R5O1xyXG4gICAgY29uc29sZS5sb2cocmVxLmJvZHkpXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGxldCBudWV2YVBlcnNvbmEgPSBhd2FpdCBQZXJzb25hLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIGRuaSxcclxuICAgICAgICAgICAgbm9tYnJlLFxyXG4gICAgICAgICAgICBhcGVsbGlkbyxcclxuICAgICAgICAgICAgZmVjaGFfbmFjaW1pZW50byxcclxuICAgICAgICAgICAgdGVsZWZvbm9cclxuICAgICAgICB9KVxyXG4gICAgICAgIGNvbnNvbGUubG9nKG51ZXZhUGVyc29uYSlcclxuICAgICAgICBpZiAobnVldmFQZXJzb25hKSB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lbnNhamU6ICd0b2RvIHBpb2xhJyxcclxuICAgICAgICAgICAgICAgIGRhdGE6IG51ZXZhUGVyc29uYVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgIG1lbnNhbGU6ICd0b2RvIG1hbCcsXHJcbiAgICAgICAgICAgIGRhdGE6IHt9XHJcblxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG5cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "persona.controller.js"
      ],
      "names": [
        "crearPersona",
        "req",
        "res",
        "body",
        "dni",
        "nombre",
        "apellido",
        "fecha_nacimiento",
        "telefono",
        "console",
        "log",
        "Persona",
        "create",
        "nuevaPersona",
        "json",
        "mensaje",
        "data",
        "status",
        "mensale"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAGO,SAAeA,YAAf,CAA4BC,GAA5B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBAC2DD,GAAG,CAACE,IAD/D,EACKC,GADL,aACKA,GADL,EACUC,MADV,aACUA,MADV,EACkBC,QADlB,aACkBA,QADlB,EAC4BC,gBAD5B,aAC4BA,gBAD5B,EAC8CC,QAD9C,aAC8CA,QAD9C;AAEHC,UAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACE,IAAhB;AAFG;AAAA;AAAA,0CAI0BQ,oBAAQC,MAAR,CAAe;AACpCR,YAAAA,GAAG,EAAHA,GADoC;AAEpCC,YAAAA,MAAM,EAANA,MAFoC;AAGpCC,YAAAA,QAAQ,EAARA,QAHoC;AAIpCC,YAAAA,gBAAgB,EAAhBA,gBAJoC;AAKpCC,YAAAA,QAAQ,EAARA;AALoC,WAAf,CAJ1B;;AAAA;AAIKK,UAAAA,YAJL;AAWCJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;;AACA,cAAIA,YAAJ,EAAkB;AACdX,YAAAA,GAAG,CAACY,IAAJ,CAAS;AACLC,cAAAA,OAAO,EAAE,YADJ;AAELC,cAAAA,IAAI,EAAEH;AAFD,aAAT;AAIH;;AAjBF;AAAA;;AAAA;AAAA;AAAA;AAmBCX,UAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBI,YAAAA,OAAO,EAAE,UADQ;AAEjBF,YAAAA,IAAI,EAAE;AAFW,WAArB;;AAnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import Persona from '../models/Persona';\r\n\r\n\r\nexport async function crearPersona(req, res) {\r\n    const { dni, nombre, apellido, fecha_nacimiento, telefono } = req.body;\r\n    console.log(req.body)\r\n    try {\r\n        let nuevaPersona = await Persona.create({\r\n            dni,\r\n            nombre,\r\n            apellido,\r\n            fecha_nacimiento,\r\n            telefono\r\n        })\r\n        console.log(nuevaPersona)\r\n        if (nuevaPersona) {\r\n            res.json({\r\n                mensaje: 'todo piola',\r\n                data: nuevaPersona\r\n            })\r\n        }\r\n    } catch (e) {\r\n        res.status(500).json({\r\n            mensale: 'todo mal',\r\n            data: {}\r\n\r\n        })\r\n    }\r\n\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1573681121032
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\models\\\\Persona.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models\\Persona.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models\\Persona.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models\\Persona.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models",
        "sourceFileName": "Persona.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Persona = _database.sequelize.define('Persona', {\n  dni: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  apellido: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fecha_nacimiento: {\n    type: _sequelize[\"default\"].DATE\n  },\n  telefono: {\n    type: _sequelize[\"default\"].TEXT\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Persona;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbmEuanMiXSwibmFtZXMiOlsiUGVyc29uYSIsInNlcXVlbGl6ZSIsImRlZmluZSIsImRuaSIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsIm5vbWJyZSIsIlRFWFQiLCJhcGVsbGlkbyIsImZlY2hhX25hY2ltaWVudG8iLCJEQVRFIiwidGVsZWZvbm8iLCJ0aW1lc3RhbXBzIiwiZnJlZXplVGFibGVOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQ3hDQyxFQUFBQSxHQUFHLEVBQUU7QUFDREMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEZjtBQUVEQyxJQUFBQSxVQUFVLEVBQUU7QUFGWCxHQURtQztBQUt4Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FMZ0M7QUFReENDLEVBQUFBLFFBQVEsRUFBRTtBQUNOTixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURWLEdBUjhCO0FBV3hDRSxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNkUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVTztBQURGLEdBWHNCO0FBY3hDQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEVjtBQWQ4QixDQUE1QixFQWlCYjtBQUNDSyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FqQmEsQ0FBaEI7O2VBc0JlZixPIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcR2FicmllbFxcRG9jdW1lbnRzXFxVbmNvRnV0c2FsXFxhcGktZnV0c2FsXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHsgc2VxdWVsaXplIH0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnO1xyXG5cclxuY29uc3QgUGVyc29uYSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1BlcnNvbmEnLCB7XHJcbiAgICBkbmk6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbm9tYnJlOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBhcGVsbGlkbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZmVjaGFfbmFjaW1pZW50bzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5EQVRFXHJcbiAgICB9LFxyXG4gICAgdGVsZWZvbm86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfVxyXG59LCB7XHJcbiAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQZXJzb25hOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Persona.js"
      ],
      "names": [
        "Persona",
        "sequelize",
        "define",
        "dni",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "apellido",
        "fecha_nacimiento",
        "DATE",
        "telefono",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,OADf;AAEDC,IAAAA,UAAU,EAAE;AAFX,GADmC;AAKxCC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GALgC;AAQxCC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAR8B;AAWxCE,EAAAA,gBAAgB,EAAE;AACdP,IAAAA,IAAI,EAAEC,sBAAUO;AADF,GAXsB;AAcxCC,EAAAA,QAAQ,EAAE;AACNT,IAAAA,IAAI,EAAEC,sBAAUI;AADV;AAd8B,CAA5B,EAiBb;AACCK,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAjBa,CAAhB;;eAsBef,O",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport { sequelize } from '../database/database';\r\n\r\nconst Persona = sequelize.define('Persona', {\r\n    dni: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    apellido: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fecha_nacimiento: {\r\n        type: Sequelize.DATE\r\n    },\r\n    telefono: {\r\n        type: Sequelize.TEXT\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nexport default Persona;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573681723319
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\database\\\\database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\database\\database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\database\\database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\database\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\database",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sequelize = new _sequelize[\"default\"]('futsal', 'postgres', //user\n'postgres', //pass\n{\n  host: '170.210.81.246',\n  port: '30432',\n  dialect: 'postgres',\n  pool: {\n    max: 3,\n    min: 0,\n    require: 30000,\n    idle: 10000\n  },\n  logging: true\n});\nexports.sequelize = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJwb3J0IiwiZGlhbGVjdCIsInBvb2wiLCJtYXgiLCJtaW4iLCJyZXF1aXJlIiwiaWRsZSIsImxvZ2dpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVPLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxxQkFBSixDQUNyQixRQURxQixFQUVyQixVQUZxQixFQUVUO0FBQ1osVUFIcUIsRUFHVDtBQUNaO0FBQ0lDLEVBQUFBLElBQUksRUFBRSxnQkFEVjtBQUVJQyxFQUFBQSxJQUFJLEVBQUUsT0FGVjtBQUdJQyxFQUFBQSxPQUFPLEVBQUUsVUFIYjtBQUlJQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsR0FBRyxFQUFFLENBREg7QUFFRkMsSUFBQUEsR0FBRyxFQUFFLENBRkg7QUFHRkMsSUFBQUEsT0FBTyxFQUFFLEtBSFA7QUFJRkMsSUFBQUEsSUFBSSxFQUFFO0FBSkosR0FKVjtBQVVJQyxFQUFBQSxPQUFPLEVBQUU7QUFWYixDQUpxQixDQUFsQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdhYnJpZWxcXERvY3VtZW50c1xcVW5jb0Z1dHNhbFxcYXBpLWZ1dHNhbFxcc3JjXFxkYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuXHJcbmV4cG9ydCBjb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKFxyXG4gICAgJ2Z1dHNhbCcsXHJcbiAgICAncG9zdGdyZXMnLCAvL3VzZXJcclxuICAgICdwb3N0Z3JlcycsIC8vcGFzc1xyXG4gICAge1xyXG4gICAgICAgIGhvc3Q6ICcxNzAuMjEwLjgxLjI0NicsXHJcbiAgICAgICAgcG9ydDogJzMwNDMyJyxcclxuICAgICAgICBkaWFsZWN0OiAncG9zdGdyZXMnLFxyXG4gICAgICAgIHBvb2w6IHtcclxuICAgICAgICAgICAgbWF4OiAzLFxyXG4gICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgIHJlcXVpcmU6IDMwMDAwLFxyXG4gICAgICAgICAgICBpZGxlOiAxMDAwMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbG9nZ2luZzogdHJ1ZVxyXG4gICAgfVxyXG4pIl19",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "port",
        "dialect",
        "pool",
        "max",
        "min",
        "require",
        "idle",
        "logging"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,CACrB,QADqB,EAErB,UAFqB,EAET;AACZ,UAHqB,EAGT;AACZ;AACIC,EAAAA,IAAI,EAAE,gBADV;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,OAAO,EAAE,UAHb;AAIIC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AAEFC,IAAAA,GAAG,EAAE,CAFH;AAGFC,IAAAA,OAAO,EAAE,KAHP;AAIFC,IAAAA,IAAI,EAAE;AAJJ,GAJV;AAUIC,EAAAA,OAAO,EAAE;AAVb,CAJqB,CAAlB",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\database",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\n\r\nexport const sequelize = new Sequelize(\r\n    'futsal',\r\n    'postgres', //user\r\n    'postgres', //pass\r\n    {\r\n        host: '170.210.81.246',\r\n        port: '30432',\r\n        dialect: 'postgres',\r\n        pool: {\r\n            max: 3,\r\n            min: 0,\r\n            require: 30000,\r\n            idle: 10000\r\n        },\r\n        logging: true\r\n    }\r\n)"
      ]
    },
    "sourceType": "script",
    "mtime": 1573680068077
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"filename\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\\\\src\\\\models\\\\Jugador.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Gabriel\\\\Documents\\\\UncoFutsal\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models\\Jugador.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models\\Jugador.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models\\Jugador.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models",
        "sourceFileName": "Jugador.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jugador = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Persona = _interopRequireDefault(require(\"./Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Jugador = _database.sequelize.define('Jugador', {\n  dni: {\n    type: _sequelize[\"default\"].TEXT,\n    primarykey: true\n  },\n  legajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  facultad: {\n    type: _sequelize[\"default\"].TEXT\n  }\n}, {\n  timestamps: false\n});\n\nexports.Jugador = Jugador;\nJugador.hasOne(_Persona[\"default\"], {\n  foreingKey: 'dni',\n  sourceKey: 'dni'\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3IuanMiXSwibmFtZXMiOlsiSnVnYWRvciIsInNlcXVlbGl6ZSIsImRlZmluZSIsImRuaSIsInR5cGUiLCJTZXF1ZWxpemUiLCJURVhUIiwicHJpbWFyeWtleSIsImxlZ2FqbyIsImZhY3VsdGFkIiwidGltZXN0YW1wcyIsImhhc09uZSIsIlBlcnNvbmEiLCJmb3JlaW5nS2V5Iiwic291cmNlS2V5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFGbUM7QUFJNUIsSUFBTUEsT0FBTyxHQUFHQyxvQkFBVUMsTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUMzQ0MsRUFBQUEsR0FBRyxFQUFFO0FBQ0RDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLElBRGY7QUFFREMsSUFBQUEsVUFBVSxFQUFFO0FBRlgsR0FEc0M7QUFNM0NDLEVBQUFBLE1BQU0sRUFBRTtBQUNKSixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURaLEdBTm1DO0FBUzNDRyxFQUFBQSxRQUFRLEVBQUU7QUFDTkwsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVjtBQVRpQyxDQUE1QixFQVloQjtBQUNDSSxFQUFBQSxVQUFVLEVBQUU7QUFEYixDQVpnQixDQUFoQjs7O0FBa0JQVixPQUFPLENBQUNXLE1BQVIsQ0FBZUMsbUJBQWYsRUFBd0I7QUFBRUMsRUFBQUEsVUFBVSxFQUFFLEtBQWQ7QUFBcUJDLEVBQUFBLFNBQVMsRUFBRTtBQUFoQyxDQUF4QiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdhYnJpZWxcXERvY3VtZW50c1xcVW5jb0Z1dHNhbFxcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IC8vIGNsYXNlIFNlcXVlbGl6ZVxyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZScgLy9jb25leGlvbiBhIGxhIGJhc2VcclxuaW1wb3J0IFBlcnNvbmEgZnJvbSAnLi9QZXJzb25hJ1xyXG5cclxuZXhwb3J0IGNvbnN0IEp1Z2Fkb3IgPSBzZXF1ZWxpemUuZGVmaW5lKCdKdWdhZG9yJywge1xyXG4gICAgICAgIGRuaToge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVCxcclxuICAgICAgICAgICAgcHJpbWFyeWtleTogdHJ1ZVxyXG5cclxuICAgICAgICB9LFxyXG4gICAgICAgIGxlZ2Fqbzoge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZmFjdWx0YWQ6IHtcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgICAgICB9XHJcbiAgICB9LCB7XHJcbiAgICAgICAgdGltZXN0YW1wczogZmFsc2VcclxuICAgIH1cclxuXHJcbik7XHJcblxyXG5KdWdhZG9yLmhhc09uZShQZXJzb25hLCB7IGZvcmVpbmdLZXk6ICdkbmknLCBzb3VyY2VLZXk6ICdkbmknIH0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "Jugador.js"
      ],
      "names": [
        "Jugador",
        "sequelize",
        "define",
        "dni",
        "type",
        "Sequelize",
        "TEXT",
        "primarykey",
        "legajo",
        "facultad",
        "timestamps",
        "hasOne",
        "Persona",
        "foreingKey",
        "sourceKey"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAFmC;AAI5B,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AAC3CC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,IADf;AAEDC,IAAAA,UAAU,EAAE;AAFX,GADsC;AAM3CC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUC;AADZ,GANmC;AAS3CG,EAAAA,QAAQ,EAAE;AACNL,IAAAA,IAAI,EAAEC,sBAAUC;AADV;AATiC,CAA5B,EAYhB;AACCI,EAAAA,UAAU,EAAE;AADb,CAZgB,CAAhB;;;AAkBPV,OAAO,CAACW,MAAR,CAAeC,mBAAf,EAAwB;AAAEC,EAAAA,UAAU,EAAE,KAAd;AAAqBC,EAAAA,SAAS,EAAE;AAAhC,CAAxB",
      "sourceRoot": "C:\\Users\\Gabriel\\Documents\\UncoFutsal\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\nimport Persona from './Persona'\r\n\r\nexport const Jugador = sequelize.define('Jugador', {\r\n        dni: {\r\n            type: Sequelize.TEXT,\r\n            primarykey: true\r\n\r\n        },\r\n        legajo: {\r\n            type: Sequelize.TEXT\r\n        },\r\n        facultad: {\r\n            type: Sequelize.TEXT\r\n        }\r\n    }, {\r\n        timestamps: false\r\n    }\r\n\r\n);\r\n\r\nJugador.hasOne(Persona, { foreingKey: 'dni', sourceKey: 'dni' })"
      ]
    },
    "sourceType": "script",
    "mtime": 1573678384369
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction main() {\n  return regeneratorRuntime.async(function main$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return regeneratorRuntime.awrap(_app[\"default\"].listen(4000));\n\n        case 2:\n          console.log('server en puerto 4000');\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsU0FBZUEsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQ0FDVUMsZ0JBQUlDLE1BQUosQ0FBVyxJQUFYLENBRFY7O0FBQUE7QUFFSUMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7O0FBRko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBS0FKLElBQUkiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSAnLi9hcHAnO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gbWFpbigpIHtcclxuICAgIGF3YWl0IGFwcC5saXN0ZW4oNDAwMCk7XHJcbiAgICBjb25zb2xlLmxvZygnc2VydmVyIGVuIHB1ZXJ0byA0MDAwJylcclxufVxyXG5cclxubWFpbigpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "main",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AAEA,SAAeA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACUC,gBAAIC,MAAJ,CAAW,IAAX,CADV;;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAJ,IAAI",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src",
      "sourcesContent": [
        "import app from './app';\r\n\r\nasync function main() {\r\n    await app.listen(4000);\r\n    console.log('server en puerto 4000')\r\n}\r\n\r\nmain();"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142503
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _persona = _interopRequireDefault(require(\"./routes/persona\"));\n\nvar _jugador = _interopRequireDefault(require(\"./routes/jugador\"));\n\nvar _torneo = _interopRequireDefault(require(\"./routes/torneo\"));\n\nvar _categoria = _interopRequireDefault(require(\"./routes/categoria\"));\n\nvar _equipo = _interopRequireDefault(require(\"./routes/equipo\"));\n\nvar _listaInscripcion = _interopRequireDefault(require(\"./routes/listaInscripcion\"));\n\nvar _tabla = _interopRequireDefault(require(\"./routes/tabla\"));\n\nvar _partido = _interopRequireDefault(require(\"./routes/partido\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar app = (0, _express[\"default\"])(); //midelwares\n\napp.use((0, _morgan[\"default\"])('dev')); //muestra por consola lo que va llegando\n\napp.use((0, _express.json)()); //para que el servidor entienda los datos en formato json\n//\n\napp.use('/api/persona', _persona[\"default\"]);\napp.use('/api/jugador', _jugador[\"default\"]);\napp.use('/api/torneo', _torneo[\"default\"]);\napp.use('/api/categoria', _categoria[\"default\"]);\napp.use('/api/equipo', _equipo[\"default\"]);\napp.use('/api/listaInscripcion', _listaInscripcion[\"default\"]);\napp.use('/api/tabla', _tabla[\"default\"]);\napp.use('/api/partido', _partido[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJwZXJzb25hUm91dGVzIiwianVnYWRvclJvdXRlcyIsInRvcm5lb1JvdXRlcyIsImNhdGVnb3JpYVJvdXRlcyIsImVxdWlwb1JvdXRlcyIsImxpc3RhSW5zY3JpcGNpb25Sb3V0ZXMiLCJ0YWJsYVJvdXRlcyIsInBhcnRpZG9Sb3V0ZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUtBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBR0E7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLHdCQUFPLEtBQVAsQ0FBUixFLENBQXdCOztBQUN4QkQsR0FBRyxDQUFDQyxHQUFKLENBQVEsb0JBQVIsRSxDQUFpQjtBQUVqQjs7QUFFQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QkMsbUJBQXhCO0FBQ0FGLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGNBQVIsRUFBd0JFLG1CQUF4QjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCRyxrQkFBdkI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsZ0JBQVIsRUFBMEJJLHFCQUExQjtBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCSyxrQkFBdkI7QUFDQU4sR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVIsRUFBaUNNLDRCQUFqQztBQUNBUCxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCTyxpQkFBdEI7QUFDQVIsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QlEsbUJBQXhCO2VBR2VULEciLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzLCB7IGpzb24gfSBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xyXG5cclxuaW1wb3J0IHBlcnNvbmFSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvcGVyc29uYSc7XHJcbmltcG9ydCBqdWdhZG9yUm91dGVzIGZyb20gJy4vcm91dGVzL2p1Z2Fkb3InO1xyXG5pbXBvcnQgdG9ybmVvUm91dGVzIGZyb20gJy4vcm91dGVzL3Rvcm5lbyc7XHJcbmltcG9ydCBjYXRlZ29yaWFSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvY2F0ZWdvcmlhJztcclxuaW1wb3J0IGVxdWlwb1JvdXRlcyBmcm9tICcuL3JvdXRlcy9lcXVpcG8nO1xyXG5pbXBvcnQgbGlzdGFJbnNjcmlwY2lvblJvdXRlcyBmcm9tICcuL3JvdXRlcy9saXN0YUluc2NyaXBjaW9uJztcclxuaW1wb3J0IHRhYmxhUm91dGVzIGZyb20gJy4vcm91dGVzL3RhYmxhJztcclxuaW1wb3J0IHBhcnRpZG9Sb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvcGFydGlkbyc7XHJcblxyXG5cclxuXHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5cclxuLy9taWRlbHdhcmVzXHJcbmFwcC51c2UobW9yZ2FuKCdkZXYnKSk7IC8vbXVlc3RyYSBwb3IgY29uc29sYSBsbyBxdWUgdmEgbGxlZ2FuZG9cclxuYXBwLnVzZShqc29uKCkpOyAvL3BhcmEgcXVlIGVsIHNlcnZpZG9yIGVudGllbmRhIGxvcyBkYXRvcyBlbiBmb3JtYXRvIGpzb25cclxuXHJcbi8vXHJcblxyXG5hcHAudXNlKCcvYXBpL3BlcnNvbmEnLCBwZXJzb25hUm91dGVzKTtcclxuYXBwLnVzZSgnL2FwaS9qdWdhZG9yJywganVnYWRvclJvdXRlcyk7XHJcbmFwcC51c2UoJy9hcGkvdG9ybmVvJywgdG9ybmVvUm91dGVzKTtcclxuYXBwLnVzZSgnL2FwaS9jYXRlZ29yaWEnLCBjYXRlZ29yaWFSb3V0ZXMpO1xyXG5hcHAudXNlKCcvYXBpL2VxdWlwbycsIGVxdWlwb1JvdXRlcyk7XHJcbmFwcC51c2UoJy9hcGkvbGlzdGFJbnNjcmlwY2lvbicsIGxpc3RhSW5zY3JpcGNpb25Sb3V0ZXMpO1xyXG5hcHAudXNlKCcvYXBpL3RhYmxhJywgdGFibGFSb3V0ZXMpO1xyXG5hcHAudXNlKCcvYXBpL3BhcnRpZG8nLCBwYXJ0aWRvUm91dGVzKTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "personaRoutes",
        "jugadorRoutes",
        "torneoRoutes",
        "categoriaRoutes",
        "equipoRoutes",
        "listaInscripcionRoutes",
        "tablaRoutes",
        "partidoRoutes"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAKA,IAAMA,GAAG,GAAG,0BAAZ,C,CAGA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAAwB;;AACxBD,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CAAiB;AAEjB;;AAEAD,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBC,mBAAxB;AACAF,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBE,mBAAxB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBG,kBAAvB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BI,qBAA1B;AACAL,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBK,kBAAvB;AACAN,GAAG,CAACC,GAAJ,CAAQ,uBAAR,EAAiCM,4BAAjC;AACAP,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBO,iBAAtB;AACAR,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBQ,mBAAxB;eAGeT,G",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src",
      "sourcesContent": [
        "import express, { json } from 'express';\r\nimport morgan from 'morgan';\r\n\r\nimport personaRoutes from './routes/persona';\r\nimport jugadorRoutes from './routes/jugador';\r\nimport torneoRoutes from './routes/torneo';\r\nimport categoriaRoutes from './routes/categoria';\r\nimport equipoRoutes from './routes/equipo';\r\nimport listaInscripcionRoutes from './routes/listaInscripcion';\r\nimport tablaRoutes from './routes/tabla';\r\nimport partidoRoutes from './routes/partido';\r\n\r\n\r\n\r\n\r\nconst app = express();\r\n\r\n\r\n//midelwares\r\napp.use(morgan('dev')); //muestra por consola lo que va llegando\r\napp.use(json()); //para que el servidor entienda los datos en formato json\r\n\r\n//\r\n\r\napp.use('/api/persona', personaRoutes);\r\napp.use('/api/jugador', jugadorRoutes);\r\napp.use('/api/torneo', torneoRoutes);\r\napp.use('/api/categoria', categoriaRoutes);\r\napp.use('/api/equipo', equipoRoutes);\r\napp.use('/api/listaInscripcion', listaInscripcionRoutes);\r\napp.use('/api/tabla', tablaRoutes);\r\napp.use('/api/partido', partidoRoutes);\r\n\r\n\r\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142498
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\persona.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\persona.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\persona.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\persona.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "persona.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _persona = _interopRequireDefault(require(\"../controllers/persona.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.post('/', _persona[\"default\"].crearPersona); // recibe una persona a insertar en la base\n\nrouter.post('/crearPersonas', _persona[\"default\"].crearPersonas); //recibe un arreglo de personas a insertar en la base\n\nrouter.get('/', _persona[\"default\"].obtenerPersonas); // obtener todas las personas almacenadas hasta el momento\n\nrouter.get('/:dni', _persona[\"default\"].obtenerPersona); //obtener persona por campo: dni\n\nrouter.put('/:dni', _persona[\"default\"].actualizarPersona); //actualizar los datos de la persona con :dni\n\nrouter[\"delete\"]('/:dni', _persona[\"default\"].eliminarPersona); //eliminar la persona de la base \n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmEuanMiXSwibmFtZXMiOlsicm91dGVyIiwicG9zdCIsIlBlcnNvbmFDb250cm9sbGVyIiwiY3JlYXJQZXJzb25hIiwiY3JlYXJQZXJzb25hcyIsImdldCIsIm9idGVuZXJQZXJzb25hcyIsIm9idGVuZXJQZXJzb25hIiwicHV0IiwiYWN0dWFsaXphclBlcnNvbmEiLCJlbGltaW5hclBlcnNvbmEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxHQUFaLEVBQWdCQyxvQkFBa0JDLFlBQWxDLEUsQ0FBaUQ7O0FBQ2pESCxNQUFNLENBQUNDLElBQVAsQ0FBWSxnQkFBWixFQUE2QkMsb0JBQWtCRSxhQUEvQyxFLENBQStEOztBQUMvREosTUFBTSxDQUFDSyxHQUFQLENBQVcsR0FBWCxFQUFlSCxvQkFBa0JJLGVBQWpDLEUsQ0FBbUQ7O0FBQ25ETixNQUFNLENBQUNLLEdBQVAsQ0FBVyxPQUFYLEVBQW1CSCxvQkFBa0JLLGNBQXJDLEUsQ0FBc0Q7O0FBQ3REUCxNQUFNLENBQUNRLEdBQVAsQ0FBVyxPQUFYLEVBQW1CTixvQkFBa0JPLGlCQUFyQyxFLENBQXlEOztBQUN6RFQsTUFBTSxVQUFOLENBQWMsT0FBZCxFQUFzQkUsb0JBQWtCUSxlQUF4QyxFLENBQTBEOztlQUUzQ1YsTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5pbXBvcnQgUGVyc29uYUNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvcGVyc29uYS5jb250cm9sbGVyJztcclxuXHJcbnJvdXRlci5wb3N0KCcvJyxQZXJzb25hQ29udHJvbGxlci5jcmVhclBlcnNvbmEpOyAvLyByZWNpYmUgdW5hIHBlcnNvbmEgYSBpbnNlcnRhciBlbiBsYSBiYXNlXHJcbnJvdXRlci5wb3N0KCcvY3JlYXJQZXJzb25hcycsUGVyc29uYUNvbnRyb2xsZXIuY3JlYXJQZXJzb25hcyk7IC8vcmVjaWJlIHVuIGFycmVnbG8gZGUgcGVyc29uYXMgYSBpbnNlcnRhciBlbiBsYSBiYXNlXHJcbnJvdXRlci5nZXQoJy8nLFBlcnNvbmFDb250cm9sbGVyLm9idGVuZXJQZXJzb25hcyk7IC8vIG9idGVuZXIgdG9kYXMgbGFzIHBlcnNvbmFzIGFsbWFjZW5hZGFzIGhhc3RhIGVsIG1vbWVudG9cclxucm91dGVyLmdldCgnLzpkbmknLFBlcnNvbmFDb250cm9sbGVyLm9idGVuZXJQZXJzb25hKTsgLy9vYnRlbmVyIHBlcnNvbmEgcG9yIGNhbXBvOiBkbmlcclxucm91dGVyLnB1dCgnLzpkbmknLFBlcnNvbmFDb250cm9sbGVyLmFjdHVhbGl6YXJQZXJzb25hKTsgLy9hY3R1YWxpemFyIGxvcyBkYXRvcyBkZSBsYSBwZXJzb25hIGNvbiA6ZG5pXHJcbnJvdXRlci5kZWxldGUoJy86ZG5pJyxQZXJzb25hQ29udHJvbGxlci5lbGltaW5hclBlcnNvbmEpOyAvL2VsaW1pbmFyIGxhIHBlcnNvbmEgZGUgbGEgYmFzZSBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "persona.js"
      ],
      "names": [
        "router",
        "post",
        "PersonaController",
        "crearPersona",
        "crearPersonas",
        "get",
        "obtenerPersonas",
        "obtenerPersona",
        "put",
        "actualizarPersona",
        "eliminarPersona"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAgBC,oBAAkBC,YAAlC,E,CAAiD;;AACjDH,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6BC,oBAAkBE,aAA/C,E,CAA+D;;AAC/DJ,MAAM,CAACK,GAAP,CAAW,GAAX,EAAeH,oBAAkBI,eAAjC,E,CAAmD;;AACnDN,MAAM,CAACK,GAAP,CAAW,OAAX,EAAmBH,oBAAkBK,cAArC,E,CAAsD;;AACtDP,MAAM,CAACQ,GAAP,CAAW,OAAX,EAAmBN,oBAAkBO,iBAArC,E,CAAyD;;AACzDT,MAAM,UAAN,CAAc,OAAd,EAAsBE,oBAAkBQ,eAAxC,E,CAA0D;;eAE3CV,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport PersonaController from '../controllers/persona.controller';\r\n\r\nrouter.post('/',PersonaController.crearPersona); // recibe una persona a insertar en la base\r\nrouter.post('/crearPersonas',PersonaController.crearPersonas); //recibe un arreglo de personas a insertar en la base\r\nrouter.get('/',PersonaController.obtenerPersonas); // obtener todas las personas almacenadas hasta el momento\r\nrouter.get('/:dni',PersonaController.obtenerPersona); //obtener persona por campo: dni\r\nrouter.put('/:dni',PersonaController.actualizarPersona); //actualizar los datos de la persona con :dni\r\nrouter.delete('/:dni',PersonaController.eliminarPersona); //eliminar la persona de la base \r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595618969025
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\persona.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\persona.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\persona.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\persona.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "persona.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _PersonaService = _interopRequireDefault(require(\"../services/PersonaService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar PersonaController =\n/*#__PURE__*/\nfunction () {\n  function PersonaController() {\n    _classCallCheck(this, PersonaController);\n  }\n\n  _createClass(PersonaController, null, [{\n    key: \"crearPersona\",\n    value: function crearPersona(req, res) {\n      var nuevaPersona, personaCreada;\n      return regeneratorRuntime.async(function crearPersona$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaPersona = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].agregarPersona(nuevaPersona));\n\n            case 4:\n              personaCreada = _context.sent;\n              util.setSuccess(201, 'Persona añadida', personaCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"crearPersonas\",\n    value: function crearPersonas(req, res) {\n      var nuevasPersonas, personasCreadas;\n      return regeneratorRuntime.async(function crearPersonas$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              nuevasPersonas = req.body;\n              _context2.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].agregarPersonas(nuevasPersonas));\n\n            case 4:\n              personasCreadas = _context2.sent;\n              util.setSuccess(201, 'Personas añadidas', personasCreadas);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, \"No se añadieron las personas: \" + _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerPersonas\",\n    value: function obtenerPersonas(req, res) {\n      var personas;\n      return regeneratorRuntime.async(function obtenerPersonas$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].obtenerPersonas());\n\n            case 3:\n              personas = _context3.sent;\n\n              if (personas && personas.length > 0) {\n                util.setSuccess(200, 'Personas obtenidas', personas);\n              } else {\n                util.setSuccess(200, 'No se encuentran Personas');\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(400, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerPersona\",\n    value: function obtenerPersona(req, res) {\n      var dni, persona;\n      return regeneratorRuntime.async(function obtenerPersona$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dni = req.params.dni;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].obtenerPersona(dni));\n\n            case 4:\n              persona = _context4.sent;\n\n              if (persona) {\n                util.setSuccess(200, 'Persona obtenida', persona);\n              } else {\n                util.setError(404, \"Persona con dni: \".concat(dni, \" no encontrada \"));\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarPersona\",\n    value: function actualizarPersona(req, res) {\n      var dni, persona, personaActualizada;\n      return regeneratorRuntime.async(function actualizarPersona$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dni = req.params.dni;\n              persona = req.body;\n              _context5.next = 5;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].actualizarPersona(dni, persona));\n\n            case 5:\n              personaActualizada = _context5.sent;\n\n              if (personaActualizada) {\n                util.setSuccess(200, 'Persona actualizada', personaActualizada);\n              } else {\n                util.setError(404, \"Persona con dni: \".concat(dni, \" no encontrada \"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarPersona\",\n    value: function eliminarPersona(req, res) {\n      var dni, personaEliminada;\n      return regeneratorRuntime.async(function eliminarPersona$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dni = req.params.dni;\n              _context6.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].eliminarPersona(dni));\n\n            case 4:\n              personaEliminada = _context6.sent;\n\n              if (personaEliminada) {\n                util.setSuccess(200, 'Persona eliminada');\n              } else {\n                util.setError(404, \"Persona con dni: \".concat(dni, \" no encontrada \"));\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return PersonaController;\n}();\n\nvar _default = PersonaController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "persona.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "PersonaController",
        "req",
        "res",
        "nuevaPersona",
        "body",
        "PersonaService",
        "agregarPersona",
        "personaCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "nuevasPersonas",
        "agregarPersonas",
        "personasCreadas",
        "obtenerPersonas",
        "personas",
        "length",
        "dni",
        "params",
        "obtenerPersona",
        "persona",
        "actualizarPersona",
        "personaActualizada",
        "eliminarPersona",
        "personaEliminada"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,iB;;;;;;;;;iCACwBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,Y,GAAeF,GAAG,CAACG,I;;8CACGC,2BAAeC,cAAf,CAA8BH,YAA9B,C;;;AAAtBI,cAAAA,a;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCD,aAAtC;+CAEOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAGlBU,cAAAA,c,GAAiBX,GAAG,CAACG,I;;8CACGC,2BAAeQ,eAAf,CAA+BD,cAA/B,C;;;AAAxBE,cAAAA,e;AACNhB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCM,eAAxC;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,mCAAiC,aAAMC,OAAzD;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;;8CAEHG,2BAAeU,eAAf,E;;;AAAjBC,cAAAA,Q;;AAEN,kBAAGA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAjC,EAAmC;AAC/BnB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCQ,QAAzC;AACH,eAFD,MAGI;AACAlB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,2BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBgB,cAAAA,G,GAAMjB,GAAG,CAACkB,MAAJ,CAAWD,G;;8CACDb,2BAAee,cAAf,CAA8BF,GAA9B,C;;;AAAhBG,cAAAA,O;;AAEN,kBAAGA,OAAH,EAAW;AACPvB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCa,OAAvC;AACH,eAFD,MAGI;AACAvB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCQ,GAAtC;AACH;;gDACMpB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAGtBgB,cAAAA,G,GAAMjB,GAAG,CAACkB,MAAJ,CAAWD,G;AACjBG,cAAAA,O,GAAUpB,GAAG,CAACG,I;;8CAEaC,2BAAeiB,iBAAf,CAAiCJ,GAAjC,EAAqCG,OAArC,C;;;AAA3BE,cAAAA,kB;;AAEN,kBAAGA,kBAAH,EAAsB;AAClBzB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0Ce,kBAA1C;AACH,eAFD,MAGI;AACAzB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCQ,GAAtC;AACH;;gDAEMpB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBgB,cAAAA,G,GAAMjB,GAAG,CAACkB,MAAJ,CAAWD,G;;8CACQb,2BAAemB,eAAf,CAA+BN,GAA/B,C;;;AAAzBO,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAoB;AAChB3B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCQ,GAAtC;AACH;;gDAEMpB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAMJF,iB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import PersonaService from '../services/PersonaService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass PersonaController {\r\n    static async crearPersona(req, res) {    \r\n        try {    \r\n            const nuevaPersona = req.body;\r\n            const personaCreada = await PersonaService.agregarPersona(nuevaPersona);\r\n            \r\n            util.setSuccess(201,'Persona añadida',personaCreada);            \r\n            \r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async crearPersonas(req, res) {    \r\n        //Recibe un arreglo objetos Persona para ser creadas, se insertan todas (si no hay error), o ninguna (si hay error)\r\n        try {    \r\n            const nuevasPersonas = req.body;\r\n            const personasCreadas = await PersonaService.agregarPersonas(nuevasPersonas);\r\n            util.setSuccess(201,'Personas añadidas',personasCreadas);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,\"No se añadieron las personas: \"+error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerPersonas(req, res){\r\n        try {\r\n            const personas = await PersonaService.obtenerPersonas();\r\n            \r\n            if(personas && personas.length > 0){\r\n                util.setSuccess(200,'Personas obtenidas',personas);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Personas'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerPersona(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const persona = await PersonaService.obtenerPersona(dni);\r\n            \r\n            if(persona){\r\n                util.setSuccess(200,'Persona obtenida',persona);\r\n            }\r\n            else{\r\n                util.setError(404,`Persona con dni: ${dni} no encontrada `);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async actualizarPersona(req, res){\r\n        //preguntar por cambios de dni ? \r\n        try {\r\n            const dni = req.params.dni;\r\n            const persona = req.body;\r\n\r\n            const personaActualizada = await PersonaService.actualizarPersona(dni,persona);\r\n\r\n            if(personaActualizada){\r\n                util.setSuccess(200,'Persona actualizada',personaActualizada);\r\n            }\r\n            else{\r\n                util.setError(404,`Persona con dni: ${dni} no encontrada `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarPersona(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const personaEliminada = await PersonaService.eliminarPersona(dni);\r\n\r\n            if(personaEliminada){\r\n                util.setSuccess(200,'Persona eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Persona con dni: ${dni} no encontrada `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default PersonaController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595619004817
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Persona.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Persona.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Persona.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Persona.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Persona.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Persona = _database.sequelize.define('Persona', {\n  dni: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  apellido: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fecha_nacimiento: {\n    type: _sequelize[\"default\"].DATE\n  },\n  telefono: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  correo: {\n    type: _sequelize[\"default\"].TEXT\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Persona;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbmEuanMiXSwibmFtZXMiOlsiUGVyc29uYSIsInNlcXVlbGl6ZSIsImRlZmluZSIsImRuaSIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsIm5vbWJyZSIsIlRFWFQiLCJhcGVsbGlkbyIsImZlY2hhX25hY2ltaWVudG8iLCJEQVRFIiwidGVsZWZvbm8iLCJjb3JyZW8iLCJ0aW1lc3RhbXBzIiwiZnJlZXplVGFibGVOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQ3hDQyxFQUFBQSxHQUFHLEVBQUU7QUFDREMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEZjtBQUVEQyxJQUFBQSxVQUFVLEVBQUU7QUFGWCxHQURtQztBQUt4Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FMZ0M7QUFReENDLEVBQUFBLFFBQVEsRUFBRTtBQUNOTixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURWLEdBUjhCO0FBV3hDRSxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNkUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVTztBQURGLEdBWHNCO0FBY3hDQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEVixHQWQ4QjtBQWlCeENLLEVBQUFBLE1BQU0sRUFBRTtBQUNKVixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaO0FBakJnQyxDQUE1QixFQW9CYjtBQUNDTSxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FwQmEsQ0FBaEI7O2VBeUJlaEIsTyIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcbmNvbnN0IFBlcnNvbmEgPSBzZXF1ZWxpemUuZGVmaW5lKCdQZXJzb25hJywge1xyXG4gICAgZG5pOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5vbWJyZToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgYXBlbGxpZG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGZlY2hhX25hY2ltaWVudG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuREFURVxyXG4gICAgfSxcclxuICAgIHRlbGVmb25vOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBjb3JyZW86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfVxyXG59LCB7XHJcbiAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQZXJzb25hOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Persona.js"
      ],
      "names": [
        "Persona",
        "sequelize",
        "define",
        "dni",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "apellido",
        "fecha_nacimiento",
        "DATE",
        "telefono",
        "correo",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,OADf;AAEDC,IAAAA,UAAU,EAAE;AAFX,GADmC;AAKxCC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GALgC;AAQxCC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAR8B;AAWxCE,EAAAA,gBAAgB,EAAE;AACdP,IAAAA,IAAI,EAAEC,sBAAUO;AADF,GAXsB;AAcxCC,EAAAA,QAAQ,EAAE;AACNT,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAd8B;AAiBxCK,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAEC,sBAAUI;AADZ;AAjBgC,CAA5B,EAoBb;AACCM,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CApBa,CAAhB;;eAyBehB,O",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport { sequelize } from '../database/database';\r\n\r\nconst Persona = sequelize.define('Persona', {\r\n    dni: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    apellido: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fecha_nacimiento: {\r\n        type: Sequelize.DATE\r\n    },\r\n    telefono: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    correo: {\r\n        type: Sequelize.TEXT\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nexport default Persona;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142506
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\database\\\\database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\database\\database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\database\\database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\database\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\database",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sequelize = new _sequelize[\"default\"]( //'Futsal',\n'postgres', 'postgres', //user\n//'postgres', //pass\n's3a22op827', {\n  //host: '170.210.81.246',\n  host: 'localhost',\n  //port: '30432',\n  port: '5432',\n  dialect: 'postgres',\n  pool: {\n    max: 3,\n    min: 0,\n    require: 30000,\n    idle: 10000\n  },\n  logging: true\n});\nexports.sequelize = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJwb3J0IiwiZGlhbGVjdCIsInBvb2wiLCJtYXgiLCJtaW4iLCJyZXF1aXJlIiwiaWRsZSIsImxvZ2dpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVPLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxxQkFBSixFQUNyQjtBQUNBLFVBRnFCLEVBR3JCLFVBSHFCLEVBR1Q7QUFDWjtBQUNBLFlBTHFCLEVBT3JCO0FBQ0k7QUFDQUMsRUFBQUEsSUFBSSxFQUFFLFdBRlY7QUFHSTtBQUNBQyxFQUFBQSxJQUFJLEVBQUUsTUFKVjtBQUtJQyxFQUFBQSxPQUFPLEVBQUUsVUFMYjtBQU1JQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsR0FBRyxFQUFFLENBREg7QUFFRkMsSUFBQUEsR0FBRyxFQUFFLENBRkg7QUFHRkMsSUFBQUEsT0FBTyxFQUFFLEtBSFA7QUFJRkMsSUFBQUEsSUFBSSxFQUFFO0FBSkosR0FOVjtBQVlJQyxFQUFBQSxPQUFPLEVBQUU7QUFaYixDQVBxQixDQUFsQiIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxkYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuXHJcbmV4cG9ydCBjb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKFxyXG4gICAgLy8nRnV0c2FsJyxcclxuICAgICdwb3N0Z3JlcycsXHJcbiAgICAncG9zdGdyZXMnLCAvL3VzZXJcclxuICAgIC8vJ3Bvc3RncmVzJywgLy9wYXNzXHJcbiAgICAnczNhMjJvcDgyNycsXHJcblxyXG4gICAge1xyXG4gICAgICAgIC8vaG9zdDogJzE3MC4yMTAuODEuMjQ2JyxcclxuICAgICAgICBob3N0OiAnbG9jYWxob3N0JyxcclxuICAgICAgICAvL3BvcnQ6ICczMDQzMicsXHJcbiAgICAgICAgcG9ydDogJzU0MzInLFxyXG4gICAgICAgIGRpYWxlY3Q6ICdwb3N0Z3JlcycsXHJcbiAgICAgICAgcG9vbDoge1xyXG4gICAgICAgICAgICBtYXg6IDMsXHJcbiAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgcmVxdWlyZTogMzAwMDAsXHJcbiAgICAgICAgICAgIGlkbGU6IDEwMDAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBsb2dnaW5nOiB0cnVlXHJcbiAgICB9XHJcbikiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "port",
        "dialect",
        "pool",
        "max",
        "min",
        "require",
        "idle",
        "logging"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,EACrB;AACA,UAFqB,EAGrB,UAHqB,EAGT;AACZ;AACA,YALqB,EAOrB;AACI;AACAC,EAAAA,IAAI,EAAE,WAFV;AAGI;AACAC,EAAAA,IAAI,EAAE,MAJV;AAKIC,EAAAA,OAAO,EAAE,UALb;AAMIC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AAEFC,IAAAA,GAAG,EAAE,CAFH;AAGFC,IAAAA,OAAO,EAAE,KAHP;AAIFC,IAAAA,IAAI,EAAE;AAJJ,GANV;AAYIC,EAAAA,OAAO,EAAE;AAZb,CAPqB,CAAlB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\database",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\n\r\nexport const sequelize = new Sequelize(\r\n    //'Futsal',\r\n    'postgres',\r\n    'postgres', //user\r\n    //'postgres', //pass\r\n    's3a22op827',\r\n\r\n    {\r\n        //host: '170.210.81.246',\r\n        host: 'localhost',\r\n        //port: '30432',\r\n        port: '5432',\r\n        dialect: 'postgres',\r\n        pool: {\r\n            max: 3,\r\n            min: 0,\r\n            require: 30000,\r\n            idle: 10000\r\n        },\r\n        logging: true\r\n    }\r\n)"
      ]
    },
    "sourceType": "script",
    "mtime": 1585535413034
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\jugador.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\jugador.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\jugador.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\jugador.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "jugador.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _jugador = _interopRequireDefault(require(\"../controllers/jugador.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.post('/', _jugador[\"default\"].crearJugador); // crea un jugador, de acuerdo a los parámetros pasados en el body\n\nrouter.get('/', _jugador[\"default\"].obtenerJugadores); //obtener todos los jugadores almacenados en la base\n\nrouter.get('/:dni', _jugador[\"default\"].obtenerJugador); //obtener jugador por :dni\n\nrouter.put('/:dni', _jugador[\"default\"].actualizarJugador); //actualizar los datos del jugador con :dni\n\nrouter[\"delete\"]('/:dni', _jugador[\"default\"].eliminarJugador); //elimina el jugador de la base\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp1Z2Fkb3IuanMiXSwibmFtZXMiOlsicm91dGVyIiwicG9zdCIsIkp1Z2Fkb3JDb250cm9sbGVyIiwiY3JlYXJKdWdhZG9yIiwiZ2V0Iiwib2J0ZW5lckp1Z2Fkb3JlcyIsIm9idGVuZXJKdWdhZG9yIiwicHV0IiwiYWN0dWFsaXphckp1Z2Fkb3IiLCJlbGltaW5hckp1Z2Fkb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxHQUFaLEVBQWdCQyxvQkFBa0JDLFlBQWxDLEUsQ0FBaUQ7O0FBQ2pESCxNQUFNLENBQUNJLEdBQVAsQ0FBVyxHQUFYLEVBQWVGLG9CQUFrQkcsZ0JBQWpDLEUsQ0FBb0Q7O0FBQ3BETCxNQUFNLENBQUNJLEdBQVAsQ0FBVyxPQUFYLEVBQW1CRixvQkFBa0JJLGNBQXJDLEUsQ0FBc0Q7O0FBQ3RETixNQUFNLENBQUNPLEdBQVAsQ0FBVyxPQUFYLEVBQW1CTCxvQkFBa0JNLGlCQUFyQyxFLENBQTBEOztBQUMxRFIsTUFBTSxVQUFOLENBQWMsT0FBZCxFQUFzQkUsb0JBQWtCTyxlQUF4QyxFLENBQTBEOztlQUczQ1QsTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5pbXBvcnQgSnVnYWRvckNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvanVnYWRvci5jb250cm9sbGVyJztcclxuXHJcbnJvdXRlci5wb3N0KCcvJyxKdWdhZG9yQ29udHJvbGxlci5jcmVhckp1Z2Fkb3IpOyAvLyBjcmVhIHVuIGp1Z2Fkb3IsIGRlIGFjdWVyZG8gYSBsb3MgcGFyw6FtZXRyb3MgcGFzYWRvcyBlbiBlbCBib2R5XHJcbnJvdXRlci5nZXQoJy8nLEp1Z2Fkb3JDb250cm9sbGVyLm9idGVuZXJKdWdhZG9yZXMpOyAvL29idGVuZXIgdG9kb3MgbG9zIGp1Z2Fkb3JlcyBhbG1hY2VuYWRvcyBlbiBsYSBiYXNlXHJcbnJvdXRlci5nZXQoJy86ZG5pJyxKdWdhZG9yQ29udHJvbGxlci5vYnRlbmVySnVnYWRvcik7IC8vb2J0ZW5lciBqdWdhZG9yIHBvciA6ZG5pXHJcbnJvdXRlci5wdXQoJy86ZG5pJyxKdWdhZG9yQ29udHJvbGxlci5hY3R1YWxpemFySnVnYWRvcik7ICAvL2FjdHVhbGl6YXIgbG9zIGRhdG9zIGRlbCBqdWdhZG9yIGNvbiA6ZG5pXHJcbnJvdXRlci5kZWxldGUoJy86ZG5pJyxKdWdhZG9yQ29udHJvbGxlci5lbGltaW5hckp1Z2Fkb3IpOyAvL2VsaW1pbmEgZWwganVnYWRvciBkZSBsYSBiYXNlXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "jugador.js"
      ],
      "names": [
        "router",
        "post",
        "JugadorController",
        "crearJugador",
        "get",
        "obtenerJugadores",
        "obtenerJugador",
        "put",
        "actualizarJugador",
        "eliminarJugador"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAgBC,oBAAkBC,YAAlC,E,CAAiD;;AACjDH,MAAM,CAACI,GAAP,CAAW,GAAX,EAAeF,oBAAkBG,gBAAjC,E,CAAoD;;AACpDL,MAAM,CAACI,GAAP,CAAW,OAAX,EAAmBF,oBAAkBI,cAArC,E,CAAsD;;AACtDN,MAAM,CAACO,GAAP,CAAW,OAAX,EAAmBL,oBAAkBM,iBAArC,E,CAA0D;;AAC1DR,MAAM,UAAN,CAAc,OAAd,EAAsBE,oBAAkBO,eAAxC,E,CAA0D;;eAG3CT,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport JugadorController from '../controllers/jugador.controller';\r\n\r\nrouter.post('/',JugadorController.crearJugador); // crea un jugador, de acuerdo a los parámetros pasados en el body\r\nrouter.get('/',JugadorController.obtenerJugadores); //obtener todos los jugadores almacenados en la base\r\nrouter.get('/:dni',JugadorController.obtenerJugador); //obtener jugador por :dni\r\nrouter.put('/:dni',JugadorController.actualizarJugador);  //actualizar los datos del jugador con :dni\r\nrouter.delete('/:dni',JugadorController.eliminarJugador); //elimina el jugador de la base\r\n\r\n\r\nexport default router;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595619276343
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\jugador.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\jugador.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\jugador.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\jugador.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "jugador.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _JugadorService = _interopRequireDefault(require(\"../services/JugadorService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Jugador = _interopRequireDefault(require(\"../models/Jugador\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar JugadorController =\n/*#__PURE__*/\nfunction () {\n  function JugadorController() {\n    _classCallCheck(this, JugadorController);\n  }\n\n  _createClass(JugadorController, null, [{\n    key: \"crearJugador\",\n    value: function crearJugador(req, res) {\n      var nuevoJugador, jugadorCreado;\n      return regeneratorRuntime.async(function crearJugador$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoJugador = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].agregarJugador(nuevoJugador));\n\n            case 4:\n              jugadorCreado = _context.sent;\n              util.setSuccess(201, 'Jugador añadido', jugadorCreado);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerJugador\",\n    value: function obtenerJugador(req, res) {\n      var dni, jugador;\n      return regeneratorRuntime.async(function obtenerJugador$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dni = req.params.dni;\n              _context2.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].obtenerJugador(dni));\n\n            case 4:\n              jugador = _context2.sent;\n\n              if (jugador) {\n                util.setSuccess(200, 'Jugador obtenido', jugador);\n              } else {\n                util.setError(404, \"Jugador con dni: \".concat(dni, \" no encontrado\"));\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(404, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerJugadorPersona\",\n    value: function obtenerJugadorPersona(req, res) {\n      var dni, jugador, persona;\n      return regeneratorRuntime.async(function obtenerJugadorPersona$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dni = req.params.dni;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].obtenerJugador(dni));\n\n            case 4:\n              jugador = _context3.sent;\n\n              if (!jugador) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 8;\n              return regeneratorRuntime.awrap(jugador.getPersona());\n\n            case 8:\n              persona = _context3.sent;\n              //console.log(\"persona obtenida:\",persona.dataValues);\n              util.setSuccess(200, 'Datos completos del jugador');\n\n            case 10:\n              _context3.next = 14;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores(req, res) {\n      var jugadores;\n      return regeneratorRuntime.async(function obtenerJugadores$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].obtenerJugadores());\n\n            case 3:\n              jugadores = _context4.sent;\n\n              if (jugadores && jugadores.length > 0) {\n                util.setSuccess(200, 'Jugadores obtenidos', jugadores);\n              } else {\n                util.setSuccess(200, 'No se encuentran Jugadores');\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(400, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"actualizarJugador\",\n    value: function actualizarJugador(req, res) {\n      var dni, jugador, jugadorActualizado;\n      return regeneratorRuntime.async(function actualizarJugador$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dni = req.params.dni;\n              jugador = req.body;\n              _context5.next = 5;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].actualizarJugador(dni, jugador));\n\n            case 5:\n              jugadorActualizado = _context5.sent;\n\n              if (jugadorActualizado) {\n                util.setSuccess(200, 'Jugador actualizado', jugadorActualizado);\n              } else {\n                util.setError(404, \"Jugador con dni: \".concat(dni, \" no encontrado \"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarJugador\",\n    value: function eliminarJugador(req, res) {\n      var dni, jugadorEliminado;\n      return regeneratorRuntime.async(function eliminarJugador$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dni = req.params.dni;\n              _context6.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].eliminarJugador(dni));\n\n            case 4:\n              jugadorEliminado = _context6.sent;\n\n              if (jugadorEliminado) {\n                util.setSuccess(200, 'Jugador eliminada');\n              } else {\n                util.setError(404, \"Jugador con dni: \".concat(dni, \" no encontrado \"));\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return JugadorController;\n}();\n\nvar _default = JugadorController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp1Z2Fkb3IuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJ1dGlsIiwiVXRpbCIsIkp1Z2Fkb3JDb250cm9sbGVyIiwicmVxIiwicmVzIiwibnVldm9KdWdhZG9yIiwiYm9keSIsIkp1Z2Fkb3JTZXJ2aWNlIiwiYWdyZWdhckp1Z2Fkb3IiLCJqdWdhZG9yQ3JlYWRvIiwic2V0U3VjY2VzcyIsInNlbmQiLCJzZXRFcnJvciIsIm1lc3NhZ2UiLCJkbmkiLCJwYXJhbXMiLCJvYnRlbmVySnVnYWRvciIsImp1Z2Fkb3IiLCJnZXRQZXJzb25hIiwicGVyc29uYSIsIm9idGVuZXJKdWdhZG9yZXMiLCJqdWdhZG9yZXMiLCJsZW5ndGgiLCJhY3R1YWxpemFySnVnYWRvciIsImp1Z2Fkb3JBY3R1YWxpemFkbyIsImVsaW1pbmFySnVnYWRvciIsImp1Z2Fkb3JFbGltaW5hZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7OztBQUVBLElBQU1BLElBQUksR0FBRyxJQUFJQyxpQkFBSixFQUFiOztJQUVNQyxpQjs7Ozs7Ozs7O2lDQUN3QkMsRyxFQUFLQyxHOzs7Ozs7O0FBRWpCQyxjQUFBQSxZLEdBQWVGLEdBQUcsQ0FBQ0csSTs7OENBQ0dDLDJCQUFlQyxjQUFmLENBQThCSCxZQUE5QixDOzs7QUFBdEJJLGNBQUFBLGE7QUFFTlQsY0FBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLGlCQUFwQixFQUFzQ0QsYUFBdEM7K0NBQ09ULElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7O0FBR1BKLGNBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsRUFBa0IsWUFBTUMsT0FBeEI7K0NBQ09iLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7Ozs7Ozs7O21DQUlhRCxHLEVBQUtDLEc7Ozs7Ozs7QUFFbkJVLGNBQUFBLEcsR0FBTVgsR0FBRyxDQUFDWSxNQUFKLENBQVdELEc7OzhDQUNEUCwyQkFBZVMsY0FBZixDQUE4QkYsR0FBOUIsQzs7O0FBQWhCRyxjQUFBQSxPOztBQUVOLGtCQUFHQSxPQUFILEVBQVc7QUFDUGpCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0Isa0JBQXBCLEVBQXVDTyxPQUF2QztBQUNILGVBRkQsTUFHSTtBQUNBakIsZ0JBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsNkJBQXNDRSxHQUF0QztBQUNIOztnREFDTWQsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7MENBSW9CRCxHLEVBQUlDLEc7Ozs7Ozs7QUFFekJVLGNBQUFBLEcsR0FBTVgsR0FBRyxDQUFDWSxNQUFKLENBQVdELEc7OzhDQUNEUCwyQkFBZVMsY0FBZixDQUE4QkYsR0FBOUIsQzs7O0FBQWhCRyxjQUFBQSxPOzttQkFDRkEsTzs7Ozs7OzhDQUNzQkEsT0FBTyxDQUFDQyxVQUFSLEU7OztBQUFoQkMsY0FBQUEsTztBQUNOO0FBQ0FuQixjQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsNkJBQXBCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FDQVNrQlAsRyxFQUFLQyxHOzs7Ozs7Ozs4Q0FFSEcsMkJBQWVhLGdCQUFmLEU7OztBQUFsQkMsY0FBQUEsUzs7QUFFTixrQkFBR0EsU0FBUyxJQUFJQSxTQUFTLENBQUNDLE1BQVYsR0FBbUIsQ0FBbkMsRUFBcUM7QUFDakN0QixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLHFCQUFwQixFQUEwQ1csU0FBMUM7QUFDSCxlQUZELE1BR0k7QUFDQXJCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsNEJBQXBCO0FBQ0g7O2dEQUNNVixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7OztBQUdQSixjQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLGFBQU1DLE9BQXhCO2dEQUNPYixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7Ozs7Ozs7OztzQ0FJZ0JELEcsRUFBS0MsRzs7Ozs7OztBQUd0QlUsY0FBQUEsRyxHQUFNWCxHQUFHLENBQUNZLE1BQUosQ0FBV0QsRztBQUNqQkcsY0FBQUEsTyxHQUFVZCxHQUFHLENBQUNHLEk7OzhDQUVhQywyQkFBZWdCLGlCQUFmLENBQWlDVCxHQUFqQyxFQUFxQ0csT0FBckMsQzs7O0FBQTNCTyxjQUFBQSxrQjs7QUFFTixrQkFBR0Esa0JBQUgsRUFBc0I7QUFDbEJ4QixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLHFCQUFwQixFQUEwQ2Msa0JBQTFDO0FBQ0gsZUFGRCxNQUdJO0FBQ0F4QixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCw2QkFBc0NFLEdBQXRDO0FBQ0g7O2dEQUVNZCxJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7OztBQUdQSixjQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLGFBQU1DLE9BQXhCO2dEQUNPYixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7Ozs7Ozs7OztvQ0FJY0QsRyxFQUFLQyxHOzs7Ozs7O0FBRXBCVSxjQUFBQSxHLEdBQU1YLEdBQUcsQ0FBQ1ksTUFBSixDQUFXRCxHOzs4Q0FDUVAsMkJBQWVrQixlQUFmLENBQStCWCxHQUEvQixDOzs7QUFBekJZLGNBQUFBLGdCOztBQUVOLGtCQUFHQSxnQkFBSCxFQUFvQjtBQUNoQjFCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsbUJBQXBCO0FBQ0gsZUFGRCxNQUdJO0FBQ0FWLGdCQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLDZCQUFzQ0UsR0FBdEM7QUFDSDs7Z0RBRU1kLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7O0FBR1BKLGNBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsRUFBa0IsYUFBTUMsT0FBeEI7Z0RBQ09iLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7Ozs7Ozs7Ozs7O2VBTUpGLGlCIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEp1Z2Fkb3JTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL0p1Z2Fkb3JTZXJ2aWNlJztcclxuaW1wb3J0IFV0aWwgZnJvbSAnLi4vdXRpbHMvVXRpbHMnO1xyXG5pbXBvcnQgSnVnYWRvciBmcm9tICcuLi9tb2RlbHMvSnVnYWRvcic7XHJcblxyXG5jb25zdCB1dGlsID0gbmV3IFV0aWwoKTtcclxuXHJcbmNsYXNzIEp1Z2Fkb3JDb250cm9sbGVyIHtcclxuICAgIHN0YXRpYyBhc3luYyBjcmVhckp1Z2Fkb3IocmVxLCByZXMpIHsgICAgXHJcbiAgICAgICAgdHJ5IHsgICAgXHJcbiAgICAgICAgICAgIGNvbnN0IG51ZXZvSnVnYWRvciA9IHJlcS5ib2R5O1xyXG4gICAgICAgICAgICBjb25zdCBqdWdhZG9yQ3JlYWRvID0gYXdhaXQgSnVnYWRvclNlcnZpY2UuYWdyZWdhckp1Z2Fkb3IobnVldm9KdWdhZG9yKTtcclxuXHJcbiAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDEsJ0p1Z2Fkb3IgYcOxYWRpZG8nLGp1Z2Fkb3JDcmVhZG8pO1xyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlcnJvcil7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDAwLGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVySnVnYWRvcihyZXEsIHJlcyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgZG5pID0gcmVxLnBhcmFtcy5kbmk7XHJcbiAgICAgICAgICAgIGNvbnN0IGp1Z2Fkb3IgPSBhd2FpdCBKdWdhZG9yU2VydmljZS5vYnRlbmVySnVnYWRvcihkbmkpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYoanVnYWRvcil7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdKdWdhZG9yIG9idGVuaWRvJyxqdWdhZG9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsYEp1Z2Fkb3IgY29uIGRuaTogJHtkbml9IG5vIGVuY29udHJhZG9gKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsZXJyb3IubWVzc2FnZSk7ICAgXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTsgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJKdWdhZG9yUGVyc29uYShyZXEscmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBkbmkgPSByZXEucGFyYW1zLmRuaTtcclxuICAgICAgICAgICAgY29uc3QganVnYWRvciA9IGF3YWl0IEp1Z2Fkb3JTZXJ2aWNlLm9idGVuZXJKdWdhZG9yKGRuaSk7XHJcbiAgICAgICAgICAgIGlmIChqdWdhZG9yKXtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHBlcnNvbmEgPSBhd2FpdCBqdWdhZG9yLmdldFBlcnNvbmEoKTtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJwZXJzb25hIG9idGVuaWRhOlwiLHBlcnNvbmEuZGF0YVZhbHVlcyk7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdEYXRvcyBjb21wbGV0b3MgZGVsIGp1Z2Fkb3InLClcclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVySnVnYWRvcmVzKHJlcSwgcmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBqdWdhZG9yZXMgPSBhd2FpdCBKdWdhZG9yU2VydmljZS5vYnRlbmVySnVnYWRvcmVzKCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZihqdWdhZG9yZXMgJiYganVnYWRvcmVzLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnSnVnYWRvcmVzIG9idGVuaWRvcycsanVnYWRvcmVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnTm8gc2UgZW5jdWVudHJhbiBKdWdhZG9yZXMnKTsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDAwLGVycm9yLm1lc3NhZ2UpOyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFySnVnYWRvcihyZXEsIHJlcyl7XHJcbiAgICAgICAgLy9wcmVndW50YXIgcG9yIGNhbWJpb3MgZGUgZG5pID8gXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgZG5pID0gcmVxLnBhcmFtcy5kbmk7XHJcbiAgICAgICAgICAgIGNvbnN0IGp1Z2Fkb3IgPSByZXEuYm9keTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGp1Z2Fkb3JBY3R1YWxpemFkbyA9IGF3YWl0IEp1Z2Fkb3JTZXJ2aWNlLmFjdHVhbGl6YXJKdWdhZG9yKGRuaSxqdWdhZG9yKTtcclxuXHJcbiAgICAgICAgICAgIGlmKGp1Z2Fkb3JBY3R1YWxpemFkbyl7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdKdWdhZG9yIGFjdHVhbGl6YWRvJyxqdWdhZG9yQWN0dWFsaXphZG8pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxgSnVnYWRvciBjb24gZG5pOiAke2RuaX0gbm8gZW5jb250cmFkbyBgKTtcclxuICAgICAgICAgICAgfSBcclxuXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxlcnJvci5tZXNzYWdlKTsgICBcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZWxpbWluYXJKdWdhZG9yKHJlcSwgcmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBkbmkgPSByZXEucGFyYW1zLmRuaTtcclxuICAgICAgICAgICAgY29uc3QganVnYWRvckVsaW1pbmFkbyA9IGF3YWl0IEp1Z2Fkb3JTZXJ2aWNlLmVsaW1pbmFySnVnYWRvcihkbmkpO1xyXG5cclxuICAgICAgICAgICAgaWYoanVnYWRvckVsaW1pbmFkbyl7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdKdWdhZG9yIGVsaW1pbmFkYScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxgSnVnYWRvciBjb24gZG5pOiAke2RuaX0gbm8gZW5jb250cmFkbyBgKTtcclxuICAgICAgICAgICAgfSBcclxuXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxlcnJvci5tZXNzYWdlKTsgICBcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEp1Z2Fkb3JDb250cm9sbGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "jugador.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "JugadorController",
        "req",
        "res",
        "nuevoJugador",
        "body",
        "JugadorService",
        "agregarJugador",
        "jugadorCreado",
        "setSuccess",
        "send",
        "setError",
        "message",
        "dni",
        "params",
        "obtenerJugador",
        "jugador",
        "getPersona",
        "persona",
        "obtenerJugadores",
        "jugadores",
        "length",
        "actualizarJugador",
        "jugadorActualizado",
        "eliminarJugador",
        "jugadorEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,iB;;;;;;;;;iCACwBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,Y,GAAeF,GAAG,CAACG,I;;8CACGC,2BAAeC,cAAf,CAA8BH,YAA9B,C;;;AAAtBI,cAAAA,a;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCD,aAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBU,cAAAA,G,GAAMX,GAAG,CAACY,MAAJ,CAAWD,G;;8CACDP,2BAAeS,cAAf,CAA8BF,GAA9B,C;;;AAAhBG,cAAAA,O;;AAEN,kBAAGA,OAAH,EAAW;AACPjB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCO,OAAvC;AACH,eAFD,MAGI;AACAjB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCE,GAAtC;AACH;;gDACMd,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;0CAIoBD,G,EAAIC,G;;;;;;;AAEzBU,cAAAA,G,GAAMX,GAAG,CAACY,MAAJ,CAAWD,G;;8CACDP,2BAAeS,cAAf,CAA8BF,GAA9B,C;;;AAAhBG,cAAAA,O;;mBACFA,O;;;;;;8CACsBA,OAAO,CAACC,UAAR,E;;;AAAhBC,cAAAA,O;AACN;AACAnB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,6BAApB;;;;;;;;;;;;;;;;;;;qCASkBP,G,EAAKC,G;;;;;;;;8CAEHG,2BAAea,gBAAf,E;;;AAAlBC,cAAAA,S;;AAEN,kBAAGA,SAAS,IAAIA,SAAS,CAACC,MAAV,GAAmB,CAAnC,EAAqC;AACjCtB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0CW,SAA1C;AACH,eAFD,MAGI;AACArB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,4BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAGtBU,cAAAA,G,GAAMX,GAAG,CAACY,MAAJ,CAAWD,G;AACjBG,cAAAA,O,GAAUd,GAAG,CAACG,I;;8CAEaC,2BAAegB,iBAAf,CAAiCT,GAAjC,EAAqCG,OAArC,C;;;AAA3BO,cAAAA,kB;;AAEN,kBAAGA,kBAAH,EAAsB;AAClBxB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0Cc,kBAA1C;AACH,eAFD,MAGI;AACAxB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCE,GAAtC;AACH;;gDAEMd,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBU,cAAAA,G,GAAMX,GAAG,CAACY,MAAJ,CAAWD,G;;8CACQP,2BAAekB,eAAf,CAA+BX,GAA/B,C;;;AAAzBY,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAoB;AAChB1B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCE,GAAtC;AACH;;gDAEMd,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAMJF,iB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import JugadorService from '../services/JugadorService';\r\nimport Util from '../utils/Utils';\r\nimport Jugador from '../models/Jugador';\r\n\r\nconst util = new Util();\r\n\r\nclass JugadorController {\r\n    static async crearJugador(req, res) {    \r\n        try {    \r\n            const nuevoJugador = req.body;\r\n            const jugadorCreado = await JugadorService.agregarJugador(nuevoJugador);\r\n\r\n            util.setSuccess(201,'Jugador añadido',jugadorCreado);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerJugador(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugador = await JugadorService.obtenerJugador(dni);\r\n            \r\n            if(jugador){\r\n                util.setSuccess(200,'Jugador obtenido',jugador);\r\n            }\r\n            else{\r\n                util.setError(404,`Jugador con dni: ${dni} no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerJugadorPersona(req,res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugador = await JugadorService.obtenerJugador(dni);\r\n            if (jugador){\r\n                const persona = await jugador.getPersona();\r\n                //console.log(\"persona obtenida:\",persona.dataValues);\r\n                util.setSuccess(200,'Datos completos del jugador',)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    static async obtenerJugadores(req, res){\r\n        try {\r\n            const jugadores = await JugadorService.obtenerJugadores();\r\n            \r\n            if(jugadores && jugadores.length > 0){\r\n                util.setSuccess(200,'Jugadores obtenidos',jugadores);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Jugadores'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async actualizarJugador(req, res){\r\n        //preguntar por cambios de dni ? \r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugador = req.body;\r\n\r\n            const jugadorActualizado = await JugadorService.actualizarJugador(dni,jugador);\r\n\r\n            if(jugadorActualizado){\r\n                util.setSuccess(200,'Jugador actualizado',jugadorActualizado);\r\n            }\r\n            else{\r\n                util.setError(404,`Jugador con dni: ${dni} no encontrado `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarJugador(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugadorEliminado = await JugadorService.eliminarJugador(dni);\r\n\r\n            if(jugadorEliminado){\r\n                util.setSuccess(200,'Jugador eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Jugador con dni: ${dni} no encontrado `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default JugadorController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595641817688
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Jugador.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Jugador.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Jugador.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Jugador.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Jugador.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Persona = _interopRequireDefault(require(\"./Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Jugador = _database.sequelize.define('Jugador', {\n  dni: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  legajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  facultad: {\n    type: _sequelize[\"default\"].TEXT\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n}); //Jugador.belongsTo(Persona, {foreingKey: 'dni', sourceKey: 'dni' });  //no agregué como clave foránea porque agrega un atributo Persondni (eso lo tiene la base)\n//Jugador.belongsTo(Persona, { foreingKey: 'dni', targetKey:'dni'});\n\n\nJugador.belongsTo(_Persona[\"default\"], {\n  foreignKey: 'dni',\n  as: 'persona'\n});\n/*Jugador.buscarJugador = async function (dni){\r\n    return await this.findOne({\r\n        where: {dni},\r\n      });\r\n    }; */\n\nvar _default = Jugador;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3IuanMiXSwibmFtZXMiOlsiSnVnYWRvciIsInNlcXVlbGl6ZSIsImRlZmluZSIsImRuaSIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImxlZ2FqbyIsIlRFWFQiLCJmYWN1bHRhZCIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiLCJiZWxvbmdzVG8iLCJQZXJzb25hIiwiZm9yZWlnbktleSIsImFzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFGbUM7QUFJbkMsSUFBTUEsT0FBTyxHQUFHQyxvQkFBVUMsTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUNwQ0MsRUFBQUEsR0FBRyxFQUFFO0FBQ0RDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRGY7QUFFREMsSUFBQUEsVUFBVSxFQUFFO0FBRlgsR0FEK0I7QUFLcENDLEVBQUFBLE1BQU0sRUFBRTtBQUNKSixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaLEdBTDRCO0FBUXBDQyxFQUFBQSxRQUFRLEVBQUU7QUFDTk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEVjtBQVIwQixDQUE1QixFQVdUO0FBQ0NFLEVBQUFBLFVBQVUsRUFBRSxLQURiO0FBRUNDLEVBQUFBLGVBQWUsRUFBRTtBQUZsQixDQVhTLENBQWhCLEMsQ0FrQkE7QUFDQTs7O0FBRUFaLE9BQU8sQ0FBQ2EsU0FBUixDQUFrQkMsbUJBQWxCLEVBQTBCO0FBQUNDLEVBQUFBLFVBQVUsRUFBRSxLQUFiO0FBQW9CQyxFQUFBQSxFQUFFLEVBQUM7QUFBdkIsQ0FBMUI7QUFFQTs7Ozs7O2VBTWVoQixPIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJzsgLy8gY2xhc2UgU2VxdWVsaXplXHJcbmltcG9ydCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJyAvL2NvbmV4aW9uIGEgbGEgYmFzZVxyXG5pbXBvcnQgUGVyc29uYSBmcm9tICcuL1BlcnNvbmEnXHJcblxyXG5jb25zdCBKdWdhZG9yID0gc2VxdWVsaXplLmRlZmluZSgnSnVnYWRvcicsIHtcclxuICAgICAgICBkbmk6IHtcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgICAgICB9LCBcclxuICAgICAgICBsZWdham86IHtcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgICAgICB9LFxyXG4gICAgICAgIGZhY3VsdGFkOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxyXG4gICAgICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSBcclxuICAgIH1cclxuXHJcbik7XHJcblxyXG4vL0p1Z2Fkb3IuYmVsb25nc1RvKFBlcnNvbmEsIHtmb3JlaW5nS2V5OiAnZG5pJywgc291cmNlS2V5OiAnZG5pJyB9KTsgIC8vbm8gYWdyZWd1w6kgY29tbyBjbGF2ZSBmb3LDoW5lYSBwb3JxdWUgYWdyZWdhIHVuIGF0cmlidXRvIFBlcnNvbmRuaSAoZXNvIGxvIHRpZW5lIGxhIGJhc2UpXHJcbi8vSnVnYWRvci5iZWxvbmdzVG8oUGVyc29uYSwgeyBmb3JlaW5nS2V5OiAnZG5pJywgdGFyZ2V0S2V5OidkbmknfSk7XHJcblxyXG5KdWdhZG9yLmJlbG9uZ3NUbyhQZXJzb25hLHtmb3JlaWduS2V5OiAnZG5pJywgYXM6J3BlcnNvbmEnfSk7XHJcblxyXG4vKkp1Z2Fkb3IuYnVzY2FySnVnYWRvciA9IGFzeW5jIGZ1bmN0aW9uIChkbmkpe1xyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZmluZE9uZSh7XHJcbiAgICAgICAgd2hlcmU6IHtkbml9LFxyXG4gICAgICB9KTtcclxuICAgIH07ICovXHJcblxyXG5leHBvcnQgZGVmYXVsdCBKdWdhZG9yOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Jugador.js"
      ],
      "names": [
        "Jugador",
        "sequelize",
        "define",
        "dni",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "legajo",
        "TEXT",
        "facultad",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Persona",
        "foreignKey",
        "as"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAFmC;AAInC,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AACpCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,OADf;AAEDC,IAAAA,UAAU,EAAE;AAFX,GAD+B;AAKpCC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAL4B;AAQpCC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAUI;AADV;AAR0B,CAA5B,EAWT;AACCE,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAXS,CAAhB,C,CAkBA;AACA;;;AAEAZ,OAAO,CAACa,SAAR,CAAkBC,mBAAlB,EAA0B;AAACC,EAAAA,UAAU,EAAE,KAAb;AAAoBC,EAAAA,EAAE,EAAC;AAAvB,CAA1B;AAEA;;;;;;eAMehB,O",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\nimport Persona from './Persona'\r\n\r\nconst Jugador = sequelize.define('Jugador', {\r\n        dni: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey: true\r\n        }, \r\n        legajo: {\r\n            type: Sequelize.TEXT\r\n        },\r\n        facultad: {\r\n            type: Sequelize.TEXT\r\n        }\r\n    }, {\r\n        timestamps: false,\r\n        freezeTableName: true \r\n    }\r\n\r\n);\r\n\r\n//Jugador.belongsTo(Persona, {foreingKey: 'dni', sourceKey: 'dni' });  //no agregué como clave foránea porque agrega un atributo Persondni (eso lo tiene la base)\r\n//Jugador.belongsTo(Persona, { foreingKey: 'dni', targetKey:'dni'});\r\n\r\nJugador.belongsTo(Persona,{foreignKey: 'dni', as:'persona'});\r\n\r\n/*Jugador.buscarJugador = async function (dni){\r\n    return await this.findOne({\r\n        where: {dni},\r\n      });\r\n    }; */\r\n\r\nexport default Jugador;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595619021601
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\utils\\\\Utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\utils\\Utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\utils\\Utils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\utils\\Utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\utils",
        "sourceFileName": "Utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//Este archivo contiene todas las respuestas, en caso de operaciones OK o con errores. \nvar Util =\n/*#__PURE__*/\nfunction () {\n  function Util() {\n    _classCallCheck(this, Util);\n\n    this.statusCode = null;\n    this.type = null;\n    this.data = null;\n    this.message = null;\n  }\n\n  _createClass(Util, [{\n    key: \"setSuccess\",\n    value: function setSuccess(statusCode, message, data) {\n      this.statusCode = statusCode;\n      this.message = message;\n      this.data = data;\n      this.type = 'success';\n    }\n  }, {\n    key: \"setError\",\n    value: function setError(statusCode, message) {\n      this.statusCode = statusCode;\n      this.message = message;\n      this.type = 'error';\n    }\n  }, {\n    key: \"send\",\n    value: function send(res) {\n      var result = {\n        status: this.type,\n        message: this.message,\n        data: this.data\n      };\n\n      if (this.type === 'success') {\n        return res.status(this.statusCode).json(result);\n      }\n\n      return res.status(this.statusCode).json({\n        status: this.type,\n        message: this.message\n      });\n    }\n  }]);\n\n  return Util;\n}();\n\nexports[\"default\"] = Util;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlV0aWxzLmpzIl0sIm5hbWVzIjpbIlV0aWwiLCJzdGF0dXNDb2RlIiwidHlwZSIsImRhdGEiLCJtZXNzYWdlIiwicmVzIiwicmVzdWx0Iiwic3RhdHVzIiwianNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0lBRXFCQSxJOzs7QUFDakIsa0JBQWM7QUFBQTs7QUFDWixTQUFLQyxVQUFMLEdBQWtCLElBQWxCO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDQSxTQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNBLFNBQUtDLE9BQUwsR0FBZSxJQUFmO0FBQ0Q7Ozs7K0JBRVVILFUsRUFBWUcsTyxFQUFTRCxJLEVBQU07QUFDcEMsV0FBS0YsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxXQUFLRyxPQUFMLEdBQWVBLE9BQWY7QUFDQSxXQUFLRCxJQUFMLEdBQVlBLElBQVo7QUFDQSxXQUFLRCxJQUFMLEdBQVksU0FBWjtBQUNEOzs7NkJBRVFELFUsRUFBWUcsTyxFQUFTO0FBQzVCLFdBQUtILFVBQUwsR0FBa0JBLFVBQWxCO0FBQ0EsV0FBS0csT0FBTCxHQUFlQSxPQUFmO0FBQ0EsV0FBS0YsSUFBTCxHQUFZLE9BQVo7QUFDRDs7O3lCQUVJRyxHLEVBQUs7QUFDUixVQUFNQyxNQUFNLEdBQUc7QUFDYkMsUUFBQUEsTUFBTSxFQUFFLEtBQUtMLElBREE7QUFFYkUsUUFBQUEsT0FBTyxFQUFFLEtBQUtBLE9BRkQ7QUFHYkQsUUFBQUEsSUFBSSxFQUFFLEtBQUtBO0FBSEUsT0FBZjs7QUFNQSxVQUFJLEtBQUtELElBQUwsS0FBYyxTQUFsQixFQUE2QjtBQUMzQixlQUFPRyxHQUFHLENBQUNFLE1BQUosQ0FBVyxLQUFLTixVQUFoQixFQUE0Qk8sSUFBNUIsQ0FBaUNGLE1BQWpDLENBQVA7QUFDRDs7QUFDRCxhQUFPRCxHQUFHLENBQUNFLE1BQUosQ0FBVyxLQUFLTixVQUFoQixFQUE0Qk8sSUFBNUIsQ0FBaUM7QUFDdENELFFBQUFBLE1BQU0sRUFBRSxLQUFLTCxJQUR5QjtBQUV0Q0UsUUFBQUEsT0FBTyxFQUFFLEtBQUtBO0FBRndCLE9BQWpDLENBQVA7QUFJRCIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFx1dGlscyIsInNvdXJjZXNDb250ZW50IjpbIi8vRXN0ZSBhcmNoaXZvIGNvbnRpZW5lIHRvZGFzIGxhcyByZXNwdWVzdGFzLCBlbiBjYXNvIGRlIG9wZXJhY2lvbmVzIE9LIG8gY29uIGVycm9yZXMuIFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXRpbCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgdGhpcy5zdGF0dXNDb2RlID0gbnVsbDtcclxuICAgICAgdGhpcy50eXBlID0gbnVsbDtcclxuICAgICAgdGhpcy5kYXRhID0gbnVsbDtcclxuICAgICAgdGhpcy5tZXNzYWdlID0gbnVsbDtcclxuICAgIH1cclxuICBcclxuICAgIHNldFN1Y2Nlc3Moc3RhdHVzQ29kZSwgbWVzc2FnZSwgZGF0YSkge1xyXG4gICAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xyXG4gICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xyXG4gICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgICB0aGlzLnR5cGUgPSAnc3VjY2Vzcyc7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBzZXRFcnJvcihzdGF0dXNDb2RlLCBtZXNzYWdlKSB7XHJcbiAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XHJcbiAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XHJcbiAgICAgIHRoaXMudHlwZSA9ICdlcnJvcic7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBzZW5kKHJlcykge1xyXG4gICAgICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICAgICAgc3RhdHVzOiB0aGlzLnR5cGUsXHJcbiAgICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxyXG4gICAgICAgIGRhdGE6IHRoaXMuZGF0YSxcclxuICAgICAgfTtcclxuICBcclxuICAgICAgaWYgKHRoaXMudHlwZSA9PT0gJ3N1Y2Nlc3MnKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXModGhpcy5zdGF0dXNDb2RlKS5qc29uKHJlc3VsdCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXModGhpcy5zdGF0dXNDb2RlKS5qc29uKHtcclxuICAgICAgICBzdGF0dXM6IHRoaXMudHlwZSxcclxuICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Utils.js"
      ],
      "names": [
        "Util",
        "statusCode",
        "type",
        "data",
        "message",
        "res",
        "result",
        "status",
        "json"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;IAEqBA,I;;;AACjB,kBAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;;;;+BAEUH,U,EAAYG,O,EAASD,I,EAAM;AACpC,WAAKF,UAAL,GAAkBA,UAAlB;AACA,WAAKG,OAAL,GAAeA,OAAf;AACA,WAAKD,IAAL,GAAYA,IAAZ;AACA,WAAKD,IAAL,GAAY,SAAZ;AACD;;;6BAEQD,U,EAAYG,O,EAAS;AAC5B,WAAKH,UAAL,GAAkBA,UAAlB;AACA,WAAKG,OAAL,GAAeA,OAAf;AACA,WAAKF,IAAL,GAAY,OAAZ;AACD;;;yBAEIG,G,EAAK;AACR,UAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,KAAKL,IADA;AAEbE,QAAAA,OAAO,EAAE,KAAKA,OAFD;AAGbD,QAAAA,IAAI,EAAE,KAAKA;AAHE,OAAf;;AAMA,UAAI,KAAKD,IAAL,KAAc,SAAlB,EAA6B;AAC3B,eAAOG,GAAG,CAACE,MAAJ,CAAW,KAAKN,UAAhB,EAA4BO,IAA5B,CAAiCF,MAAjC,CAAP;AACD;;AACD,aAAOD,GAAG,CAACE,MAAJ,CAAW,KAAKN,UAAhB,EAA4BO,IAA5B,CAAiC;AACtCD,QAAAA,MAAM,EAAE,KAAKL,IADyB;AAEtCE,QAAAA,OAAO,EAAE,KAAKA;AAFwB,OAAjC,CAAP;AAID",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\utils",
      "sourcesContent": [
        "//Este archivo contiene todas las respuestas, en caso de operaciones OK o con errores. \r\n\r\nexport default class Util {\r\n    constructor() {\r\n      this.statusCode = null;\r\n      this.type = null;\r\n      this.data = null;\r\n      this.message = null;\r\n    }\r\n  \r\n    setSuccess(statusCode, message, data) {\r\n      this.statusCode = statusCode;\r\n      this.message = message;\r\n      this.data = data;\r\n      this.type = 'success';\r\n    }\r\n  \r\n    setError(statusCode, message) {\r\n      this.statusCode = statusCode;\r\n      this.message = message;\r\n      this.type = 'error';\r\n    }\r\n  \r\n    send(res) {\r\n      const result = {\r\n        status: this.type,\r\n        message: this.message,\r\n        data: this.data,\r\n      };\r\n  \r\n      if (this.type === 'success') {\r\n        return res.status(this.statusCode).json(result);\r\n      }\r\n      return res.status(this.statusCode).json({\r\n        status: this.type,\r\n        message: this.message,\r\n      });\r\n    }\r\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142517
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\PersonaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\PersonaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\PersonaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\PersonaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "PersonaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Persona = _interopRequireDefault(require(\"../models/Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PersonaService =\n/*#__PURE__*/\nfunction () {\n  function PersonaService() {\n    _classCallCheck(this, PersonaService);\n  }\n\n  _createClass(PersonaService, null, [{\n    key: \"agregarPersona\",\n    value: function agregarPersona(nuevaPersona) {\n      return regeneratorRuntime.async(function agregarPersona$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].create(nuevaPersona));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"agregarPersonas\",\n    value: function agregarPersonas(nuevasPersonas) {\n      var operacion;\n      return regeneratorRuntime.async(function agregarPersonas$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].bulkCreate(nuevasPersonas, {\n                returning: true\n              })\n              /*.then(function()\r\n              {\r\n                //console.log(\"Personas añadidas con bulkCreate()\");\r\n                //console.log(persona);\r\n                return nuevasPersonas;\r\n              }) */\n              [\"catch\"](function (error) {\n                //para identificar cuál sería la persona que no se añadió \n                //console.log('failed to create Personas');\n                //console.log(error);\n                throw new Error(error.parent.detail);\n              }));\n\n            case 2:\n              operacion = _context2.sent;\n              return _context2.abrupt(\"return\", nuevasPersonas);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"obtenerPersonas\",\n    value: function obtenerPersonas() {\n      return regeneratorRuntime.async(function obtenerPersonas$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findAll());\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerPersona\",\n    value: function obtenerPersona(dni) {\n      var persona;\n      return regeneratorRuntime.async(function obtenerPersona$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findByPk(dni));\n\n            case 3:\n              persona = _context4.sent;\n              return _context4.abrupt(\"return\", persona);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarPersona\",\n    value: function actualizarPersona(dni, persona) {\n      var personaExistente;\n      return regeneratorRuntime.async(function actualizarPersona$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findByPk(dni));\n\n            case 3:\n              personaExistente = _context5.sent;\n\n              if (!personaExistente) {\n                _context5.next = 10;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].update(persona, {\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              return _context5.abrupt(\"return\", persona);\n\n            case 10:\n              return _context5.abrupt(\"return\", null);\n\n            case 11:\n              _context5.next = 16;\n              break;\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarPersona\",\n    value: function eliminarPersona(dni) {\n      var personaExistente, personaEliminada;\n      return regeneratorRuntime.async(function eliminarPersona$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findByPk(dni));\n\n            case 3:\n              personaExistente = _context6.sent;\n\n              if (!personaExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].destroy({\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              personaEliminada = _context6.sent;\n              return _context6.abrupt(\"return\", personaEliminada);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return PersonaService;\n}();\n\nvar _default = PersonaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbmFTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIlBlcnNvbmFTZXJ2aWNlIiwibnVldmFQZXJzb25hIiwiUGVyc29uYSIsImNyZWF0ZSIsIm51ZXZhc1BlcnNvbmFzIiwiYnVsa0NyZWF0ZSIsInJldHVybmluZyIsImVycm9yIiwiRXJyb3IiLCJwYXJlbnQiLCJkZXRhaWwiLCJvcGVyYWNpb24iLCJmaW5kQWxsIiwiZG5pIiwiZmluZEJ5UGsiLCJwZXJzb25hIiwicGVyc29uYUV4aXN0ZW50ZSIsInVwZGF0ZSIsIndoZXJlIiwiZGVzdHJveSIsInBlcnNvbmFFbGltaW5hZGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVNQSxjOzs7Ozs7Ozs7bUNBQzBCQyxZOzs7Ozs7OzhDQUVYQyxvQkFBUUMsTUFBUixDQUFlRixZQUFmLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBTVlHLGM7Ozs7Ozs7OENBQ0hGLG9CQUFRRyxVQUFSLENBQW1CRCxjQUFuQixFQUFrQztBQUFDRSxnQkFBQUEsU0FBUyxFQUFDO0FBQVgsZUFBbEM7QUFDeEI7Ozs7OztBQUR3Qix3QkFPaEIsVUFBU0MsS0FBVCxFQUFlO0FBQUU7QUFDdkI7QUFDQTtBQUNBLHNCQUFNLElBQUlDLEtBQUosQ0FBV0QsS0FBSyxDQUFDRSxNQUFOLENBQWFDLE1BQXhCLENBQU47QUFDRCxlQVh1QixDOzs7QUFBbEJDLGNBQUFBLFM7Z0RBYUNQLGM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4Q0FLUUYsb0JBQVFVLE9BQVIsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQ0FPV0MsRzs7Ozs7Ozs7OENBRUZYLG9CQUFRWSxRQUFSLENBQWlCRCxHQUFqQixDOzs7QUFBaEJFLGNBQUFBLE87Z0RBQ0NBLE87Ozs7Ozs7Ozs7Ozs7Ozs7c0NBT29CRixHLEVBQUlFLE87Ozs7Ozs7OzhDQUVBYixvQkFBUVksUUFBUixDQUFpQkQsR0FBakIsQzs7O0FBQXpCRyxjQUFBQSxnQjs7bUJBRUhBLGdCOzs7Ozs7OENBQ0tkLG9CQUFRZSxNQUFSLENBQWVGLE9BQWYsRUFBdUI7QUFBQ0csZ0JBQUFBLEtBQUssRUFBQztBQUFDTCxrQkFBQUEsR0FBRyxFQUFDQTtBQUFMO0FBQVAsZUFBdkIsQzs7O2dEQUNDRSxPOzs7Z0RBR0EsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBUWdCRixHOzs7Ozs7Ozs4Q0FFTVgsb0JBQVFZLFFBQVIsQ0FBaUJELEdBQWpCLEM7OztBQUF6QkcsY0FBQUEsZ0I7O21CQUVIQSxnQjs7Ozs7OzhDQUM4QmQsb0JBQVFpQixPQUFSLENBQWdCO0FBQUNELGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLEdBQUcsRUFBQ0E7QUFBTDtBQUFQLGVBQWhCLEM7OztBQUF6Qk8sY0FBQUEsZ0I7Z0RBQ0NBLGdCOzs7Z0RBR0EsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFTQXBCLGMiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGVyc29uYSBmcm9tICcuLi9tb2RlbHMvUGVyc29uYSc7XHJcblxyXG5jbGFzcyBQZXJzb25hU2VydmljZSB7ICBcclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyUGVyc29uYShudWV2YVBlcnNvbmEpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgUGVyc29uYS5jcmVhdGUobnVldmFQZXJzb25hKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyUGVyc29uYXMobnVldmFzUGVyc29uYXMpe1xyXG4gICAgICBjb25zdCBvcGVyYWNpb24gPSBhd2FpdCBQZXJzb25hLmJ1bGtDcmVhdGUobnVldmFzUGVyc29uYXMse3JldHVybmluZzp0cnVlfSlcclxuICAgICAgLyoudGhlbihmdW5jdGlvbigpXHJcbiAgICAgIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKFwiUGVyc29uYXMgYcOxYWRpZGFzIGNvbiBidWxrQ3JlYXRlKClcIik7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhwZXJzb25hKTtcclxuICAgICAgICByZXR1cm4gbnVldmFzUGVyc29uYXM7XHJcbiAgICAgIH0pICovXHJcbiAgICAgIC5jYXRjaCAoZnVuY3Rpb24oZXJyb3IpeyAvL3BhcmEgaWRlbnRpZmljYXIgY3XDoWwgc2Vyw61hIGxhIHBlcnNvbmEgcXVlIG5vIHNlIGHDsWFkacOzIFxyXG4gICAgICAgIC8vY29uc29sZS5sb2coJ2ZhaWxlZCB0byBjcmVhdGUgUGVyc29uYXMnKTtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IgKGVycm9yLnBhcmVudC5kZXRhaWwpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiBudWV2YXNQZXJzb25hcztcclxuICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJQZXJzb25hcygpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBQZXJzb25hLmZpbmRBbGwoKTtcclxuICAgICAgfSBcclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7ICAgXHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclBlcnNvbmEoZG5pKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBwZXJzb25hID0gYXdhaXQgUGVyc29uYS5maW5kQnlQayhkbmkpO1xyXG4gICAgICAgIHJldHVybiBwZXJzb25hO1xyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFyUGVyc29uYShkbmkscGVyc29uYSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcGVyc29uYUV4aXN0ZW50ZSA9IGF3YWl0IFBlcnNvbmEuZmluZEJ5UGsoZG5pKTtcclxuXHJcbiAgICAgICAgaWYocGVyc29uYUV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBhd2FpdCBQZXJzb25hLnVwZGF0ZShwZXJzb25hLHt3aGVyZTp7ZG5pOmRuaX19KTtcclxuICAgICAgICAgIHJldHVybiBwZXJzb25hOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBcclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hclBlcnNvbmEoZG5pKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBwZXJzb25hRXhpc3RlbnRlID0gYXdhaXQgUGVyc29uYS5maW5kQnlQayhkbmkpO1xyXG5cclxuICAgICAgICBpZihwZXJzb25hRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGNvbnN0IHBlcnNvbmFFbGltaW5hZGEgPSBhd2FpdCBQZXJzb25hLmRlc3Ryb3koe3doZXJlOntkbmk6ZG5pfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIHBlcnNvbmFFbGltaW5hZGE7IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbn0gXHJcbiAgXHJcbiAgZXhwb3J0IGRlZmF1bHQgUGVyc29uYVNlcnZpY2U7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "PersonaService.js"
      ],
      "names": [
        "PersonaService",
        "nuevaPersona",
        "Persona",
        "create",
        "nuevasPersonas",
        "bulkCreate",
        "returning",
        "error",
        "Error",
        "parent",
        "detail",
        "operacion",
        "findAll",
        "dni",
        "findByPk",
        "persona",
        "personaExistente",
        "update",
        "where",
        "destroy",
        "personaEliminada"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,c;;;;;;;;;mCAC0BC,Y;;;;;;;8CAEXC,oBAAQC,MAAR,CAAeF,YAAf,C;;;;;;;;;;;;;;;;;;;oCAMYG,c;;;;;;;8CACHF,oBAAQG,UAAR,CAAmBD,cAAnB,EAAkC;AAACE,gBAAAA,SAAS,EAAC;AAAX,eAAlC;AACxB;;;;;;AADwB,wBAOhB,UAASC,KAAT,EAAe;AAAE;AACvB;AACA;AACA,sBAAM,IAAIC,KAAJ,CAAWD,KAAK,CAACE,MAAN,CAAaC,MAAxB,CAAN;AACD,eAXuB,C;;;AAAlBC,cAAAA,S;gDAaCP,c;;;;;;;;;;;;;;;;;;8CAKQF,oBAAQU,OAAR,E;;;;;;;;;;;;;;;;;;;mCAOWC,G;;;;;;;;8CAEFX,oBAAQY,QAAR,CAAiBD,GAAjB,C;;;AAAhBE,cAAAA,O;gDACCA,O;;;;;;;;;;;;;;;;sCAOoBF,G,EAAIE,O;;;;;;;;8CAEAb,oBAAQY,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CACKd,oBAAQe,MAAR,CAAeF,OAAf,EAAuB;AAACG,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAvB,C;;;gDACCE,O;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBF,G;;;;;;;;8CAEMX,oBAAQY,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CAC8Bd,oBAAQiB,OAAR,CAAgB;AAACD,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAhB,C;;;AAAzBO,cAAAA,gB;gDACCA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASApB,c",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Persona from '../models/Persona';\r\n\r\nclass PersonaService {  \r\n    static async agregarPersona(nuevaPersona) {\r\n      try {\r\n        return await Persona.create(nuevaPersona);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async agregarPersonas(nuevasPersonas){\r\n      const operacion = await Persona.bulkCreate(nuevasPersonas,{returning:true})\r\n      /*.then(function()\r\n      {\r\n        //console.log(\"Personas añadidas con bulkCreate()\");\r\n        //console.log(persona);\r\n        return nuevasPersonas;\r\n      }) */\r\n      .catch (function(error){ //para identificar cuál sería la persona que no se añadió \r\n        //console.log('failed to create Personas');\r\n        //console.log(error);\r\n        throw new Error (error.parent.detail);\r\n      });\r\n\r\n      return nuevasPersonas;\r\n  }\r\n\r\n    static async obtenerPersonas(){\r\n      try {\r\n        return await Persona.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerPersona(dni){\r\n      try {\r\n        const persona = await Persona.findByPk(dni);\r\n        return persona;\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n    \r\n    static async actualizarPersona(dni,persona){\r\n      try {\r\n        const personaExistente = await Persona.findByPk(dni);\r\n\r\n        if(personaExistente){\r\n          await Persona.update(persona,{where:{dni:dni}});\r\n          return persona; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarPersona(dni){\r\n      try {\r\n        const personaExistente = await Persona.findByPk(dni);\r\n\r\n        if(personaExistente){\r\n          const personaEliminada = await Persona.destroy({where:{dni:dni}});\r\n          return personaEliminada; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n} \r\n  \r\n  export default PersonaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595618992790
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\JugadorService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\JugadorService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\JugadorService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\JugadorService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "JugadorService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Jugador = _interopRequireDefault(require(\"../models/Jugador\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar JugadorService =\n/*#__PURE__*/\nfunction () {\n  function JugadorService() {\n    _classCallCheck(this, JugadorService);\n  }\n\n  _createClass(JugadorService, null, [{\n    key: \"agregarJugador\",\n    value: function agregarJugador(nuevoJugador) {\n      return regeneratorRuntime.async(function agregarJugador$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].create(nuevoJugador));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores() {\n      return regeneratorRuntime.async(function obtenerJugadores$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findAll({\n                attributes: ['dni', 'legajo', 'facultad']\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerJugador\",\n    value: function obtenerJugador(dni) {\n      var jugador;\n      return regeneratorRuntime.async(function obtenerJugador$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findByPk(dni));\n\n            case 3:\n              jugador = _context3.sent;\n              return _context3.abrupt(\"return\", jugador);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarJugador\",\n    value: function actualizarJugador(dni, jugador) {\n      var jugadorExistente;\n      return regeneratorRuntime.async(function actualizarJugador$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findByPk(dni));\n\n            case 3:\n              jugadorExistente = _context4.sent;\n\n              if (!jugadorExistente) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.next = 7;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].update(jugador, {\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              return _context4.abrupt(\"return\", jugador);\n\n            case 10:\n              return _context4.abrupt(\"return\", null);\n\n            case 11:\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarJugador\",\n    value: function eliminarJugador(dni) {\n      var jugadorExistente, jugadorEliminado;\n      return regeneratorRuntime.async(function eliminarJugador$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findByPk(dni));\n\n            case 3:\n              jugadorExistente = _context5.sent;\n\n              if (!jugadorExistente) {\n                _context5.next = 11;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].destroy({\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              jugadorEliminado = _context5.sent;\n              return _context5.abrupt(\"return\", jugadorEliminado);\n\n            case 11:\n              return _context5.abrupt(\"return\", null);\n\n            case 12:\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return JugadorService;\n}();\n\nvar _default = JugadorService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3JTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIkp1Z2Fkb3JTZXJ2aWNlIiwibnVldm9KdWdhZG9yIiwiSnVnYWRvciIsImNyZWF0ZSIsImZpbmRBbGwiLCJhdHRyaWJ1dGVzIiwiZG5pIiwiZmluZEJ5UGsiLCJqdWdhZG9yIiwianVnYWRvckV4aXN0ZW50ZSIsInVwZGF0ZSIsIndoZXJlIiwiZGVzdHJveSIsImp1Z2Fkb3JFbGltaW5hZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVNQSxjOzs7Ozs7Ozs7bUNBQzBCQyxZOzs7Ozs7OzhDQUVYQyxvQkFBUUMsTUFBUixDQUFlRixZQUFmLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQVNBQyxvQkFBUUUsT0FBUixDQUFnQjtBQUMzQkMsZ0JBQUFBLFVBQVUsRUFBQyxDQUFDLEtBQUQsRUFBTyxRQUFQLEVBQWdCLFVBQWhCO0FBRGdCLGVBQWhCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBU1dDLEc7Ozs7Ozs7OzhDQUVGSixvQkFBUUssUUFBUixDQUFpQkQsR0FBakIsQzs7O0FBQWhCRSxjQUFBQSxPO2dEQUNDQSxPOzs7Ozs7Ozs7Ozs7Ozs7O3NDQU9vQkYsRyxFQUFJRSxPOzs7Ozs7Ozs4Q0FFQU4sb0JBQVFLLFFBQVIsQ0FBaUJELEdBQWpCLEM7OztBQUF6QkcsY0FBQUEsZ0I7O21CQUVIQSxnQjs7Ozs7OzhDQUNLUCxvQkFBUVEsTUFBUixDQUFlRixPQUFmLEVBQXVCO0FBQUNHLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLEdBQUcsRUFBQ0E7QUFBTDtBQUFQLGVBQXZCLEM7OztnREFDQ0UsTzs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29DQVFnQkYsRzs7Ozs7Ozs7OENBRU1KLG9CQUFRSyxRQUFSLENBQWlCRCxHQUFqQixDOzs7QUFBekJHLGNBQUFBLGdCOzttQkFFSEEsZ0I7Ozs7Ozs4Q0FDOEJQLG9CQUFRVSxPQUFSLENBQWdCO0FBQUNELGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLEdBQUcsRUFBQ0E7QUFBTDtBQUFQLGVBQWhCLEM7OztBQUF6Qk8sY0FBQUEsZ0I7Z0RBQ0NBLGdCOzs7Z0RBR0EsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFTQWIsYyIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKdWdhZG9yIGZyb20gJy4uL21vZGVscy9KdWdhZG9yJztcclxuXHJcbmNsYXNzIEp1Z2Fkb3JTZXJ2aWNlIHsgIFxyXG4gICAgc3RhdGljIGFzeW5jIGFncmVnYXJKdWdhZG9yKG51ZXZvSnVnYWRvcikge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBKdWdhZG9yLmNyZWF0ZShudWV2b0p1Z2Fkb3IpO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVySnVnYWRvcmVzKCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IEp1Z2Fkb3IuZmluZEFsbCh7XHJcbiAgICAgICAgICBhdHRyaWJ1dGVzOlsnZG5pJywnbGVnYWpvJywnZmFjdWx0YWQnXX1cclxuICAgICAgICApO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjsgICBcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVySnVnYWRvcihkbmkpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGp1Z2Fkb3IgPSBhd2FpdCBKdWdhZG9yLmZpbmRCeVBrKGRuaSk7XHJcbiAgICAgICAgcmV0dXJuIGp1Z2Fkb3I7IFxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFySnVnYWRvcihkbmksanVnYWRvcil7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QganVnYWRvckV4aXN0ZW50ZSA9IGF3YWl0IEp1Z2Fkb3IuZmluZEJ5UGsoZG5pKTtcclxuXHJcbiAgICAgICAgaWYoanVnYWRvckV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBhd2FpdCBKdWdhZG9yLnVwZGF0ZShqdWdhZG9yLHt3aGVyZTp7ZG5pOmRuaX19KTtcclxuICAgICAgICAgIHJldHVybiBqdWdhZG9yOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBcclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hckp1Z2Fkb3IoZG5pKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBqdWdhZG9yRXhpc3RlbnRlID0gYXdhaXQgSnVnYWRvci5maW5kQnlQayhkbmkpO1xyXG5cclxuICAgICAgICBpZihqdWdhZG9yRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGNvbnN0IGp1Z2Fkb3JFbGltaW5hZG8gPSBhd2FpdCBKdWdhZG9yLmRlc3Ryb3koe3doZXJlOntkbmk6ZG5pfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIGp1Z2Fkb3JFbGltaW5hZG87IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbn0gXHJcbiAgXHJcbiAgZXhwb3J0IGRlZmF1bHQgSnVnYWRvclNlcnZpY2U7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "JugadorService.js"
      ],
      "names": [
        "JugadorService",
        "nuevoJugador",
        "Jugador",
        "create",
        "findAll",
        "attributes",
        "dni",
        "findByPk",
        "jugador",
        "jugadorExistente",
        "update",
        "where",
        "destroy",
        "jugadorEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,c;;;;;;;;;mCAC0BC,Y;;;;;;;8CAEXC,oBAAQC,MAAR,CAAeF,YAAf,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CASAC,oBAAQE,OAAR,CAAgB;AAC3BC,gBAAAA,UAAU,EAAC,CAAC,KAAD,EAAO,QAAP,EAAgB,UAAhB;AADgB,eAAhB,C;;;;;;;;;;;;;;;;;;;mCASWC,G;;;;;;;;8CAEFJ,oBAAQK,QAAR,CAAiBD,GAAjB,C;;;AAAhBE,cAAAA,O;gDACCA,O;;;;;;;;;;;;;;;;sCAOoBF,G,EAAIE,O;;;;;;;;8CAEAN,oBAAQK,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CACKP,oBAAQQ,MAAR,CAAeF,OAAf,EAAuB;AAACG,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAvB,C;;;gDACCE,O;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBF,G;;;;;;;;8CAEMJ,oBAAQK,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CAC8BP,oBAAQU,OAAR,CAAgB;AAACD,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAhB,C;;;AAAzBO,cAAAA,gB;gDACCA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASAb,c",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Jugador from '../models/Jugador';\r\n\r\nclass JugadorService {  \r\n    static async agregarJugador(nuevoJugador) {\r\n      try {\r\n        return await Jugador.create(nuevoJugador);\r\n      } \r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerJugadores(){\r\n      try {\r\n        return await Jugador.findAll({\r\n          attributes:['dni','legajo','facultad']}\r\n        );\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerJugador(dni){\r\n      try {\r\n        const jugador = await Jugador.findByPk(dni);\r\n        return jugador; \r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n    \r\n    static async actualizarJugador(dni,jugador){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          await Jugador.update(jugador,{where:{dni:dni}});\r\n          return jugador; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarJugador(dni){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n          return jugadorEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n} \r\n  \r\n  export default JugadorService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142512
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\torneo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\torneo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\torneo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\torneo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "torneo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _torneo = _interopRequireDefault(require(\"../controllers/torneo.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.post('/', _torneo[\"default\"].crearTorneo);\nrouter.get('/:anio&:tipo', _torneo[\"default\"].obtenerTorneo);\nrouter.get('/', _torneo[\"default\"].obtenerTorneos);\nrouter.get('/listas/:anio&:tipo', _torneo[\"default\"].obtenerListas);\nrouter.put('/:anio&:tipo', _torneo[\"default\"].actualizarTorneo);\nrouter.put('/:anio&:tipo', _torneo[\"default\"].actualizarTorneo);\nrouter[\"delete\"]('/:anio&:tipo', _torneo[\"default\"].eliminarTorneo);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvcm5lby5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJwb3N0IiwiVG9ybmVvQ29udHJvbGxlciIsImNyZWFyVG9ybmVvIiwiZ2V0Iiwib2J0ZW5lclRvcm5lbyIsIm9idGVuZXJUb3JuZW9zIiwib2J0ZW5lckxpc3RhcyIsInB1dCIsImFjdHVhbGl6YXJUb3JuZW8iLCJlbGltaW5hclRvcm5lbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOzs7O0FBRkEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLEdBQVosRUFBaUJDLG1CQUFpQkMsV0FBbEM7QUFDQUgsTUFBTSxDQUFDSSxHQUFQLENBQVcsY0FBWCxFQUEwQkYsbUJBQWlCRyxhQUEzQztBQUNBTCxNQUFNLENBQUNJLEdBQVAsQ0FBVyxHQUFYLEVBQWVGLG1CQUFpQkksY0FBaEM7QUFDQU4sTUFBTSxDQUFDSSxHQUFQLENBQVcscUJBQVgsRUFBaUNGLG1CQUFpQkssYUFBbEQ7QUFHQVAsTUFBTSxDQUFDUSxHQUFQLENBQVcsY0FBWCxFQUEwQk4sbUJBQWlCTyxnQkFBM0M7QUFFQVQsTUFBTSxDQUFDUSxHQUFQLENBQVcsY0FBWCxFQUEwQk4sbUJBQWlCTyxnQkFBM0M7QUFDQVQsTUFBTSxVQUFOLENBQWMsY0FBZCxFQUE2QkUsbUJBQWlCUSxjQUE5QztlQUVlVixNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbmltcG9ydCBUb3JuZW9Db250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3Rvcm5lby5jb250cm9sbGVyJztcclxuXHJcbnJvdXRlci5wb3N0KCcvJywgVG9ybmVvQ29udHJvbGxlci5jcmVhclRvcm5lbyk7XHJcbnJvdXRlci5nZXQoJy86YW5pbyY6dGlwbycsVG9ybmVvQ29udHJvbGxlci5vYnRlbmVyVG9ybmVvKTtcclxucm91dGVyLmdldCgnLycsVG9ybmVvQ29udHJvbGxlci5vYnRlbmVyVG9ybmVvcyk7XHJcbnJvdXRlci5nZXQoJy9saXN0YXMvOmFuaW8mOnRpcG8nLFRvcm5lb0NvbnRyb2xsZXIub2J0ZW5lckxpc3Rhcyk7XHJcblxyXG5cclxucm91dGVyLnB1dCgnLzphbmlvJjp0aXBvJyxUb3JuZW9Db250cm9sbGVyLmFjdHVhbGl6YXJUb3JuZW8pO1xyXG5cclxucm91dGVyLnB1dCgnLzphbmlvJjp0aXBvJyxUb3JuZW9Db250cm9sbGVyLmFjdHVhbGl6YXJUb3JuZW8pO1xyXG5yb3V0ZXIuZGVsZXRlKCcvOmFuaW8mOnRpcG8nLFRvcm5lb0NvbnRyb2xsZXIuZWxpbWluYXJUb3JuZW8pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "torneo.js"
      ],
      "names": [
        "router",
        "post",
        "TorneoController",
        "crearTorneo",
        "get",
        "obtenerTorneo",
        "obtenerTorneos",
        "obtenerListas",
        "put",
        "actualizarTorneo",
        "eliminarTorneo"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBC,mBAAiBC,WAAlC;AACAH,MAAM,CAACI,GAAP,CAAW,cAAX,EAA0BF,mBAAiBG,aAA3C;AACAL,MAAM,CAACI,GAAP,CAAW,GAAX,EAAeF,mBAAiBI,cAAhC;AACAN,MAAM,CAACI,GAAP,CAAW,qBAAX,EAAiCF,mBAAiBK,aAAlD;AAGAP,MAAM,CAACQ,GAAP,CAAW,cAAX,EAA0BN,mBAAiBO,gBAA3C;AAEAT,MAAM,CAACQ,GAAP,CAAW,cAAX,EAA0BN,mBAAiBO,gBAA3C;AACAT,MAAM,UAAN,CAAc,cAAd,EAA6BE,mBAAiBQ,cAA9C;eAEeV,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport TorneoController from '../controllers/torneo.controller';\r\n\r\nrouter.post('/', TorneoController.crearTorneo);\r\nrouter.get('/:anio&:tipo',TorneoController.obtenerTorneo);\r\nrouter.get('/',TorneoController.obtenerTorneos);\r\nrouter.get('/listas/:anio&:tipo',TorneoController.obtenerListas);\r\n\r\n\r\nrouter.put('/:anio&:tipo',TorneoController.actualizarTorneo);\r\n\r\nrouter.put('/:anio&:tipo',TorneoController.actualizarTorneo);\r\nrouter.delete('/:anio&:tipo',TorneoController.eliminarTorneo);\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142510
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\torneo.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\torneo.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\torneo.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\torneo.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "torneo.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _TorneoService = _interopRequireDefault(require(\"../services/TorneoService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar TorneoController =\n/*#__PURE__*/\nfunction () {\n  function TorneoController() {\n    _classCallCheck(this, TorneoController);\n  }\n\n  _createClass(TorneoController, null, [{\n    key: \"crearTorneo\",\n    value: function crearTorneo(req, res) {\n      var nuevoTorneo, torneoCreado;\n      return regeneratorRuntime.async(function crearTorneo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoTorneo = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].agregarTorneo(nuevoTorneo));\n\n            case 4:\n              torneoCreado = _context.sent;\n              util.setSuccess(201, 'Torneo añadido', torneoCreado);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTorneos\",\n    value: function obtenerTorneos(req, res) {\n      var torneos;\n      return regeneratorRuntime.async(function obtenerTorneos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerTorneos());\n\n            case 3:\n              torneos = _context2.sent;\n\n              if (torneos && torneos.length > 0) {\n                util.setSuccess(200, 'Torneos obtenidos', torneos);\n              } else {\n                util.setSuccess(200, 'No se encuentran Torneos');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(req, res) {\n      var anio, tipo, torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              anio = parseInt(req.params.anio);\n              tipo = req.params.tipo;\n              _context3.next = 5;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerTorneo(anio, tipo));\n\n            case 5:\n              torneo = _context3.sent;\n\n              if (torneo) {\n                util.setSuccess(200, 'Torneo obtenido', torneo);\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo, \"\\\" del a\\xF1o: \\\"\").concat(anio, \"\\\" no encontrado\"));\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarTorneo\",\n    value: function eliminarTorneo(req, res) {\n      var tipo, anio, torneoEliminado;\n      return regeneratorRuntime.async(function eliminarTorneo$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              tipo = req.params.tipo;\n              anio = parseInt(req.params.anio);\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].eliminarTorneo(anio, tipo));\n\n            case 5:\n              torneoEliminado = _context4.sent;\n\n              if (torneoEliminado) {\n                util.setSuccess(200, 'Torneo eliminado');\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo, \"\\\" del a\\xF1o: \\\"\").concat(anio, \"\\\" no encontrado\"));\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"actualizarTorneo\",\n    value: function actualizarTorneo(req, res) {\n      var anio, tipo, torneo, torneoActualizado;\n      return regeneratorRuntime.async(function actualizarTorneo$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              anio = parseInt(req.params.anio);\n              tipo = req.params.tipo;\n              torneo = req.body;\n              _context5.next = 6;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].actualizarTorneo(anio, tipo, torneo));\n\n            case 6:\n              torneoActualizado = _context5.sent;\n\n              if (torneoActualizado) {\n                util.setSuccess(200, 'Torneo actualizado', torneoActualizado);\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo, \"\\\" del a\\xF1o: \\\"\").concat(anio, \"\\\" no encontrado\"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias(anio_torneo, tipo_torneo) {\n      var categorias;\n      return regeneratorRuntime.async(function obtenerCategorias$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerCategorias(anio_torneo, tipo_torneo));\n\n            case 2:\n              categorias = _context6.sent;\n              return _context6.abrupt(\"return\", categorias);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"obtenerListas\",\n    value: function obtenerListas(req, res) {\n      var anio_torneo, tipo_torneo, listas;\n      return regeneratorRuntime.async(function obtenerListas$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              anio_torneo = req.params.anio;\n              tipo_torneo = req.params.tipo;\n              _context7.next = 5;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerListas(anio_torneo, tipo_torneo));\n\n            case 5:\n              listas = _context7.sent;\n\n              //console.log(\"Las lista obtenidas son \", listas);\n              if (listas) {\n                util.setSuccess(200, \"Listas del torneo: \\\"\".concat(tipo_torneo, \"\\\" del a\\xF1o: \\\"\").concat(anio_torneo, \"\\\"\"), listas);\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo_torneo, \"\\\" del a\\xF1o: \\\"\").concat(anio_torneo, \"\\\" no encontrado\"));\n              }\n\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](0);\n              util.setError(404, _context7.t0.message);\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }]);\n\n  return TorneoController;\n}();\n\nvar _default = TorneoController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "torneo.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "TorneoController",
        "req",
        "res",
        "nuevoTorneo",
        "body",
        "TorneoService",
        "agregarTorneo",
        "torneoCreado",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerTorneos",
        "torneos",
        "length",
        "anio",
        "parseInt",
        "params",
        "tipo",
        "obtenerTorneo",
        "torneo",
        "eliminarTorneo",
        "torneoEliminado",
        "actualizarTorneo",
        "torneoActualizado",
        "anio_torneo",
        "tipo_torneo",
        "obtenerCategorias",
        "categorias",
        "obtenerListas",
        "listas"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,gB;;;;;;;;;gCACuBC,G,EAAKC,G;;;;;;;AAEhBC,cAAAA,W,GAAcF,GAAG,CAACG,I;;8CACGC,0BAAcC,aAAd,CAA4BH,WAA5B,C;;;AAArBI,cAAAA,Y;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,gBAApB,EAAsCD,YAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;;8CAEHG,0BAAcO,cAAd,E;;;AAAhBC,cAAAA,O;;AAEN,kBAAGA,OAAO,IAAIA,OAAO,CAACC,MAAR,GAAiB,CAA/B,EAAiC;AAC7BhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCK,OAAxC;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,0BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAElBa,cAAAA,I,GAAOC,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWF,IAAZ,C;AACfG,cAAAA,I,GAAOjB,GAAG,CAACgB,MAAJ,CAAWC,I;;8CACHb,0BAAcc,aAAd,CAA4BJ,IAA5B,EAAiCG,IAAjC,C;;;AAAfE,cAAAA,M;;AAEN,kBAAGA,MAAH,EAAU;AACNtB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCY,MAAtC;AACH,eAFD,MAGI;AACAtB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BQ,IAA9B,8BAAiDH,IAAjD;AACH;;gDACMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBgB,cAAAA,I,GAAOjB,GAAG,CAACgB,MAAJ,CAAWC,I;AAClBH,cAAAA,I,GAAOC,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWF,IAAZ,C;;8CACSV,0BAAcgB,cAAd,CAA6BN,IAA7B,EAAkCG,IAAlC,C;;;AAAxBI,cAAAA,e;;AAEN,kBAAGA,eAAH,EAAmB;AACfxB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BQ,IAA9B,8BAAiDH,IAAjD;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;qCAIeD,G,EAAKC,G;;;;;;;AAErBa,cAAAA,I,GAAOC,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWF,IAAZ,C;AACfG,cAAAA,I,GAAOjB,GAAG,CAACgB,MAAJ,CAAWC,I;AAClBE,cAAAA,M,GAASnB,GAAG,CAACG,I;;8CAEaC,0BAAckB,gBAAd,CAA+BR,IAA/B,EAAoCG,IAApC,EAAyCE,MAAzC,C;;;AAA1BI,cAAAA,iB;;AAEN,kBAAGA,iBAAH,EAAqB;AACjB1B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCgB,iBAAzC;AACH,eAFD,MAGI;AACA1B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BQ,IAA9B,8BAAiDH,IAAjD;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBuB,W,EAAaC,W;;;;;;;8CAEfrB,0BAAcsB,iBAAd,CAAgCF,WAAhC,EAA4CC,WAA5C,C;;;AAAnBE,cAAAA,U;gDACCA,U;;;;;;;;;;;kCAGgB3B,G,EAAIC,G;;;;;;;AAEjBuB,cAAAA,W,GAAcxB,GAAG,CAACgB,MAAJ,CAAWF,I;AACzBW,cAAAA,W,GAAczB,GAAG,CAACgB,MAAJ,CAAWC,I;;8CAEVb,0BAAcwB,aAAd,CAA4BJ,WAA5B,EAAwCC,WAAxC,C;;;AAAfI,cAAAA,M;;AACV;AAEI,kBAAGA,MAAH,EAAU;AACNhC,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,iCAA2CkB,WAA3C,8BAAqED,WAArE,SAAoFK,MAApF;AACH,eAFD,MAGI;AACAhC,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BgB,WAA9B,8BAAwDD,WAAxD;AACH;;gDACM3B,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,gB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import TorneoService from '../services/TorneoService';\r\nimport Util from '../utils/Utils';\r\nimport Torneo from '../models/Torneo';\r\n\r\nconst util = new Util();\r\n\r\nclass TorneoController {\r\n    static async crearTorneo(req, res) {    \r\n        try {    \r\n            const nuevoTorneo = req.body;\r\n            const torneoCreado = await TorneoService.agregarTorneo(nuevoTorneo);\r\n\r\n            util.setSuccess(201,'Torneo añadido', torneoCreado);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerTorneos(req, res){\r\n        try {\r\n            const torneos = await TorneoService.obtenerTorneos();\r\n            \r\n            if(torneos && torneos.length > 0){\r\n                util.setSuccess(200,'Torneos obtenidos',torneos);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Torneos'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerTorneo(req, res){\r\n        try {\r\n            const anio = parseInt(req.params.anio);\r\n            const tipo = req.params.tipo;\r\n            const torneo = await TorneoService.obtenerTorneo(anio,tipo);\r\n            \r\n            if(torneo){\r\n                util.setSuccess(200,'Torneo obtenido',torneo);\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo}\" del año: \"${anio}\" no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarTorneo(req, res){\r\n        try {\r\n            const tipo = req.params.tipo;\r\n            const anio = parseInt(req.params.anio);\r\n            const torneoEliminado = await TorneoService.eliminarTorneo(anio,tipo);\r\n\r\n            if(torneoEliminado){\r\n                util.setSuccess(200,'Torneo eliminado');\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo}\" del año: \"${anio}\" no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    } \r\n\r\n    static async actualizarTorneo(req, res){\r\n        try {\r\n            const anio = parseInt(req.params.anio);\r\n            const tipo = req.params.tipo;\r\n            const torneo = req.body;\r\n\r\n            const torneoActualizado = await TorneoService.actualizarTorneo(anio,tipo,torneo);\r\n\r\n            if(torneoActualizado){\r\n                util.setSuccess(200,'Torneo actualizado',torneoActualizado);\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo}\" del año: \"${anio}\" no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n    \r\n    static async obtenerCategorias(anio_torneo, tipo_torneo){\r\n\r\n        const categorias = await TorneoService.obtenerCategorias(anio_torneo,tipo_torneo);\r\n        return categorias;\r\n    }\r\n\r\n    static async obtenerListas(req,res){\r\n        try {\r\n            const anio_torneo = req.params.anio;\r\n            const tipo_torneo = req.params.tipo;\r\n\r\n            const listas = await TorneoService.obtenerListas(anio_torneo,tipo_torneo);\r\n        //console.log(\"Las lista obtenidas son \", listas);\r\n           \r\n            if(listas){\r\n                util.setSuccess(200,`Listas del torneo: \"${tipo_torneo}\" del año: \"${anio_torneo}\"`,listas);\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo_torneo}\" del año: \"${anio_torneo}\" no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\nexport default TorneoController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142502
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\TorneoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\TorneoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\TorneoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\TorneoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "TorneoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nvar _Categoria = _interopRequireDefault(require(\"../models/Categoria\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"../models/ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TorneoService =\n/*#__PURE__*/\nfunction () {\n  function TorneoService() {\n    _classCallCheck(this, TorneoService);\n  }\n\n  _createClass(TorneoService, null, [{\n    key: \"agregarTorneo\",\n    value: function agregarTorneo(nuevoTorneo) {\n      return regeneratorRuntime.async(function agregarTorneo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].create(nuevoTorneo));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerTorneos\",\n    value: function obtenerTorneos() {\n      return regeneratorRuntime.async(function obtenerTorneos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(anio, tipo) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 3:\n              torneo = _context3.sent;\n              TorneoService.obtenerCategorias(anio, tipo);\n              return _context3.abrupt(\"return\", torneo);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias(anio, tipo) {\n      var categorias;\n      return regeneratorRuntime.async(function obtenerCategorias$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findAll({\n                raw: true,\n                where: {\n                  anio_torneo: anio,\n                  tipo_torneo: tipo\n                }\n              }));\n\n            case 3:\n              categorias = _context4.sent;\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerListas\",\n    value: function obtenerListas(anio_torneo, tipo_torneo) {\n      var listas;\n      return regeneratorRuntime.async(function obtenerListas$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findAll({\n                raw: true,\n                where: {\n                  anio_torneo: anio_torneo,\n                  tipo_torneo: tipo_torneo\n                }\n              }));\n\n            case 3:\n              listas = _context5.sent;\n              return _context5.abrupt(\"return\", listas);\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"eliminarTorneo\",\n    value: function eliminarTorneo(anio, tipo) {\n      var torneoExistente, torneoEliminado;\n      return regeneratorRuntime.async(function eliminarTorneo$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 3:\n              torneoExistente = _context6.sent;\n\n              if (!torneoExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].destroy({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 7:\n              torneoEliminado = _context6.sent;\n              return _context6.abrupt(\"return\", torneoEliminado);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"actualizarTorneo\",\n    value: function actualizarTorneo(anio, tipo, torneo) {\n      var torneoExistente;\n      return regeneratorRuntime.async(function actualizarTorneo$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 3:\n              torneoExistente = _context7.sent;\n\n              if (!torneoExistente) {\n                _context7.next = 10;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].update(torneo, {\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 7:\n              return _context7.abrupt(\"return\", torneo);\n\n            case 10:\n              return _context7.abrupt(\"return\", null);\n\n            case 11:\n              _context7.next = 16;\n              break;\n\n            case 13:\n              _context7.prev = 13;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 16:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }]);\n\n  return TorneoService;\n}();\n\nvar _default = TorneoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvcm5lb1NlcnZpY2UuanMiXSwibmFtZXMiOlsiVG9ybmVvU2VydmljZSIsIm51ZXZvVG9ybmVvIiwiVG9ybmVvIiwiY3JlYXRlIiwiZmluZEFsbCIsImFuaW8iLCJ0aXBvIiwiZmluZE9uZSIsIndoZXJlIiwidG9ybmVvIiwib2J0ZW5lckNhdGVnb3JpYXMiLCJDYXRlZ29yaWEiLCJyYXciLCJhbmlvX3Rvcm5lbyIsInRpcG9fdG9ybmVvIiwiY2F0ZWdvcmlhcyIsIkxpc3RhSW5zY3JpcGNpb24iLCJsaXN0YXMiLCJ0b3JuZW9FeGlzdGVudGUiLCJkZXN0cm95IiwidG9ybmVvRWxpbWluYWRvIiwidXBkYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7SUFFTUEsYTs7Ozs7Ozs7O2tDQUN5QkMsVzs7Ozs7Ozs4Q0FFVkMsbUJBQU9DLE1BQVAsQ0FBY0YsV0FBZCxDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4Q0FRQUMsbUJBQU9FLE9BQVAsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQ0FPVUMsSSxFQUFLQyxJOzs7Ozs7Ozs4Q0FFUEosbUJBQU9LLE9BQVAsQ0FBZTtBQUFDQyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNILGtCQUFBQSxJQUFJLEVBQUNBLElBQU47QUFBV0Msa0JBQUFBLElBQUksRUFBQ0E7QUFBaEI7QUFBUCxlQUFmLEM7OztBQUFmRyxjQUFBQSxNO0FBRU5ULGNBQUFBLGFBQWEsQ0FBQ1UsaUJBQWQsQ0FBZ0NMLElBQWhDLEVBQXFDQyxJQUFyQztnREFDT0csTTs7Ozs7Ozs7Ozs7Ozs7OztzQ0FPb0JKLEksRUFBTUMsSTs7Ozs7Ozs7OENBRVJLLHNCQUFVUCxPQUFWLENBQWtCO0FBQUNRLGdCQUFBQSxHQUFHLEVBQUUsSUFBTjtBQUFXSixnQkFBQUEsS0FBSyxFQUFDO0FBQUNLLGtCQUFBQSxXQUFXLEVBQUNSLElBQWI7QUFBa0JTLGtCQUFBQSxXQUFXLEVBQUNSO0FBQTlCO0FBQWpCLGVBQWxCLEM7OztBQUFuQlMsY0FBQUEsVTs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQVFpQkYsVyxFQUFhQyxXOzs7Ozs7Ozs4Q0FFZkUsNkJBQWlCWixPQUFqQixDQUF5QjtBQUFDUSxnQkFBQUEsR0FBRyxFQUFFLElBQU47QUFBV0osZ0JBQUFBLEtBQUssRUFBQztBQUFDSyxrQkFBQUEsV0FBVyxFQUFDQSxXQUFiO0FBQXlCQyxrQkFBQUEsV0FBVyxFQUFDQTtBQUFyQztBQUFqQixlQUF6QixDOzs7QUFBZkcsY0FBQUEsTTtnREFDQ0EsTTs7Ozs7Ozs7Ozs7Ozs7OzttQ0FNaUJaLEksRUFBS0MsSTs7Ozs7Ozs7OENBRUNKLG1CQUFPSyxPQUFQLENBQWU7QUFBQ0MsZ0JBQUFBLEtBQUssRUFBQztBQUFDSCxrQkFBQUEsSUFBSSxFQUFDQSxJQUFOO0FBQVdDLGtCQUFBQSxJQUFJLEVBQUNBO0FBQWhCO0FBQVAsZUFBZixDOzs7QUFBeEJZLGNBQUFBLGU7O21CQUNIQSxlOzs7Ozs7OENBQzZCaEIsbUJBQU9pQixPQUFQLENBQWU7QUFBQ1gsZ0JBQUFBLEtBQUssRUFBQztBQUFDSCxrQkFBQUEsSUFBSSxFQUFDQSxJQUFOO0FBQVdDLGtCQUFBQSxJQUFJLEVBQUNBO0FBQWhCO0FBQVAsZUFBZixDOzs7QUFBeEJjLGNBQUFBLGU7Z0RBQ0NBLGU7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxQ0FRaUJmLEksRUFBS0MsSSxFQUFLRyxNOzs7Ozs7Ozs4Q0FFTlAsbUJBQU9LLE9BQVAsQ0FBZTtBQUFDQyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNILGtCQUFBQSxJQUFJLEVBQUNBLElBQU47QUFBV0Msa0JBQUFBLElBQUksRUFBQ0E7QUFBaEI7QUFBUCxlQUFmLEM7OztBQUF4QlksY0FBQUEsZTs7bUJBRUhBLGU7Ozs7Ozs4Q0FDS2hCLG1CQUFPbUIsTUFBUCxDQUFjWixNQUFkLEVBQXFCO0FBQUNELGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0gsa0JBQUFBLElBQUksRUFBQ0EsSUFBTjtBQUFXQyxrQkFBQUEsSUFBSSxFQUFDQTtBQUFoQjtBQUFQLGVBQXJCLEM7OztnREFDQ0csTTs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBU0FULGEiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVG9ybmVvIGZyb20gJy4uL21vZGVscy9Ub3JuZW8nO1xyXG5pbXBvcnQgQ2F0ZWdvcmlhIGZyb20gJy4uL21vZGVscy9DYXRlZ29yaWEnO1xyXG5pbXBvcnQgTGlzdGFJbnNjcmlwY2lvbiBmcm9tICcuLi9tb2RlbHMvTGlzdGFJbnNjcmlwY2lvbic7XHJcblxyXG5jbGFzcyBUb3JuZW9TZXJ2aWNlIHsgIFxyXG4gICAgc3RhdGljIGFzeW5jIGFncmVnYXJUb3JuZW8obnVldm9Ub3JuZW8pIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgVG9ybmVvLmNyZWF0ZShudWV2b1Rvcm5lbyk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclRvcm5lb3MoKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgVG9ybmVvLmZpbmRBbGwoKTtcclxuICAgICAgfSBcclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7ICAgXHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclRvcm5lbyhhbmlvLHRpcG8pe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHRvcm5lbyA9IGF3YWl0IFRvcm5lby5maW5kT25lKHt3aGVyZTp7YW5pbzphbmlvLHRpcG86dGlwb319KTtcclxuXHJcbiAgICAgICAgVG9ybmVvU2VydmljZS5vYnRlbmVyQ2F0ZWdvcmlhcyhhbmlvLHRpcG8pOyAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIHRvcm5lbztcclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyQ2F0ZWdvcmlhcyhhbmlvLCB0aXBvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBjYXRlZ29yaWFzID0gYXdhaXQgQ2F0ZWdvcmlhLmZpbmRBbGwoe3JhdzogdHJ1ZSx3aGVyZTp7YW5pb190b3JuZW86YW5pbyx0aXBvX3Rvcm5lbzp0aXBvfX0pO1xyXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJDYXRlZ29yaWFzIGFzb2NpYWRhcyBhbCB0b3JuZW9cIixhbmlvLHRpcG8sXCIgc29uIFwiLGNhdGVnb3JpYXMpOyBcclxuXHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckxpc3RhcyhhbmlvX3Rvcm5lbywgdGlwb190b3JuZW8pe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGxpc3RhcyA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb24uZmluZEFsbCh7cmF3OiB0cnVlLHdoZXJlOnthbmlvX3Rvcm5lbzphbmlvX3Rvcm5lbyx0aXBvX3Rvcm5lbzp0aXBvX3Rvcm5lb319KTtcclxuICAgICAgICByZXR1cm4gbGlzdGFzO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGVsaW1pbmFyVG9ybmVvKGFuaW8sdGlwbyl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgdG9ybmVvRXhpc3RlbnRlID0gYXdhaXQgVG9ybmVvLmZpbmRPbmUoe3doZXJlOnthbmlvOmFuaW8sdGlwbzp0aXBvfX0pO1xyXG4gICAgICAgIGlmKHRvcm5lb0V4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBjb25zdCB0b3JuZW9FbGltaW5hZG8gPSBhd2FpdCBUb3JuZW8uZGVzdHJveSh7d2hlcmU6e2FuaW86YW5pbyx0aXBvOnRpcG99fSk7XHJcbiAgICAgICAgICByZXR1cm4gdG9ybmVvRWxpbWluYWRvOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFyVG9ybmVvKGFuaW8sdGlwbyx0b3JuZW8pe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHRvcm5lb0V4aXN0ZW50ZSA9IGF3YWl0IFRvcm5lby5maW5kT25lKHt3aGVyZTp7YW5pbzphbmlvLHRpcG86dGlwb319KTtcclxuXHJcbiAgICAgICAgaWYodG9ybmVvRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGF3YWl0IFRvcm5lby51cGRhdGUodG9ybmVvLHt3aGVyZTp7YW5pbzphbmlvLHRpcG86dGlwb319KTtcclxuICAgICAgICAgIHJldHVybiB0b3JuZW87IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbn0gXHJcblxyXG4gIGV4cG9ydCBkZWZhdWx0IFRvcm5lb1NlcnZpY2U7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "TorneoService.js"
      ],
      "names": [
        "TorneoService",
        "nuevoTorneo",
        "Torneo",
        "create",
        "findAll",
        "anio",
        "tipo",
        "findOne",
        "where",
        "torneo",
        "obtenerCategorias",
        "Categoria",
        "raw",
        "anio_torneo",
        "tipo_torneo",
        "categorias",
        "ListaInscripcion",
        "listas",
        "torneoExistente",
        "destroy",
        "torneoEliminado",
        "update"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEMA,a;;;;;;;;;kCACyBC,W;;;;;;;8CAEVC,mBAAOC,MAAP,CAAcF,WAAd,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,mBAAOE,OAAP,E;;;;;;;;;;;;;;;;;;;kCAOUC,I,EAAKC,I;;;;;;;;8CAEPJ,mBAAOK,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAfG,cAAAA,M;AAENT,cAAAA,aAAa,CAACU,iBAAd,CAAgCL,IAAhC,EAAqCC,IAArC;gDACOG,M;;;;;;;;;;;;;;;;sCAOoBJ,I,EAAMC,I;;;;;;;;8CAERK,sBAAUP,OAAV,CAAkB;AAACQ,gBAAAA,GAAG,EAAE,IAAN;AAAWJ,gBAAAA,KAAK,EAAC;AAACK,kBAAAA,WAAW,EAACR,IAAb;AAAkBS,kBAAAA,WAAW,EAACR;AAA9B;AAAjB,eAAlB,C;;;AAAnBS,cAAAA,U;;;;;;;;;;;;;;;;;;kCAQiBF,W,EAAaC,W;;;;;;;;8CAEfE,6BAAiBZ,OAAjB,CAAyB;AAACQ,gBAAAA,GAAG,EAAE,IAAN;AAAWJ,gBAAAA,KAAK,EAAC;AAACK,kBAAAA,WAAW,EAACA,WAAb;AAAyBC,kBAAAA,WAAW,EAACA;AAArC;AAAjB,eAAzB,C;;;AAAfG,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;mCAMiBZ,I,EAAKC,I;;;;;;;;8CAECJ,mBAAOK,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAxBY,cAAAA,e;;mBACHA,e;;;;;;8CAC6BhB,mBAAOiB,OAAP,CAAe;AAACX,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAxBc,cAAAA,e;gDACCA,e;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;qCAQiBf,I,EAAKC,I,EAAKG,M;;;;;;;;8CAENP,mBAAOK,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAxBY,cAAAA,e;;mBAEHA,e;;;;;;8CACKhB,mBAAOmB,MAAP,CAAcZ,MAAd,EAAqB;AAACD,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAArB,C;;;gDACCG,M;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASAT,a",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Torneo from '../models/Torneo';\r\nimport Categoria from '../models/Categoria';\r\nimport ListaInscripcion from '../models/ListaInscripcion';\r\n\r\nclass TorneoService {  \r\n    static async agregarTorneo(nuevoTorneo) {\r\n      try {\r\n        return await Torneo.create(nuevoTorneo);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerTorneos(){\r\n      try {\r\n        return await Torneo.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerTorneo(anio,tipo){\r\n      try {\r\n        const torneo = await Torneo.findOne({where:{anio:anio,tipo:tipo}});\r\n\r\n        TorneoService.obtenerCategorias(anio,tipo);        \r\n        return torneo;\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n    static async obtenerCategorias(anio, tipo){\r\n      try {\r\n        const categorias = await Categoria.findAll({raw: true,where:{anio_torneo:anio,tipo_torneo:tipo}});\r\n        //console.log(\"Categorias asociadas al torneo\",anio,tipo,\" son \",categorias); \r\n\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerListas(anio_torneo, tipo_torneo){\r\n      try {\r\n        const listas = await ListaInscripcion.findAll({raw: true,where:{anio_torneo:anio_torneo,tipo_torneo:tipo_torneo}});\r\n        return listas;\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async eliminarTorneo(anio,tipo){\r\n      try {\r\n        const torneoExistente = await Torneo.findOne({where:{anio:anio,tipo:tipo}});\r\n        if(torneoExistente){\r\n          const torneoEliminado = await Torneo.destroy({where:{anio:anio,tipo:tipo}});\r\n          return torneoEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async actualizarTorneo(anio,tipo,torneo){\r\n      try {\r\n        const torneoExistente = await Torneo.findOne({where:{anio:anio,tipo:tipo}});\r\n\r\n        if(torneoExistente){\r\n          await Torneo.update(torneo,{where:{anio:anio,tipo:tipo}});\r\n          return torneo; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n} \r\n\r\n  export default TorneoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584456516027
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Torneo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Torneo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Torneo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Torneo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Torneo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Categoria = _interopRequireDefault(require(\"./Categoria\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"./ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Torneo = _database.sequelize.define('Torneo', {\n  anio: {\n    type: _sequelize[\"default\"].INTEGER,\n    allowNull: false,\n    primaryKey: true\n  },\n  tipo: {\n    type: _sequelize[\"default\"].TEXT,\n    allowNull: false,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  abierto: {\n    type: _sequelize[\"default\"].BOOLEAN,\n    defaultValue: false\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n}); //Torneo.hasMany(ListaInscripcion,{foreignKey:'id_lista', as:\"listas\"});  //Chequear si esta bien eso después \n//Torneo.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});\n//Torneo.hasMany(ListaInscripcion, {as:'listas'});\n\n\nvar _default = Torneo;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvcm5lby5qcyJdLCJuYW1lcyI6WyJUb3JuZW8iLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJhbmlvIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGlwbyIsIlRFWFQiLCJub21icmUiLCJhYmllcnRvIiwiQk9PTEVBTiIsImRlZmF1bHRWYWx1ZSIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUhtQztBQUtuQyxJQUFNQSxNQUFNLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFFBQWpCLEVBQTJCO0FBQ3RDQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEZDtBQUVGQyxJQUFBQSxTQUFTLEVBQUUsS0FGVDtBQUdGQyxJQUFBQSxVQUFVLEVBQUU7QUFIVixHQURnQztBQU10Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZMLElBQUFBLElBQUksRUFBRUMsc0JBQVVLLElBRGQ7QUFFRkgsSUFBQUEsU0FBUyxFQUFFLEtBRlQ7QUFHRkMsSUFBQUEsVUFBVSxFQUFFO0FBSFYsR0FOZ0M7QUFXdENHLEVBQUFBLE1BQU0sRUFBRTtBQUNKUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSztBQURaLEdBWDhCO0FBY3RDRSxFQUFBQSxPQUFPLEVBQUU7QUFDTFIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVVEsT0FEWDtBQUVMQyxJQUFBQSxZQUFZLEVBQUU7QUFGVDtBQWQ2QixDQUEzQixFQW1CWjtBQUNDQyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FuQlksQ0FBZixDLENBd0JBO0FBRUE7QUFDQTs7O2VBRWVoQixNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJzsgLy8gY2xhc2UgU2VxdWVsaXplXHJcbmltcG9ydCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJyAvL2NvbmV4aW9uIGEgbGEgYmFzZVxyXG5pbXBvcnQgQ2F0ZWdvcmlhIGZyb20gJy4vQ2F0ZWdvcmlhJztcclxuaW1wb3J0IExpc3RhSW5zY3JpcGNpb24gZnJvbSAnLi9MaXN0YUluc2NyaXBjaW9uJztcclxuXHJcbmNvbnN0IFRvcm5lbyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1Rvcm5lbycsIHtcclxuICAgIGFuaW86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICB0aXBvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFQsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbm9tYnJlOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFQsXHJcbiAgICB9LFxyXG4gICAgYWJpZXJ0bzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5CT09MRUFOLFxyXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogZmFsc2VcclxuICAgIH1cclxuXHJcbn0sIHtcclxuICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxyXG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlLFxyXG59KTtcclxuXHJcbi8vVG9ybmVvLmhhc01hbnkoTGlzdGFJbnNjcmlwY2lvbix7Zm9yZWlnbktleTonaWRfbGlzdGEnLCBhczpcImxpc3Rhc1wifSk7ICAvL0NoZXF1ZWFyIHNpIGVzdGEgYmllbiBlc28gZGVzcHXDqXMgXHJcblxyXG4vL1Rvcm5lby5oYXNNYW55KExpc3RhSW5zY3JpcGNpb24sIHtmb3JlaWduS2V5OiAnaWRfY2F0ZWdvcmlhJywgYXM6J2xpc3Rhcyd9KTtcclxuLy9Ub3JuZW8uaGFzTWFueShMaXN0YUluc2NyaXBjaW9uLCB7YXM6J2xpc3Rhcyd9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRvcm5lbzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Torneo.js"
      ],
      "names": [
        "Torneo",
        "sequelize",
        "define",
        "anio",
        "type",
        "Sequelize",
        "INTEGER",
        "allowNull",
        "primaryKey",
        "tipo",
        "TEXT",
        "nombre",
        "abierto",
        "BOOLEAN",
        "defaultValue",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAHmC;AAKnC,IAAMA,MAAM,GAAGC,oBAAUC,MAAV,CAAiB,QAAjB,EAA2B;AACtCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,sBAAUC,OADd;AAEFC,IAAAA,SAAS,EAAE,KAFT;AAGFC,IAAAA,UAAU,EAAE;AAHV,GADgC;AAMtCC,EAAAA,IAAI,EAAE;AACFL,IAAAA,IAAI,EAAEC,sBAAUK,IADd;AAEFH,IAAAA,SAAS,EAAE,KAFT;AAGFC,IAAAA,UAAU,EAAE;AAHV,GANgC;AAWtCG,EAAAA,MAAM,EAAE;AACJP,IAAAA,IAAI,EAAEC,sBAAUK;AADZ,GAX8B;AActCE,EAAAA,OAAO,EAAE;AACLR,IAAAA,IAAI,EAAEC,sBAAUQ,OADX;AAELC,IAAAA,YAAY,EAAE;AAFT;AAd6B,CAA3B,EAmBZ;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAnBY,CAAf,C,CAwBA;AAEA;AACA;;;eAEehB,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\nimport Categoria from './Categoria';\r\nimport ListaInscripcion from './ListaInscripcion';\r\n\r\nconst Torneo = sequelize.define('Torneo', {\r\n    anio: {\r\n        type: Sequelize.INTEGER,\r\n        allowNull: false,\r\n        primaryKey: true\r\n    },\r\n    tipo: {\r\n        type: Sequelize.TEXT,\r\n        allowNull: false,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT,\r\n    },\r\n    abierto: {\r\n        type: Sequelize.BOOLEAN,\r\n        defaultValue: false\r\n    }\r\n\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\n//Torneo.hasMany(ListaInscripcion,{foreignKey:'id_lista', as:\"listas\"});  //Chequear si esta bien eso después \r\n\r\n//Torneo.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});\r\n//Torneo.hasMany(ListaInscripcion, {as:'listas'});\r\n\r\nexport default Torneo;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595873007453
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\categoria.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\categoria.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\categoria.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\categoria.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "categoria.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _categoria = _interopRequireDefault(require(\"../controllers/categoria.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _categoria[\"default\"].obtenerCategorias);\nrouter.get('/:id', _categoria[\"default\"].obtenerCategoria);\nrouter.get('/equipos/:id', _categoria[\"default\"].obtenerEquipos);\nrouter.get('/partidos/:id', _categoria[\"default\"].obtenerPartidos);\nrouter.get('/computarPartido/:id_categoria&:id_partido', _categoria[\"default\"].computarPartido);\nrouter.get('/obtenerTabla/:id', _categoria[\"default\"].obtenerTabla);\nrouter.post('/', _categoria[\"default\"].crearCategoria); //router.post('/actualizarTabla/:id',actualizarTabla);\n\nrouter.post('/agregarEquipos/:id', _categoria[\"default\"].agregarEquipos);\nrouter.put('/:id', _categoria[\"default\"].actualizarCategoria);\nrouter.put('cargarPartidos/:id', _categoria[\"default\"].computarPartidos);\nrouter[\"delete\"]('/:id', _categoria[\"default\"].eliminarCategoria);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3JpYS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJDYXRlZ29yaWFDb250cm9sbGVyIiwib2J0ZW5lckNhdGVnb3JpYXMiLCJvYnRlbmVyQ2F0ZWdvcmlhIiwib2J0ZW5lckVxdWlwb3MiLCJvYnRlbmVyUGFydGlkb3MiLCJjb21wdXRhclBhcnRpZG8iLCJvYnRlbmVyVGFibGEiLCJwb3N0IiwiY3JlYXJDYXRlZ29yaWEiLCJhZ3JlZ2FyRXF1aXBvcyIsInB1dCIsImFjdHVhbGl6YXJDYXRlZ29yaWEiLCJjb21wdXRhclBhcnRpZG9zIiwiZWxpbWluYXJDYXRlZ29yaWEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUtBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWVDLHNCQUFvQkMsaUJBQW5DO0FBQ0FILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JDLHNCQUFvQkUsZ0JBQXRDO0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGNBQVgsRUFBMEJDLHNCQUFvQkcsY0FBOUM7QUFDQUwsTUFBTSxDQUFDQyxHQUFQLENBQVcsZUFBWCxFQUEyQkMsc0JBQW9CSSxlQUEvQztBQUVBTixNQUFNLENBQUNDLEdBQVAsQ0FBVyw0Q0FBWCxFQUF3REMsc0JBQW9CSyxlQUE1RTtBQUNBUCxNQUFNLENBQUNDLEdBQVAsQ0FBVyxtQkFBWCxFQUErQkMsc0JBQW9CTSxZQUFuRDtBQUdBUixNQUFNLENBQUNTLElBQVAsQ0FBWSxHQUFaLEVBQWlCUCxzQkFBb0JRLGNBQXJDLEUsQ0FFQTs7QUFFQVYsTUFBTSxDQUFDUyxJQUFQLENBQVkscUJBQVosRUFBa0NQLHNCQUFvQlMsY0FBdEQ7QUFDQVgsTUFBTSxDQUFDWSxHQUFQLENBQVcsTUFBWCxFQUFrQlYsc0JBQW9CVyxtQkFBdEM7QUFFQWIsTUFBTSxDQUFDWSxHQUFQLENBQVcsb0JBQVgsRUFBZ0NWLHNCQUFvQlksZ0JBQXBEO0FBRUFkLE1BQU0sVUFBTixDQUFjLE1BQWQsRUFBcUJFLHNCQUFvQmEsaUJBQXpDO2VBRWVmLE0iLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuaW1wb3J0IENhdGVnb3JpYUNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvY2F0ZWdvcmlhLmNvbnRyb2xsZXInO1xyXG5cclxuXHJcbnJvdXRlci5nZXQoJy8nLENhdGVnb3JpYUNvbnRyb2xsZXIub2J0ZW5lckNhdGVnb3JpYXMpO1xyXG5yb3V0ZXIuZ2V0KCcvOmlkJyxDYXRlZ29yaWFDb250cm9sbGVyLm9idGVuZXJDYXRlZ29yaWEpO1xyXG5yb3V0ZXIuZ2V0KCcvZXF1aXBvcy86aWQnLENhdGVnb3JpYUNvbnRyb2xsZXIub2J0ZW5lckVxdWlwb3MpO1xyXG5yb3V0ZXIuZ2V0KCcvcGFydGlkb3MvOmlkJyxDYXRlZ29yaWFDb250cm9sbGVyLm9idGVuZXJQYXJ0aWRvcyk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvY29tcHV0YXJQYXJ0aWRvLzppZF9jYXRlZ29yaWEmOmlkX3BhcnRpZG8nLENhdGVnb3JpYUNvbnRyb2xsZXIuY29tcHV0YXJQYXJ0aWRvKTtcclxucm91dGVyLmdldCgnL29idGVuZXJUYWJsYS86aWQnLENhdGVnb3JpYUNvbnRyb2xsZXIub2J0ZW5lclRhYmxhKTtcclxuXHJcblxyXG5yb3V0ZXIucG9zdCgnLycsIENhdGVnb3JpYUNvbnRyb2xsZXIuY3JlYXJDYXRlZ29yaWEpO1xyXG5cclxuLy9yb3V0ZXIucG9zdCgnL2FjdHVhbGl6YXJUYWJsYS86aWQnLGFjdHVhbGl6YXJUYWJsYSk7XHJcblxyXG5yb3V0ZXIucG9zdCgnL2FncmVnYXJFcXVpcG9zLzppZCcsQ2F0ZWdvcmlhQ29udHJvbGxlci5hZ3JlZ2FyRXF1aXBvcyk7XHJcbnJvdXRlci5wdXQoJy86aWQnLENhdGVnb3JpYUNvbnRyb2xsZXIuYWN0dWFsaXphckNhdGVnb3JpYSk7XHJcblxyXG5yb3V0ZXIucHV0KCdjYXJnYXJQYXJ0aWRvcy86aWQnLENhdGVnb3JpYUNvbnRyb2xsZXIuY29tcHV0YXJQYXJ0aWRvcyk7XHJcblxyXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJyxDYXRlZ29yaWFDb250cm9sbGVyLmVsaW1pbmFyQ2F0ZWdvcmlhKTsgXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "categoria.js"
      ],
      "names": [
        "router",
        "get",
        "CategoriaController",
        "obtenerCategorias",
        "obtenerCategoria",
        "obtenerEquipos",
        "obtenerPartidos",
        "computarPartido",
        "obtenerTabla",
        "post",
        "crearCategoria",
        "agregarEquipos",
        "put",
        "actualizarCategoria",
        "computarPartidos",
        "eliminarCategoria"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAKAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,sBAAoBC,iBAAnC;AACAH,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,sBAAoBE,gBAAtC;AACAJ,MAAM,CAACC,GAAP,CAAW,cAAX,EAA0BC,sBAAoBG,cAA9C;AACAL,MAAM,CAACC,GAAP,CAAW,eAAX,EAA2BC,sBAAoBI,eAA/C;AAEAN,MAAM,CAACC,GAAP,CAAW,4CAAX,EAAwDC,sBAAoBK,eAA5E;AACAP,MAAM,CAACC,GAAP,CAAW,mBAAX,EAA+BC,sBAAoBM,YAAnD;AAGAR,MAAM,CAACS,IAAP,CAAY,GAAZ,EAAiBP,sBAAoBQ,cAArC,E,CAEA;;AAEAV,MAAM,CAACS,IAAP,CAAY,qBAAZ,EAAkCP,sBAAoBS,cAAtD;AACAX,MAAM,CAACY,GAAP,CAAW,MAAX,EAAkBV,sBAAoBW,mBAAtC;AAEAb,MAAM,CAACY,GAAP,CAAW,oBAAX,EAAgCV,sBAAoBY,gBAApD;AAEAd,MAAM,UAAN,CAAc,MAAd,EAAqBE,sBAAoBa,iBAAzC;eAEef,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport CategoriaController from '../controllers/categoria.controller';\r\n\r\n\r\nrouter.get('/',CategoriaController.obtenerCategorias);\r\nrouter.get('/:id',CategoriaController.obtenerCategoria);\r\nrouter.get('/equipos/:id',CategoriaController.obtenerEquipos);\r\nrouter.get('/partidos/:id',CategoriaController.obtenerPartidos);\r\n\r\nrouter.get('/computarPartido/:id_categoria&:id_partido',CategoriaController.computarPartido);\r\nrouter.get('/obtenerTabla/:id',CategoriaController.obtenerTabla);\r\n\r\n\r\nrouter.post('/', CategoriaController.crearCategoria);\r\n\r\n//router.post('/actualizarTabla/:id',actualizarTabla);\r\n\r\nrouter.post('/agregarEquipos/:id',CategoriaController.agregarEquipos);\r\nrouter.put('/:id',CategoriaController.actualizarCategoria);\r\n\r\nrouter.put('cargarPartidos/:id',CategoriaController.computarPartidos);\r\n\r\nrouter.delete('/:id',CategoriaController.eliminarCategoria); \r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1586116238114
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\categoria.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\categoria.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\categoria.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\categoria.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "categoria.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _CategoriaService = _interopRequireDefault(require(\"../services/CategoriaService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Categoria_contiene_EquipoService = _interopRequireDefault(require(\"../services/Categoria_contiene_EquipoService\"));\n\nvar _TablaService = _interopRequireDefault(require(\"../services/TablaService\"));\n\nvar _PartidoService = _interopRequireDefault(require(\"../services/PartidoService\"));\n\nvar _Categoria = _interopRequireDefault(require(\"../models/Categoria\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar CategoriaController =\n/*#__PURE__*/\nfunction () {\n  function CategoriaController() {\n    _classCallCheck(this, CategoriaController);\n  }\n\n  _createClass(CategoriaController, null, [{\n    key: \"crearCategoria\",\n    value: function crearCategoria(req, res) {\n      var nuevaCategoria, nuevaTabla, categoriaCreada;\n      return regeneratorRuntime.async(function crearCategoria$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaCategoria = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].crearTablaVacia());\n\n            case 4:\n              nuevaTabla = _context.sent;\n              //cramos una tabla inicial para la nueva categoria\n              nuevaCategoria.id_tabla = nuevaTabla.id_tabla;\n              _context.next = 8;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].agregarCategoria(nuevaCategoria));\n\n            case 8:\n              categoriaCreada = _context.sent;\n              util.setSuccess(201, 'Categoria añadida', categoriaCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias(req, res) {\n      var categorias;\n      return regeneratorRuntime.async(function obtenerCategorias$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategorias());\n\n            case 3:\n              categorias = _context2.sent;\n\n              if (categorias && categorias.length > 0) {\n                util.setSuccess(200, 'Categorias obtenidas', categorias);\n              } else {\n                util.setSuccess(200, 'No se encuentran Categorías');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerCategoria\",\n    value: function obtenerCategoria(req, res) {\n      var id_categoria, categoria, tabla;\n      return regeneratorRuntime.async(function obtenerCategoria$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id_categoria = req.params.id;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategoria(id_categoria));\n\n            case 4:\n              categoria = _context3.sent;\n              _context3.next = 7;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].generarTabla(id_categoria));\n\n            case 7:\n              tabla = _context3.sent;\n\n              //const partidos = await CategoriaService.obtenerPartidos(id_categoria);\n              if (categoria) {\n                util.setSuccess(200, 'Categoria obtenida', tabla); //util.setSuccess(200,'Categoria obtenida',categoria);\n              } else {\n                util.setError(404, \"Categoria no encontrada\");\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    }\n  }, {\n    key: \"actualizarCategoria\",\n    value: function actualizarCategoria(req, res) {\n      var id_categoria, categoria, categoriaActualizada;\n      return regeneratorRuntime.async(function actualizarCategoria$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_categoria = req.params.id;\n              categoria = req.body;\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].actualizarCategoria(id_categoria, categoria));\n\n            case 5:\n              categoriaActualizada = _context4.sent;\n\n              if (categoriaActualizada == 0) {\n                util.setError(400, \"Categor\\xEDa con id:\\\"\".concat(id_categoria, \"\\\" no se pudo actualizar. Chequear par\\xE1metros\"));\n              } else {\n                if (categoriaActualizada == null) {\n                  util.setError(404, \"Categoria con id:\\\"\".concat(id_categoria, \"\\\" no encontrada\"));\n                } else {\n                  util.setSuccess(200, 'Categoría actualizada', categoriaActualizada);\n                }\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarCategoria\",\n    value: function eliminarCategoria(req, res) {\n      var id_categoria, categoriaEliminada;\n      return regeneratorRuntime.async(function eliminarCategoria$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_categoria = req.params.id;\n              _context5.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].eliminarCategoria(id_categoria));\n\n            case 4:\n              categoriaEliminada = _context5.sent;\n\n              if (categoriaEliminada) {\n                util.setSuccess(200, 'Categoria eliminada');\n              } else {\n                util.setError(404, \"Categoria con id: \".concat(dni, \" no encontrada\"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"agregarEquipos\",\n    value: function agregarEquipos(req, res) {\n      var id_categoria, categoria, equipos;\n      return regeneratorRuntime.async(function agregarEquipos$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              id_categoria = req.params.id;\n              _context6.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategoria(id_categoria));\n\n            case 4:\n              categoria = _context6.sent;\n              equipos = req.body;\n\n              if (!categoria) {\n                _context6.next = 12;\n                break;\n              }\n\n              _context6.next = 9;\n              return regeneratorRuntime.awrap(_Categoria_contiene_EquipoService[\"default\"].agregarEquipos(id_categoria, equipos));\n\n            case 9:\n              util.setSuccess(200, \"Equipos agregados a la categoria \".concat(id_categoria, \" \"), equipos);\n              _context6.next = 13;\n              break;\n\n            case 12:\n              util.setError(404, \"Categoria con id: \".concat(dni, \" no encontrada\"));\n\n            case 13:\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 16:\n              _context6.prev = 16;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos(req, res) {\n      var id_categoria, categoria, equipos;\n      return regeneratorRuntime.async(function obtenerEquipos$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              id_categoria = req.params.id;\n              _context7.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategoria(id_categoria));\n\n            case 4:\n              categoria = _context7.sent;\n\n              if (!categoria) {\n                _context7.next = 12;\n                break;\n              }\n\n              _context7.next = 8;\n              return regeneratorRuntime.awrap(_Categoria_contiene_EquipoService[\"default\"].obtenerEquipos(id_categoria));\n\n            case 8:\n              equipos = _context7.sent;\n              util.setSuccess(200, \"Equipos de la categoria \".concat(id_categoria, \" \"), equipos);\n              _context7.next = 13;\n              break;\n\n            case 12:\n              util.setError(404, \"Categoria con id: \".concat(id_categoria, \" no encontrada\"));\n\n            case 13:\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 16:\n              _context7.prev = 16;\n              _context7.t0 = _context7[\"catch\"](0);\n              util.setError(404, _context7.t0.message);\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 20:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos(req, res) {\n      var id_categoria, partidos;\n      return regeneratorRuntime.async(function obtenerPartidos$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              id_categoria = req.params.id;\n              _context8.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerPartidos(id_categoria));\n\n            case 4:\n              partidos = _context8.sent;\n\n              if (partidos) {\n                if (partidos.length == 0) {\n                  util.setSuccess(200, \"No se registraron partidos en la categoria \".concat(id_categoria), partidos);\n                } else {\n                  util.setSuccess(200, \"Partidos de la categoria \".concat(id_categoria, \" \"), partidos);\n                }\n              } else {\n                util.setError(404, \"Partidos de la Categoria con id: \".concat(id_categoria, \" no encontrados\"));\n              }\n\n              return _context8.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context8.prev = 9;\n              _context8.t0 = _context8[\"catch\"](0);\n              util.setError(404, _context8.t0.message);\n              return _context8.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(req, res) {\n      var id_categoria, tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              id_categoria = req.params.id;\n              _context9.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerTabla(id_categoria));\n\n            case 4:\n              tabla = _context9.sent;\n\n              if (tabla) {\n                util.setSuccess(200, \"Tabla de la categoria \".concat(id_categoria), tabla);\n              } else {\n                util.setError(404, \"Tabla de la Categoria id: \".concat(id_categoria, \" no encontrada\"));\n              }\n\n              return _context9.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              util.setError(404, _context9.t0.message);\n              return _context9.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(id_categoria) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerTorneo(id_categoria));\n\n            case 2:\n              torneo = _context10.sent;\n              return _context10.abrupt(\"return\", torneo);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"actualizarTabla\",\n    value: function actualizarTabla(req, res) {\n      var id_categoria, tablaActualizada;\n      return regeneratorRuntime.async(function actualizarTabla$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              id_categoria = req.params.id;\n              _context11.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].actualizarTabla(id_categoria));\n\n            case 4:\n              tablaActualizada = _context11.sent;\n\n              if (tablaActualizada) {\n                util.setSuccess(200, \"Tabla actualizada con \\xE9xito\", tablaActualizada);\n              } else {\n                util.setError(404, \"Tabla no se pudo actualizar\");\n              }\n\n              _context11.next = 12;\n              break;\n\n            case 8:\n              _context11.prev = 8;\n              _context11.t0 = _context11[\"catch\"](0);\n              util.setError(404, _context11.t0.message);\n              return _context11.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"computarPartido\",\n    value: function computarPartido(req, res) {\n      var id_categoria, id_partido, partido, tabla, tablaActualizada, tablaActualizada2;\n      return regeneratorRuntime.async(function computarPartido$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              id_categoria = req.params.id_categoria;\n              id_partido = req.params.id_partido;\n              _context12.next = 5;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].obtenerPartido(id_partido));\n\n            case 5:\n              partido = _context12.sent;\n              _context12.next = 8;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerTabla(id_categoria));\n\n            case 8:\n              tabla = _context12.sent;\n              _context12.next = 11;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].computarPartido(tabla, partido));\n\n            case 11:\n              tablaActualizada = _context12.sent;\n              _context12.next = 14;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].actualizarTabla(tabla.id_tabla, tablaActualizada));\n\n            case 14:\n              tablaActualizada2 = _context12.sent;\n\n              if (tablaActualizada2) {\n                util.setSuccess(200, \"Partido computado con \\xE9xito\", tablaActualizada2);\n              }\n\n              return _context12.abrupt(\"return\", util.send(res));\n\n            case 19:\n              _context12.prev = 19;\n              _context12.t0 = _context12[\"catch\"](0);\n              util.setError(404, _context12.t0.message);\n              return _context12.abrupt(\"return\", util.send(res));\n\n            case 23:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, [[0, 19]]);\n    }\n  }, {\n    key: \"computarPartidos\",\n    value: function computarPartidos(req, res) {\n      var id_categoria, partidos, cargaPartidos;\n      return regeneratorRuntime.async(function computarPartidos$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              id_categoria = req.params.id_categoria;\n              partidos = req.body;\n              _context13.next = 5;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].computarPartidos(id_categoria, partidos));\n\n            case 5:\n              cargaPartidos = _context13.sent;\n\n              if (cargaPartidos) {\n                util.setSuccess(200, \"Partidos de la categor\\xEDa computados con \\xE9xito\", cargaPartidos);\n              } else {\n                util.setError(404, \"Partidos de la categor\\xEDa no se pudieron actualizar\");\n              }\n\n              _context13.next = 13;\n              break;\n\n            case 9:\n              _context13.prev = 9;\n              _context13.t0 = _context13[\"catch\"](0);\n              util.setError(404, _context13.t0.message);\n              return _context13.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return CategoriaController;\n}();\n\nvar _default = CategoriaController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "categoria.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "CategoriaController",
        "req",
        "res",
        "nuevaCategoria",
        "body",
        "TablaService",
        "crearTablaVacia",
        "nuevaTabla",
        "id_tabla",
        "CategoriaService",
        "agregarCategoria",
        "categoriaCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerCategorias",
        "categorias",
        "length",
        "id_categoria",
        "params",
        "id",
        "obtenerCategoria",
        "categoria",
        "generarTabla",
        "tabla",
        "actualizarCategoria",
        "categoriaActualizada",
        "eliminarCategoria",
        "categoriaEliminada",
        "dni",
        "equipos",
        "Categoria_contiene_EquipoService",
        "agregarEquipos",
        "obtenerEquipos",
        "obtenerPartidos",
        "partidos",
        "obtenerTabla",
        "obtenerTorneo",
        "torneo",
        "actualizarTabla",
        "tablaActualizada",
        "id_partido",
        "PartidoService",
        "obtenerPartido",
        "partido",
        "computarPartido",
        "tablaActualizada2",
        "computarPartidos",
        "cargaPartidos"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,mB;;;;;;;;;mCAC0BC,G,EAAKC,G;;;;;;;AAEnBC,cAAAA,c,GAAiBF,GAAG,CAACG,I;;8CACFC,yBAAaC,eAAb,E;;;AAAnBC,cAAAA,U;AAAoD;AAC1DJ,cAAAA,cAAc,CAACK,QAAf,GAA0BD,UAAU,CAACC,QAArC;;8CAE8BC,6BAAiBC,gBAAjB,CAAkCP,cAAlC,C;;;AAAxBQ,cAAAA,e;AAENb,cAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCD,eAAxC;+CACOb,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;;8CAEHO,6BAAiBO,iBAAjB,E;;;AAAnBC,cAAAA,U;;AAEN,kBAAGA,UAAU,IAAIA,UAAU,CAACC,MAAX,GAAoB,CAArC,EAAuC;AACnCpB,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,sBAApB,EAA2CK,UAA3C;AACH,eAFD,MAGI;AACAnB,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,6BAApB;AACH;;gDACMd,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;qCAIeD,G,EAAKC,G;;;;;;;AAEjBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;;8CACRZ,6BAAiBa,gBAAjB,CAAkCH,YAAlC,C;;;AAAlBI,cAAAA,S;;8CAEcd,6BAAiBe,YAAjB,CAA8BL,YAA9B,C;;;AAAdM,cAAAA,K;;AAGN;AAEJ,kBAAGF,SAAH,EAAa;AACTzB,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCa,KAAzC,EADS,CAET;AACH,eAHD,MAII;AACA3B,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd;AACH;;gDACMhB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;wCAIkBD,G,EAAKC,G;;;;;;;AAExBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;AAC1BE,cAAAA,S,GAAYtB,GAAG,CAACG,I;;8CACaK,6BAAiBiB,mBAAjB,CAAqCP,YAArC,EAAkDI,SAAlD,C;;;AAA7BI,cAAAA,oB;;AAEN,kBAAGA,oBAAoB,IAAE,CAAzB,EAA2B;AACvB7B,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,kCAAuCK,YAAvC;AACH,eAFD,MAGI;AACA,oBAAGQ,oBAAoB,IAAE,IAAzB,EAA8B;AAC1B7B,kBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,+BAAuCK,YAAvC;AACH,iBAFD,MAGI;AACArB,kBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,uBAApB,EAA4Ce,oBAA5C;AACH;AACJ;;gDACM7B,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAEtBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;;8CACCZ,6BAAiBmB,iBAAjB,CAAmCT,YAAnC,C;;;AAA3BU,cAAAA,kB;;AAEN,kBAAGA,kBAAH,EAAsB;AAClB/B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,qBAApB;AACH,eAFD,MAGI;AACAd,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,8BAAuCgB,GAAvC;AACH;;gDAEMhC,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;;8CACRZ,6BAAiBa,gBAAjB,CAAkCH,YAAlC,C;;;AAAlBI,cAAAA,S;AACAQ,cAAAA,O,GAAU9B,GAAG,CAACG,I;;mBAEjBmB,S;;;;;;8CACOS,6CAAiCC,cAAjC,CAAgDd,YAAhD,EAA6DY,OAA7D,C;;;AACNjC,cAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,6CAAwDO,YAAxD,QAAwEY,OAAxE;;;;;AAGAjC,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,8BAAuCgB,GAAvC;;;gDAGGhC,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;;8CACRZ,6BAAiBa,gBAAjB,CAAkCH,YAAlC,C;;;AAAlBI,cAAAA,S;;mBAEHA,S;;;;;;8CACuBS,6CAAiCE,cAAjC,CAAgDf,YAAhD,C;;;AAAhBY,cAAAA,O;AACNjC,cAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,oCAA+CO,YAA/C,QAA+DY,OAA/D;;;;;AAGAjC,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,8BAAuCK,YAAvC;;;gDAGGrB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAIC,G;;;;;;;AAEnBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;;8CACTZ,6BAAiB0B,eAAjB,CAAiChB,YAAjC,C;;;AAAjBiB,cAAAA,Q;;AAEN,kBAAGA,QAAH,EAAY;AACR,oBAAIA,QAAQ,CAAClB,MAAT,IAAiB,CAArB,EAAuB;AACnBpB,kBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,uDAAkEO,YAAlE,GAAiFiB,QAAjF;AACH,iBAFD,MAGI;AACAtC,kBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,qCAAgDO,YAAhD,QAAiEiB,QAAjE;AACH;AACJ,eAPD,MAQI;AACAtC,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,6CAAsDK,YAAtD;AACH;;gDAEMrB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;iCAKWD,G,EAAIC,G;;;;;;;AAEhBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;;8CACZZ,6BAAiB4B,YAAjB,CAA8BlB,YAA9B,C;;;AAAdM,cAAAA,K;;AACN,kBAAGA,KAAH,EAAS;AACL3B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,kCAA6CO,YAA7C,GAA4DM,KAA5D;AACH,eAFD,MAGI;AACA3B,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,sCAA+CK,YAA/C;AACH;;gDACMrB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;kCAIYiB,Y;;;;;;;8CACFV,6BAAiB6B,aAAjB,CAA+BnB,YAA/B,C;;;AAAfoB,cAAAA,M;iDACCA,M;;;;;;;;;;;oCAGkBtC,G,EAAIC,G;;;;;;;AAEnBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWC,E;;8CACDZ,6BAAiB+B,eAAjB,CAAiCrB,YAAjC,C;;;AAAzBsB,cAAAA,gB;;AAEN,kBAAIA,gBAAJ,EAAqB;AACjB3C,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,oCAAmD6B,gBAAnD;AACH,eAFD,MAGI;AACA3C,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd;AACH;;;;;;;;AAEDhB,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWD,Y;AAC1BuB,cAAAA,U,GAAazC,GAAG,CAACmB,MAAJ,CAAWsB,U;;8CAERC,2BAAeC,cAAf,CAA8BF,UAA9B,C;;;AAAhBG,cAAAA,O;;8CACcpC,6BAAiB4B,YAAjB,CAA8BlB,YAA9B,C;;;AAAdM,cAAAA,K;;8CAEyBhB,6BAAiBqC,eAAjB,CAAiCrB,KAAjC,EAAuCoB,OAAvC,C;;;AAAzBJ,cAAAA,gB;;8CAE0BpC,yBAAamC,eAAb,CAA6Bf,KAAK,CAACjB,QAAnC,EAA4CiC,gBAA5C,C;;;AAA1BM,cAAAA,iB;;AAEL,kBAAGA,iBAAH,EAAqB;AAClBjD,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,oCAAmDmC,iBAAnD;AACH;;iDAEMjD,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;qCAIeD,G,EAAKC,G;;;;;;;AAErBiB,cAAAA,Y,GAAelB,GAAG,CAACmB,MAAJ,CAAWD,Y;AAC1BiB,cAAAA,Q,GAAWnC,GAAG,CAACG,I;;8CAEOK,6BAAiBuC,gBAAjB,CAAkC7B,YAAlC,EAA+CiB,QAA/C,C;;;AAAtBa,cAAAA,a;;AAEN,kBAAIA,aAAJ,EAAkB;AACdnD,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,yDAAqEqC,aAArE;AACH,eAFD,MAGI;AACAnD,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd;AACH;;;;;;;;AAGDhB,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAmB,cAAMC,OAAzB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;;;;eAMJF,mB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import CategoriaService from '../services/CategoriaService';\r\nimport Util from '../utils/Utils';\r\nimport Categoria_contiene_EquipoService from '../services/Categoria_contiene_EquipoService';\r\nimport TablaService from '../services/TablaService';\r\nimport PartidoService from '../services/PartidoService';\r\nimport Categoria from '../models/Categoria';\r\n\r\nconst util = new Util();\r\n\r\nclass CategoriaController {\r\n    static async crearCategoria(req, res) {    \r\n        try {    \r\n            const nuevaCategoria = req.body;\r\n            const nuevaTabla = await TablaService.crearTablaVacia();  //cramos una tabla inicial para la nueva categoria\r\n            nuevaCategoria.id_tabla = nuevaTabla.id_tabla;\r\n            \r\n            const categoriaCreada = await CategoriaService.agregarCategoria(nuevaCategoria);\r\n\r\n            util.setSuccess(201,'Categoria añadida',categoriaCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerCategorias(req, res){\r\n        try {\r\n            const categorias = await CategoriaService.obtenerCategorias();\r\n            \r\n            if(categorias && categorias.length > 0){\r\n                util.setSuccess(200,'Categorias obtenidas',categorias);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Categorías'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerCategoria(req, res){\r\n        try {\r\n                const id_categoria = req.params.id;\r\n                const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n\r\n                const tabla = await CategoriaService.generarTabla(id_categoria);\r\n\r\n\r\n                //const partidos = await CategoriaService.obtenerPartidos(id_categoria);\r\n            \r\n            if(categoria){\r\n                util.setSuccess(200,'Categoria obtenida',tabla);\r\n                //util.setSuccess(200,'Categoria obtenida',categoria);\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria no encontrada`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n   \r\n    static async actualizarCategoria(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoria = req.body;\r\n            const categoriaActualizada = await CategoriaService.actualizarCategoria(id_categoria,categoria);\r\n\r\n            if(categoriaActualizada==0){\r\n                util.setError(400,`Categoría con id:\"${id_categoria}\" no se pudo actualizar. Chequear parámetros`);\r\n            }\r\n            else{\r\n                if(categoriaActualizada==null){\r\n                    util.setError(404,`Categoria con id:\"${id_categoria}\" no encontrada`);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,'Categoría actualizada',categoriaActualizada);\r\n                }\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async eliminarCategoria(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoriaEliminada = await CategoriaService.eliminarCategoria(id_categoria);\r\n\r\n            if(categoriaEliminada){\r\n                util.setSuccess(200,'Categoria eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria con id: ${dni} no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async agregarEquipos(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n            const equipos = req.body;\r\n\r\n            if(categoria){\r\n                await Categoria_contiene_EquipoService.agregarEquipos(id_categoria,equipos);\r\n                util.setSuccess(200,`Equipos agregados a la categoria ${id_categoria} `,equipos);\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria con id: ${dni} no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerEquipos(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n\r\n            if(categoria){\r\n                const equipos = await Categoria_contiene_EquipoService.obtenerEquipos(id_categoria);\r\n                util.setSuccess(200,`Equipos de la categoria ${id_categoria} `,equipos);\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria con id: ${id_categoria} no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerPartidos(req,res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const partidos = await CategoriaService.obtenerPartidos(id_categoria);\r\n\r\n            if(partidos){\r\n                if (partidos.length==0){\r\n                    util.setSuccess(200,`No se registraron partidos en la categoria ${id_categoria}`,partidos);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,`Partidos de la categoria ${id_categoria} `, partidos);\r\n                }\r\n            }\r\n            else{\r\n                util.setError(404,`Partidos de la Categoria con id: ${id_categoria} no encontrados`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n\r\n    static async obtenerTabla(req,res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const tabla = await CategoriaService.obtenerTabla(id_categoria);\r\n            if(tabla){\r\n                util.setSuccess(200,`Tabla de la categoria ${id_categoria}`,tabla);\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla de la Categoria id: ${id_categoria} no encontrada`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        } \r\n    }\r\n\r\n    static async obtenerTorneo(id_categoria){\r\n        const torneo = await CategoriaService.obtenerTorneo(id_categoria);\r\n        return torneo; \r\n    }\r\n\r\n    static async actualizarTabla(req,res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const tablaActualizada = await CategoriaService.actualizarTabla(id_categoria);\r\n\r\n            if (tablaActualizada){\r\n                util.setSuccess(200,`Tabla actualizada con éxito`, tablaActualizada);\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla no se pudo actualizar`);\r\n            }\r\n        } catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async computarPartido(req, res){\r\n        try {\r\n            const id_categoria = req.params.id_categoria;\r\n            const id_partido = req.params.id_partido;\r\n\r\n            const partido = await PartidoService.obtenerPartido(id_partido);\r\n            const tabla = await CategoriaService.obtenerTabla(id_categoria);\r\n\r\n            const tablaActualizada = await CategoriaService.computarPartido(tabla,partido);\r\n\r\n            const tablaActualizada2 = await TablaService.actualizarTabla(tabla.id_tabla,tablaActualizada);\r\n\r\n             if(tablaActualizada2){\r\n                util.setSuccess(200,`Partido computado con éxito`, tablaActualizada2);\r\n            } \r\n            \r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async computarPartidos(req, res){\r\n        try {\r\n            const id_categoria = req.params.id_categoria;\r\n            const partidos = req.body;\r\n\r\n            const cargaPartidos = await CategoriaService.computarPartidos(id_categoria,partidos);\r\n\r\n            if (cargaPartidos){\r\n                util.setSuccess(200,`Partidos de la categoría computados con éxito`, cargaPartidos);\r\n            }\r\n            else{\r\n                util.setError(404,`Partidos de la categoría no se pudieron actualizar`);\r\n            }\r\n\r\n        } catch (error) {\r\n            util.setError(404, error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default CategoriaController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584456117663
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\CategoriaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\CategoriaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\CategoriaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\CategoriaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "CategoriaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Categoria = _interopRequireDefault(require(\"../models/Categoria\"));\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nvar _Partido = _interopRequireDefault(require(\"../models/Partido\"));\n\nvar _Equipo = _interopRequireDefault(require(\"../models/Equipo\"));\n\nvar _Categoria_contiene_EquipoService = _interopRequireDefault(require(\"./Categoria_contiene_EquipoService\"));\n\nvar _EquipoService = _interopRequireDefault(require(\"./EquipoService\"));\n\nvar _PartidoService = _interopRequireDefault(require(\"./PartidoService\"));\n\nvar _TablaService = _interopRequireDefault(require(\"./TablaService\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CategoriaService =\n/*#__PURE__*/\nfunction () {\n  function CategoriaService() {\n    _classCallCheck(this, CategoriaService);\n  }\n\n  _createClass(CategoriaService, null, [{\n    key: \"agregarCategoria\",\n    value: function agregarCategoria(nuevaCategoria) {\n      return regeneratorRuntime.async(function agregarCategoria$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].create(nuevaCategoria));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias() {\n      return regeneratorRuntime.async(function obtenerCategorias$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerCategoria\",\n    value: function obtenerCategoria(id_categoria) {\n      var categoria;\n      return regeneratorRuntime.async(function obtenerCategoria$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoria = _context3.sent;\n              return _context3.abrupt(\"return\", categoria.dataValues);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarCategoria\",\n    value: function actualizarCategoria(id_categoria, categoria) {\n      var categoriaExistente, actualizado;\n      return regeneratorRuntime.async(function actualizarCategoria$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoriaExistente = _context4.sent;\n\n              if (!categoriaExistente) {\n                _context4.next = 15;\n                break;\n              }\n\n              _context4.next = 7;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].update(categoria, {\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 7:\n              actualizado = _context4.sent;\n\n              if (!(actualizado == 0)) {\n                _context4.next = 12;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", 0);\n\n            case 12:\n              return _context4.abrupt(\"return\", categoria);\n\n            case 13:\n              _context4.next = 16;\n              break;\n\n            case 15:\n              return _context4.abrupt(\"return\", null);\n\n            case 16:\n              _context4.next = 21;\n              break;\n\n            case 18:\n              _context4.prev = 18;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }, {\n    key: \"eliminarCategoria\",\n    value: function eliminarCategoria(id_categoria) {\n      var categoriaExistente, categoriaEliminada;\n      return regeneratorRuntime.async(function eliminarCategoria$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoriaExistente = _context5.sent;\n\n              if (!categoriaExistente) {\n                _context5.next = 11;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].destroy({\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 7:\n              categoriaEliminada = _context5.sent;\n              return _context5.abrupt(\"return\", categoriaEliminada);\n\n            case 11:\n              return _context5.abrupt(\"return\", null);\n\n            case 12:\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(id_categoria) {\n      var categoria, tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoria = _context6.sent;\n\n              if (!categoria) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(categoria.getTabla());\n\n            case 7:\n              tabla = _context6.sent;\n              return _context6.abrupt(\"return\", tabla.dataValues);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(id_categoria) {\n      var categoria, anio_torneo, tipo_torneo, torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoria = _context7.sent;\n              _context7.next = 6;\n              return regeneratorRuntime.awrap(categoria.anio_torneo);\n\n            case 6:\n              anio_torneo = _context7.sent;\n              _context7.next = 9;\n              return regeneratorRuntime.awrap(categoria.tipo_torneo);\n\n            case 9:\n              tipo_torneo = _context7.sent;\n              _context7.next = 12;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                raw: true,\n                where: {\n                  anio: anio_torneo,\n                  tipo: tipo_torneo\n                }\n              }));\n\n            case 12:\n              torneo = _context7.sent;\n              return _context7.abrupt(\"return\", torneo);\n\n            case 16:\n              _context7.prev = 16;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos(id_categoria) {\n      var partidos;\n      return regeneratorRuntime.async(function obtenerPartidos$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findAll({\n                raw: true,\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 3:\n              partidos = _context8.sent;\n              return _context8.abrupt(\"return\", partidos);\n\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"generarTabla\",\n    value: function generarTabla(id_categoria) {\n      var equipos, tabla, i, equipo_categoria, id_equipo, equipo, fila, tabla2, categoria, tablaActualizada;\n      return regeneratorRuntime.async(function generarTabla$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return regeneratorRuntime.awrap(_Categoria_contiene_EquipoService[\"default\"].obtenerEquipos(id_categoria));\n\n            case 3:\n              equipos = _context9.sent;\n              tabla = [];\n\n              if (!equipos) {\n                _context9.next = 31;\n                break;\n              }\n\n              _context9.t0 = regeneratorRuntime.keys(equipos);\n\n            case 7:\n              if ((_context9.t1 = _context9.t0()).done) {\n                _context9.next = 20;\n                break;\n              }\n\n              i = _context9.t1.value;\n              equipo_categoria = equipos[i];\n              _context9.next = 12;\n              return regeneratorRuntime.awrap(equipo_categoria.id_equipo);\n\n            case 12:\n              id_equipo = _context9.sent;\n              _context9.next = 15;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipoID(id_equipo));\n\n            case 15:\n              equipo = _context9.sent;\n              fila = {\n                \"id_equipo\": equipo.id_equipo,\n                \"nombre_equipo\": equipo.nombre,\n                \"puntos\": 0,\n                \"partidos_jugados\": 0,\n                \"partidos_ganados\": 0,\n                \"partidos_empatados\": 0,\n                \"partidos_perdidos\": 0,\n                \"goles_favor\": 0,\n                \"goles_contra\": 0,\n                \"diferencia_goles\": 0\n              };\n              tabla.push(fila);\n              _context9.next = 7;\n              break;\n\n            case 20:\n              tabla2 = {};\n              tabla2.tabla = tabla;\n              _context9.next = 24;\n              return regeneratorRuntime.awrap(CategoriaService.obtenerCategoria(id_categoria));\n\n            case 24:\n              categoria = _context9.sent;\n              _context9.next = 27;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].actualizarTabla(categoria.id_tabla, tabla));\n\n            case 27:\n              tablaActualizada = _context9.sent;\n              return _context9.abrupt(\"return\", tabla2);\n\n            case 31:\n              return _context9.abrupt(\"return\", null);\n\n            case 32:\n              _context9.next = 37;\n              break;\n\n            case 34:\n              _context9.prev = 34;\n              _context9.t2 = _context9[\"catch\"](0);\n              throw _context9.t2;\n\n            case 37:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 34]]);\n    }\n  }, {\n    key: \"computarPartido\",\n    value: function computarPartido(tabla, partido) {\n      var id_equipo_local, id_equipo_visitante, goles_local, goles_visitante, tablaPuntaje, fila_equipo_local, fila_equipo_visitante;\n      return regeneratorRuntime.async(function computarPartido$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              id_equipo_local = partido.id_equipo_local;\n              id_equipo_visitante = partido.id_equipo_visitante;\n              goles_local = partido.goles_local;\n              goles_visitante = partido.goles_visitante;\n              tablaPuntaje = tabla.tabla; //console.log(\"Tabla\", tablaPuntaje);\n\n              fila_equipo_local = tablaPuntaje.filter(function (fila) {\n                return fila.id_equipo == id_equipo_local;\n              });\n              fila_equipo_visitante = tablaPuntaje.filter(function (fila) {\n                return fila.id_equipo == id_equipo_visitante;\n              });\n\n              if (goles_local > goles_visitante) {\n                CategoriaService.computarVictoria(fila_equipo_local, fila_equipo_visitante);\n              } else {\n                if (goles_local < goles_visitante) {\n                  CategoriaService.computarVictoria(fila_equipo_visitante, fila_equipo_local);\n                } else {\n                  CategoriaService.computarEmpate(fila_equipo_local, fila_equipo_local);\n                }\n              }\n\n              CategoriaService.computarJugado_Goles(fila_equipo_local, goles_local, goles_visitante);\n              CategoriaService.computarJugado_Goles(fila_equipo_visitante, goles_visitante, goles_local); // ------------------------------------------------------------------------------------------------------------\n\n              /*   console.log(\"Tabla equipo local\", fila_equipo_local);\r\n                    console.log(\"Tabla equipo visitante\", fila_equipo_visitante);\r\n                      console.log(\"-------------------------------------------------\");\r\n                  console.log(\"TABLA\",tabla);  */\n              //-------------------------------------------------------------------------------------------------------------\n              ///ACÁ TENGO QUE ACTUALIZAR LA TABLA! \n\n              console.log(tabla);\n              return _context10.abrupt(\"return\", tabla);\n\n            case 15:\n              _context10.prev = 15;\n              _context10.t0 = _context10[\"catch\"](0);\n              throw _context10.t0;\n\n            case 18:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[0, 15]]);\n    }\n  }, {\n    key: \"computarVictoria\",\n    value: function computarVictoria(equipo1, equipo2) {\n      return regeneratorRuntime.async(function computarVictoria$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              //Victoria del equipo1 sobre el equipo2\n              equipo1[0].puntos += 3;\n              equipo1[0].partidos_ganados += 1;\n              equipo2[0].partidos_perdidos += 1;\n\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"computarEmpate\",\n    value: function computarEmpate(equipo1, equipo2) {\n      return regeneratorRuntime.async(function computarEmpate$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              equipo1[0].puntos += 1;\n              equipo2[0].puntos += 1;\n              equipo1[0].partidos_empatados += 1;\n              equipo2[0].partidos_empatados += 1;\n\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"computarJugado_Goles\",\n    value: function computarJugado_Goles(equipo, golesFavor, golesContra) {\n      return regeneratorRuntime.async(function computarJugado_Goles$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              equipo[0].partidos_jugados += 1;\n              equipo[0].goles_favor += golesFavor;\n              equipo[0].goles_contra += golesContra;\n              equipo[0].diferencia_goles = equipo[0].goles_favor - equipo[0].goles_contra;\n\n            case 4:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"computarPartidos\",\n    value: function computarPartidos(id_categoria, partidosJugados) {\n      var tabla, i, partidoJugado, id_partido, partidoActualizado;\n      return regeneratorRuntime.async(function computarPartidos$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return regeneratorRuntime.awrap(CategoriaService.obtenerTabla(id_categoria));\n\n            case 2:\n              tabla = _context14.sent;\n              _context14.t0 = regeneratorRuntime.keys(partidosJugados);\n\n            case 4:\n              if ((_context14.t1 = _context14.t0()).done) {\n                _context14.next = 18;\n                break;\n              }\n\n              i = _context14.t1.value;\n              partidoJugado = partidosJugados[i];\n              id_partido = partidoJugado.id_partido;\n              _context14.next = 10;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].actualizarPartido(id_partido, partidoJugado));\n\n            case 10:\n              partidoActualizado = _context14.sent;\n              _context14.next = 13;\n              return regeneratorRuntime.awrap(tabla.reload());\n\n            case 13:\n              _context14.next = 15;\n              return regeneratorRuntime.awrap(CategoriaService.computarPartido(tabla, partidoActualizado));\n\n            case 15:\n              tabla = _context14.sent;\n              _context14.next = 4;\n              break;\n\n            case 18:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"actualizarTabla\",\n    value: function actualizarTabla(id_categoria) {\n      var partidos, partidos_jugados;\n      return regeneratorRuntime.async(function actualizarTabla$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return regeneratorRuntime.awrap(CategoriaService.obtenerPartidos(id_categoria));\n\n            case 2:\n              partidos = _context15.sent;\n              partidos_jugados = partidos.filter(function (partido) {\n                //console.log(fila);\n                return partido.jugado == true;\n              });\n\n            case 4:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return CategoriaService;\n}();\n\nvar _default = CategoriaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "CategoriaService.js"
      ],
      "names": [
        "CategoriaService",
        "nuevaCategoria",
        "Categoria",
        "create",
        "findAll",
        "id_categoria",
        "findByPk",
        "categoria",
        "dataValues",
        "categoriaExistente",
        "update",
        "where",
        "actualizado",
        "destroy",
        "categoriaEliminada",
        "getTabla",
        "tabla",
        "anio_torneo",
        "tipo_torneo",
        "Torneo",
        "findOne",
        "raw",
        "anio",
        "tipo",
        "torneo",
        "Partido",
        "partidos",
        "Categoria_contiene_EquipoService",
        "obtenerEquipos",
        "equipos",
        "i",
        "equipo_categoria",
        "id_equipo",
        "EquipoService",
        "obtenerEquipoID",
        "equipo",
        "fila",
        "nombre",
        "push",
        "tabla2",
        "obtenerCategoria",
        "TablaService",
        "actualizarTabla",
        "id_tabla",
        "tablaActualizada",
        "partido",
        "id_equipo_local",
        "id_equipo_visitante",
        "goles_local",
        "goles_visitante",
        "tablaPuntaje",
        "fila_equipo_local",
        "filter",
        "fila_equipo_visitante",
        "computarVictoria",
        "computarEmpate",
        "computarJugado_Goles",
        "console",
        "log",
        "equipo1",
        "equipo2",
        "puntos",
        "partidos_ganados",
        "partidos_perdidos",
        "partidos_empatados",
        "golesFavor",
        "golesContra",
        "partidos_jugados",
        "goles_favor",
        "goles_contra",
        "diferencia_goles",
        "partidosJugados",
        "obtenerTabla",
        "partidoJugado",
        "id_partido",
        "PartidoService",
        "actualizarPartido",
        "partidoActualizado",
        "reload",
        "computarPartido",
        "obtenerPartidos",
        "jugado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;IAEMA,gB;;;;;;;;;qCAC4BC,c;;;;;;;8CAEbC,sBAAUC,MAAV,CAAiBF,cAAjB,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,sBAAUE,OAAV,E;;;;;;;;;;;;;;;;;;;qCAOaC,Y;;;;;;;;8CAEFH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAAlBE,cAAAA,S;gDAECA,SAAS,CAACC,U;;;;;;;;;;;;;;;;wCAOYH,Y,EAAaE,S;;;;;;;;8CAETL,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAA3BI,cAAAA,kB;;mBAEHA,kB;;;;;;8CACyBP,sBAAUQ,MAAV,CAAiBH,SAAjB,EAA2B;AAACI,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,YAAY,EAACA;AAAd;AAAP,eAA3B,C;;;AAApBO,cAAAA,W;;oBAEHA,WAAW,IAAE,C;;;;;gDACP,C;;;gDAGAL,S;;;;;;;gDAIF,I;;;;;;;;;;;;;;;;;;;;sCAQoBF,Y;;;;;;;;8CAEMH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAA3BI,cAAAA,kB;;mBAEHA,kB;;;;;;8CACgCP,sBAAUW,OAAV,CAAkB;AAACF,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,YAAY,EAACA;AAAd;AAAP,eAAlB,C;;;AAA3BS,cAAAA,kB;gDACCA,kB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;iCAQaT,Y;;;;;;;;8CAEEH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAAlBE,cAAAA,S;;mBAEHA,S;;;;;;8CACmBA,SAAS,CAACQ,QAAV,E;;;AAAdC,cAAAA,K;gDACCA,KAAK,CAACR,U;;;gDAGN,I;;;;;;;;;;;;;;;;;;;;kCAQcH,Y;;;;;;;;8CAGCH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAAlBE,cAAAA,S;;8CACoBA,SAAS,CAACU,W;;;AAA9BA,cAAAA,W;;8CACoBV,SAAS,CAACW,W;;;AAA9BA,cAAAA,W;;8CAEeC,mBAAOC,OAAP,CAAe;AAACC,gBAAAA,GAAG,EAAE,IAAN;AAAWV,gBAAAA,KAAK,EAAC;AAACW,kBAAAA,IAAI,EAACL,WAAN;AAAkBM,kBAAAA,IAAI,EAACL;AAAvB;AAAjB,eAAf,C;;;AAAfM,cAAAA,M;gDAECA,M;;;;;;;;;;;;;;;;oCAOkBnB,Y;;;;;;;;8CAEFoB,oBAAQrB,OAAR,CAAgB;AAACiB,gBAAAA,GAAG,EAAE,IAAN;AAAWV,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,YAAY,EAACA;AAAd;AAAjB,eAAhB,C;;;AAAjBqB,cAAAA,Q;gDACCA,Q;;;;;;;;;;;;;;;;iCAOerB,Y;;;;;;;;8CAEAsB,6CAAiCC,cAAjC,CAAgDvB,YAAhD,C;;;AAAhBwB,cAAAA,O;AACAb,cAAAA,K,GAAQ,E;;mBAEVa,O;;;;;qDAEYA,O;;;;;;;;AAALC,cAAAA,C;AACDC,cAAAA,gB,GAAmBF,OAAO,CAACC,CAAD,C;;8CACRC,gBAAgB,CAACC,S;;;AAAnCA,cAAAA,S;;8CACeC,0BAAcC,eAAd,CAA8BF,SAA9B,C;;;AAAfG,cAAAA,M;AAEFC,cAAAA,I,GAAO;AACT,6BAAaD,MAAM,CAACH,SADX;AAET,iCAAiBG,MAAM,CAACE,MAFf;AAGT,0BAAU,CAHD;AAIT,oCAAoB,CAJX;AAKT,oCAAoB,CALX;AAMT,sCAAsB,CANb;AAOT,qCAAqB,CAPZ;AAQT,+BAAe,CARN;AAST,gCAAgB,CATP;AAUT,oCAAoB;AAVX,e;AAaXrB,cAAAA,KAAK,CAACsB,IAAN,CAAWF,IAAX;;;;;AAGEG,cAAAA,M,GAAS,E;AACbA,cAAAA,MAAM,CAACvB,KAAP,GAAeA,KAAf;;8CAEwBhB,gBAAgB,CAACwC,gBAAjB,CAAkCnC,YAAlC,C;;;AAAlBE,cAAAA,S;;8CAEyBkC,yBAAaC,eAAb,CAA6BnC,SAAS,CAACoC,QAAvC,EAAgD3B,KAAhD,C;;;AAAzB4B,cAAAA,gB;gDAUCL,M;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBvB,K,EAAM6B,O;;;;;;;AAGzBC,cAAAA,e,GAAkBD,OAAO,CAACC,e;AAC1BC,cAAAA,mB,GAAsBF,OAAO,CAACE,mB;AAEhCC,cAAAA,W,GAAcH,OAAO,CAACG,W;AACtBC,cAAAA,e,GAAkBJ,OAAO,CAACI,e;AAE1BC,cAAAA,Y,GAAelC,KAAK,CAACA,K,EAEzB;;AAEImC,cAAAA,iB,GAAoBD,YAAY,CAACE,MAAb,CAAoB,UAAUhB,IAAV,EAAgB;AAC1D,uBAAOA,IAAI,CAACJ,SAAL,IAAkBc,eAAzB;AACD,eAFuB,C;AAIpBO,cAAAA,qB,GAAwBH,YAAY,CAACE,MAAb,CAAoB,UAAShB,IAAT,EAAc;AAC5D,uBAAOA,IAAI,CAACJ,SAAL,IAAkBe,mBAAzB;AACD,eAF2B,C;;AAI5B,kBAAGC,WAAW,GAACC,eAAf,EAA+B;AAC7BjD,gBAAAA,gBAAgB,CAACsD,gBAAjB,CAAkCH,iBAAlC,EAAoDE,qBAApD;AACD,eAFD,MAGI;AACF,oBAAGL,WAAW,GAACC,eAAf,EAA+B;AAC7BjD,kBAAAA,gBAAgB,CAACsD,gBAAjB,CAAkCD,qBAAlC,EAAwDF,iBAAxD;AACD,iBAFD,MAGI;AACFnD,kBAAAA,gBAAgB,CAACuD,cAAjB,CAAgCJ,iBAAhC,EAAkDA,iBAAlD;AACD;AACF;;AAEDnD,cAAAA,gBAAgB,CAACwD,oBAAjB,CAAsCL,iBAAtC,EAAwDH,WAAxD,EAAoEC,eAApE;AACAjD,cAAAA,gBAAgB,CAACwD,oBAAjB,CAAsCH,qBAAtC,EAA4DJ,eAA5D,EAA4ED,WAA5E,E,CAEV;;AACM;;;;AAON;AACU;;AACAS,cAAAA,OAAO,CAACC,GAAR,CAAY1C,KAAZ;iDAEOA,K;;;;;;;;;;;;;;;;qCAQmB2C,O,EAAQC,O;;;;;AACpC;AACAD,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWE,MAAX,IAAqB,CAArB;AACAF,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWG,gBAAX,IAA8B,CAA9B;AACAF,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWG,iBAAX,IAA+B,CAA/B;;;;;;;;;;;mCAG0BJ,O,EAAQC,O;;;;;AAClCD,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWE,MAAX,IAAqB,CAArB;AACAD,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWC,MAAX,IAAmB,CAAnB;AACAF,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWK,kBAAX,IAA+B,CAA/B;AACAJ,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWI,kBAAX,IAAgC,CAAhC;;;;;;;;;;;yCAGgC7B,M,EAAO8B,U,EAAWC,W;;;;;AAClD/B,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAUgC,gBAAV,IAA4B,CAA5B;AACAhC,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAUiC,WAAV,IAAyBH,UAAzB;AACA9B,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAUkC,YAAV,IAA0BH,WAA1B;AACA/B,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAUmC,gBAAV,GAA8BnC,MAAM,CAAC,CAAD,CAAN,CAAUiC,WAAV,GAAwBjC,MAAM,CAAC,CAAD,CAAN,CAAUkC,YAAhE;;;;;;;;;;;qCAG4BhE,Y,EAAakE,e;;;;;;;8CACvBvE,gBAAgB,CAACwE,YAAjB,CAA8BnE,YAA9B,C;;;AAAdW,cAAAA,K;sDAEUuD,e;;;;;;;;AAALzC,cAAAA,C;AACH2C,cAAAA,a,GAAgBF,eAAe,CAACzC,CAAD,C;AAC7B4C,cAAAA,U,GAAaD,aAAa,CAACC,U;;8CAEAC,2BAAeC,iBAAf,CAAiCF,UAAjC,EAA4CD,aAA5C,C;;;AAA3BI,cAAAA,kB;;8CAEA7D,KAAK,CAAC8D,MAAN,E;;;;8CACQ9E,gBAAgB,CAAC+E,eAAjB,CAAiC/D,KAAjC,EAAuC6D,kBAAvC,C;;;AAAd7D,cAAAA,K;;;;;;;;;;;;;oCAIyBX,Y;;;;;;;8CACJL,gBAAgB,CAACgF,eAAjB,CAAiC3E,YAAjC,C;;;AAAjBqB,cAAAA,Q;AAEFyC,cAAAA,gB,GAAmBzC,QAAQ,CAAC0B,MAAT,CAAgB,UAAUP,OAAV,EAAmB;AACxD;AACA,uBAAOA,OAAO,CAACoC,MAAR,IAAkB,IAAzB;AACD,eAHsB,C;;;;;;;;;;;;;;eAQdjF,gB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Categoria from '../models/Categoria';\r\nimport Torneo from '../models/Torneo';\r\nimport Partido from '../models/Partido';\r\nimport Equipo from '../models/Equipo';\r\n\r\nimport Categoria_contiene_EquipoService from './Categoria_contiene_EquipoService';\r\nimport EquipoService from './EquipoService';\r\nimport PartidoService from './PartidoService';\r\nimport TablaService from './TablaService';\r\n\r\nclass CategoriaService { \r\n    static async agregarCategoria(nuevaCategoria) {\r\n      try {\r\n        return await Categoria.create(nuevaCategoria);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerCategorias(){\r\n      try {\r\n        return await Categoria.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n    \r\n    static async obtenerCategoria(id_categoria){\r\n      try {\r\n        const categoria = await Categoria.findByPk(id_categoria);\r\n        //CategoriaService.obtenerTorneo(categoria.id_categoria);\r\n        return categoria.dataValues;\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async actualizarCategoria(id_categoria,categoria){\r\n      try {\r\n        const categoriaExistente = await Categoria.findByPk(id_categoria);\r\n\r\n        if(categoriaExistente){\r\n          const actualizado = await Categoria.update(categoria,{where:{id_categoria:id_categoria}});\r\n\r\n          if(actualizado==0){ //si no hay columnas afectadas\r\n            return 0;\r\n          }\r\n          else{\r\n            return categoria; \r\n          }\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async eliminarCategoria(id_categoria){\r\n        try {\r\n          const categoriaExistente = await Categoria.findByPk(id_categoria);\r\n  \r\n          if(categoriaExistente){\r\n            const categoriaEliminada = await Categoria.destroy({where:{id_categoria:id_categoria}});\r\n            return categoriaEliminada; \r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerTabla(id_categoria){\r\n        try {\r\n          const categoria = await Categoria.findByPk(id_categoria);\r\n          \r\n          if(categoria){\r\n            const tabla = await categoria.getTabla();\r\n            return tabla.dataValues;\r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerTorneo(id_categoria){\r\n        try {\r\n          \r\n          const categoria = await Categoria.findByPk(id_categoria);\r\n          const anio_torneo = await categoria.anio_torneo;\r\n          const tipo_torneo = await categoria.tipo_torneo;\r\n          \r\n          const torneo = await Torneo.findOne({raw: true,where:{anio:anio_torneo,tipo:tipo_torneo}});\r\n\r\n          return torneo;\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n      \r\n      static async obtenerPartidos(id_categoria){\r\n        try {\r\n          const partidos = await Partido.findAll({raw: true,where:{id_categoria:id_categoria}});\r\n          return partidos;\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async generarTabla(id_categoria){\r\n        try {\r\n          const equipos = await Categoria_contiene_EquipoService.obtenerEquipos(id_categoria);\r\n          const tabla = [];\r\n\r\n          if (equipos){\r\n\r\n            for (var i in equipos){\r\n              const equipo_categoria = equipos[i];\r\n              const id_equipo = await equipo_categoria.id_equipo;\r\n              const equipo = await EquipoService.obtenerEquipoID(id_equipo);\r\n              \r\n              var fila = {\r\n                \"id_equipo\": equipo.id_equipo,\r\n                \"nombre_equipo\": equipo.nombre,\r\n                \"puntos\": 0,  \r\n                \"partidos_jugados\": 0,\r\n                \"partidos_ganados\": 0,\r\n                \"partidos_empatados\": 0,\r\n                \"partidos_perdidos\": 0,\r\n                \"goles_favor\": 0,\r\n                \"goles_contra\": 0,\r\n                \"diferencia_goles\": 0\r\n              };\r\n\r\n              tabla.push(fila);\r\n            }\r\n\r\n            var tabla2 = {};\r\n            tabla2.tabla = tabla;\r\n\r\n            const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n\r\n            const tablaActualizada = await TablaService.actualizarTabla(categoria.id_tabla,tabla); \r\n\r\n            /*console.log(\"la tabla de la Categoria es \",categoria.id_tabla);\r\n            //const categoriaActualizada = await CategoriaService.actualizarCategoria(id_categoria,categoria);\r\n\r\n            console.log(\"tabla generada para la categoria\",tabla2);\r\n\r\n            console.log(\"Tabla actualizada?\", tablaActualizada); */\r\n\r\n\r\n            return tabla2;\r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n\r\n        } catch (error) {\r\n           throw error;\r\n        }\r\n      }\r\n\r\n      static async computarPartido(tabla,partido){\r\n        try {\r\n\r\n          const id_equipo_local = partido.id_equipo_local;\r\n          const id_equipo_visitante = partido.id_equipo_visitante;\r\n          \r\n          var goles_local = partido.goles_local;\r\n          var goles_visitante = partido.goles_visitante;\r\n\r\n          var tablaPuntaje = tabla.tabla;\r\n\r\n          //console.log(\"Tabla\", tablaPuntaje);\r\n          \r\n          var fila_equipo_local = tablaPuntaje.filter(function (fila) {\r\n            return fila.id_equipo == id_equipo_local;\r\n          });\r\n\r\n          var fila_equipo_visitante = tablaPuntaje.filter(function(fila){\r\n            return fila.id_equipo == id_equipo_visitante;\r\n          });\r\n\r\n          if(goles_local>goles_visitante){\r\n            CategoriaService.computarVictoria(fila_equipo_local,fila_equipo_visitante);\r\n          }\r\n          else{\r\n            if(goles_local<goles_visitante){\r\n              CategoriaService.computarVictoria(fila_equipo_visitante,fila_equipo_local);\r\n            }\r\n            else{\r\n              CategoriaService.computarEmpate(fila_equipo_local,fila_equipo_local);\r\n            }\r\n          }\r\n\r\n          CategoriaService.computarJugado_Goles(fila_equipo_local,goles_local,goles_visitante);\r\n          CategoriaService.computarJugado_Goles(fila_equipo_visitante,goles_visitante,goles_local);\r\n\r\n// ------------------------------------------------------------------------------------------------------------\r\n      /*   console.log(\"Tabla equipo local\", fila_equipo_local);\r\n\r\n          console.log(\"Tabla equipo visitante\", fila_equipo_visitante);\r\n\r\n\r\n          console.log(\"-------------------------------------------------\");\r\n          console.log(\"TABLA\",tabla);  */ \r\n//-------------------------------------------------------------------------------------------------------------\r\n          ///ACÁ TENGO QUE ACTUALIZAR LA TABLA! \r\n          console.log(tabla);\r\n          \r\n          return tabla;\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n\r\n      static async computarVictoria(equipo1,equipo2){\r\n        //Victoria del equipo1 sobre el equipo2\r\n        equipo1[0].puntos += 3;\r\n        equipo1[0].partidos_ganados +=1;\r\n        equipo2[0].partidos_perdidos +=1;\r\n      }\r\n\r\n      static async computarEmpate(equipo1,equipo2){\r\n        equipo1[0].puntos += 1;\r\n        equipo2[0].puntos+=1;\r\n        equipo1[0].partidos_empatados+=1;\r\n        equipo2[0].partidos_empatados +=1;\r\n      }\r\n\r\n      static async computarJugado_Goles(equipo,golesFavor,golesContra){\r\n        equipo[0].partidos_jugados+=1;\r\n        equipo[0].goles_favor += golesFavor;\r\n        equipo[0].goles_contra += golesContra;\r\n        equipo[0].diferencia_goles = (equipo[0].goles_favor - equipo[0].goles_contra);\r\n      }\r\n\r\n      static async computarPartidos(id_categoria,partidosJugados){\r\n        var tabla = await CategoriaService.obtenerTabla(id_categoria);\r\n\r\n        for (var i in partidosJugados){\r\n          var partidoJugado = partidosJugados[i];\r\n          const id_partido = partidoJugado.id_partido;\r\n          \r\n          const partidoActualizado = await PartidoService.actualizarPartido(id_partido,partidoJugado);\r\n\r\n          await tabla.reload();   // chequear esto después\r\n          tabla = await CategoriaService.computarPartido(tabla,partidoActualizado);\r\n        }\r\n      }\r\n\r\n      static async actualizarTabla(id_categoria){\r\n        const partidos = await CategoriaService.obtenerPartidos(id_categoria);\r\n\r\n        var partidos_jugados = partidos.filter(function (partido) {\r\n          //console.log(fila);\r\n          return partido.jugado == true;\r\n        });\r\n        \r\n      }\r\n  } \r\n\r\n  export default CategoriaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584455886173
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Categoria.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Categoria.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Categoria.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Categoria.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Categoria.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Tabla = _interopRequireDefault(require(\"./Tabla\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"./ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Categoria = _database.sequelize.define('Categoria', {\n  id_categoria: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  tipo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  anio_torneo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  tipo_torneo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  id_tabla: {\n    type: _sequelize[\"default\"].INTEGER,\n    unique: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nCategoria.belongsTo(_Tabla[\"default\"], {\n  foreignKey: 'id_tabla',\n  as: 'tabla'\n}); // funciona bien! \n//Categoria.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});    //está bien (en 'as' poner nombres simples y en minuscula)\n//Lo que hace es llevar id_categoria a ListaInscripción . \n// When you have a 1:N relation between models you only need to refer the id from the \"1\" model, on our case the User model, on the \"N\" model, Photos. So doing:\n//https://stackoverflow.com/questions/44070808/hasmany-called-with-something-thats-not-an-instance-of-sequelize-model\n\nvar _default = Categoria;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpYS5qcyJdLCJuYW1lcyI6WyJDYXRlZ29yaWEiLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJpZF9jYXRlZ29yaWEiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50Iiwibm9tYnJlIiwiVEVYVCIsInRpcG8iLCJhbmlvX3Rvcm5lbyIsInRpcG9fdG9ybmVvIiwiaWRfdGFibGEiLCJ1bmlxdWUiLCJ0aW1lc3RhbXBzIiwiZnJlZXplVGFibGVOYW1lIiwiYmVsb25nc1RvIiwiVGFibGEiLCJmb3JlaWduS2V5IiwiYXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDNUNDLEVBQUFBLFlBQVksRUFBRTtBQUNWQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQUROO0FBRVZDLElBQUFBLFVBQVUsRUFBRSxJQUZGO0FBR1ZDLElBQUFBLGFBQWEsRUFBRTtBQUhMLEdBRDhCO0FBTTVDQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkwsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEWixHQU5vQztBQVM1Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZQLElBQUFBLElBQUksRUFBRUMsc0JBQVVLO0FBRGQsR0FUc0M7QUFZNUNFLEVBQUFBLFdBQVcsRUFBRTtBQUNUUixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURQLEdBWitCO0FBZTVDTyxFQUFBQSxXQUFXLEVBQUU7QUFDVFQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEUCxHQWYrQjtBQWtCNUNJLEVBQUFBLFFBQVEsRUFBQztBQUNMVixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURYO0FBRUxTLElBQUFBLE1BQU0sRUFBQztBQUZGO0FBbEJtQyxDQUE5QixFQXNCZjtBQUNDQyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0F0QmUsQ0FBbEI7O0FBMkJBakIsU0FBUyxDQUFDa0IsU0FBVixDQUFvQkMsaUJBQXBCLEVBQTBCO0FBQUNDLEVBQUFBLFVBQVUsRUFBRSxVQUFiO0FBQXlCQyxFQUFBQSxFQUFFLEVBQUM7QUFBNUIsQ0FBMUIsRSxDQUFpRTtBQUVqRTtBQUNBO0FBTUE7QUFDQTs7ZUFFZXJCLFMiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQge3NlcXVlbGl6ZSB9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcbmltcG9ydCBUYWJsYSBmcm9tICcuL1RhYmxhJztcclxuaW1wb3J0IExpc3RhSW5zY3JpcGNpb24gZnJvbSAnLi9MaXN0YUluc2NyaXBjaW9uJztcclxuXHJcbmNvbnN0IENhdGVnb3JpYSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0NhdGVnb3JpYScsIHtcclxuICAgIGlkX2NhdGVnb3JpYToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXHJcbiAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5vbWJyZToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgdGlwbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgYW5pb190b3JuZW86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIHRpcG9fdG9ybmVvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBpZF90YWJsYTp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgdW5pcXVlOnRydWVcclxuICAgIH1cclxufSwge1xyXG4gICAgdGltZXN0YW1wczogZmFsc2UsXHJcbiAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUsXHJcbn0pO1xyXG5cclxuQ2F0ZWdvcmlhLmJlbG9uZ3NUbyhUYWJsYSx7Zm9yZWlnbktleTogJ2lkX3RhYmxhJywgYXM6J3RhYmxhJ30pOyAvLyBmdW5jaW9uYSBiaWVuISBcclxuXHJcbi8vQ2F0ZWdvcmlhLmhhc01hbnkoTGlzdGFJbnNjcmlwY2lvbiwge2ZvcmVpZ25LZXk6ICdpZF9jYXRlZ29yaWEnLCBhczonbGlzdGFzJ30pOyAgICAvL2VzdMOhIGJpZW4gKGVuICdhcycgcG9uZXIgbm9tYnJlcyBzaW1wbGVzIHkgZW4gbWludXNjdWxhKVxyXG4vL0xvIHF1ZSBoYWNlIGVzIGxsZXZhciBpZF9jYXRlZ29yaWEgYSBMaXN0YUluc2NyaXBjacOzbiAuIFxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIFdoZW4geW91IGhhdmUgYSAxOk4gcmVsYXRpb24gYmV0d2VlbiBtb2RlbHMgeW91IG9ubHkgbmVlZCB0byByZWZlciB0aGUgaWQgZnJvbSB0aGUgXCIxXCIgbW9kZWwsIG9uIG91ciBjYXNlIHRoZSBVc2VyIG1vZGVsLCBvbiB0aGUgXCJOXCIgbW9kZWwsIFBob3Rvcy4gU28gZG9pbmc6XHJcbi8vaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDQwNzA4MDgvaGFzbWFueS1jYWxsZWQtd2l0aC1zb21ldGhpbmctdGhhdHMtbm90LWFuLWluc3RhbmNlLW9mLXNlcXVlbGl6ZS1tb2RlbFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcmlhOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Categoria.js"
      ],
      "names": [
        "Categoria",
        "sequelize",
        "define",
        "id_categoria",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "nombre",
        "TEXT",
        "tipo",
        "anio_torneo",
        "tipo_torneo",
        "id_tabla",
        "unique",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Tabla",
        "foreignKey",
        "as"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,SAAS,GAAGC,oBAAUC,MAAV,CAAiB,WAAjB,EAA8B;AAC5CC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAEC,sBAAUC,OADN;AAEVC,IAAAA,UAAU,EAAE,IAFF;AAGVC,IAAAA,aAAa,EAAE;AAHL,GAD8B;AAM5CC,EAAAA,MAAM,EAAE;AACJL,IAAAA,IAAI,EAAEC,sBAAUK;AADZ,GANoC;AAS5CC,EAAAA,IAAI,EAAE;AACFP,IAAAA,IAAI,EAAEC,sBAAUK;AADd,GATsC;AAY5CE,EAAAA,WAAW,EAAE;AACTR,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GAZ+B;AAe5CO,EAAAA,WAAW,EAAE;AACTT,IAAAA,IAAI,EAAEC,sBAAUK;AADP,GAf+B;AAkB5CI,EAAAA,QAAQ,EAAC;AACLV,IAAAA,IAAI,EAAEC,sBAAUC,OADX;AAELS,IAAAA,MAAM,EAAC;AAFF;AAlBmC,CAA9B,EAsBf;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAtBe,CAAlB;;AA2BAjB,SAAS,CAACkB,SAAV,CAAoBC,iBAApB,EAA0B;AAACC,EAAAA,UAAU,EAAE,UAAb;AAAyBC,EAAAA,EAAE,EAAC;AAA5B,CAA1B,E,CAAiE;AAEjE;AACA;AAMA;AACA;;eAEerB,S",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize } from '../database/database';\r\n\r\nimport Tabla from './Tabla';\r\nimport ListaInscripcion from './ListaInscripcion';\r\n\r\nconst Categoria = sequelize.define('Categoria', {\r\n    id_categoria: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    tipo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    anio_torneo: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    tipo_torneo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    id_tabla:{\r\n        type: Sequelize.INTEGER,\r\n        unique:true\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nCategoria.belongsTo(Tabla,{foreignKey: 'id_tabla', as:'tabla'}); // funciona bien! \r\n\r\n//Categoria.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});    //está bien (en 'as' poner nombres simples y en minuscula)\r\n//Lo que hace es llevar id_categoria a ListaInscripción . \r\n\r\n\r\n\r\n\r\n\r\n// When you have a 1:N relation between models you only need to refer the id from the \"1\" model, on our case the User model, on the \"N\" model, Photos. So doing:\r\n//https://stackoverflow.com/questions/44070808/hasmany-called-with-something-thats-not-an-instance-of-sequelize-model\r\n\r\nexport default Categoria;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595364676784
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\equipo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\equipo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\equipo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\equipo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "equipo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _equipo = _interopRequireDefault(require(\"../controllers/equipo.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.post('/', _equipo[\"default\"].crearEquipo);\nrouter.get('/', _equipo[\"default\"].obtenerEquipos);\nrouter.get('/nombre=:nombre', _equipo[\"default\"].obtenerEquipo);\nrouter.get('/:id', _equipo[\"default\"].obtenerEquipo);\nrouter.put('/:id', _equipo[\"default\"].actualizarEquipo);\nrouter[\"delete\"]('/:id', _equipo[\"default\"].eliminarEquipo);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVxdWlwby5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJwb3N0IiwiRXF1aXBvQ29udHJvbGxlciIsImNyZWFyRXF1aXBvIiwiZ2V0Iiwib2J0ZW5lckVxdWlwb3MiLCJvYnRlbmVyRXF1aXBvIiwicHV0IiwiYWN0dWFsaXphckVxdWlwbyIsImVsaW1pbmFyRXF1aXBvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBR0E7Ozs7QUFGQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFJQUEsTUFBTSxDQUFDQyxJQUFQLENBQVksR0FBWixFQUFnQkMsbUJBQWlCQyxXQUFqQztBQUNBSCxNQUFNLENBQUNJLEdBQVAsQ0FBVyxHQUFYLEVBQWVGLG1CQUFpQkcsY0FBaEM7QUFDQUwsTUFBTSxDQUFDSSxHQUFQLENBQVcsaUJBQVgsRUFBNkJGLG1CQUFpQkksYUFBOUM7QUFDQU4sTUFBTSxDQUFDSSxHQUFQLENBQVcsTUFBWCxFQUFrQkYsbUJBQWlCSSxhQUFuQztBQUNBTixNQUFNLENBQUNPLEdBQVAsQ0FBVyxNQUFYLEVBQWtCTCxtQkFBaUJNLGdCQUFuQztBQUVBUixNQUFNLFVBQU4sQ0FBYyxNQUFkLEVBQXFCRSxtQkFBaUJPLGNBQXRDO2VBRWVULE0iLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuaW1wb3J0IEVxdWlwb0NvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvZXF1aXBvLmNvbnRyb2xsZXInO1xyXG5cclxucm91dGVyLnBvc3QoJy8nLEVxdWlwb0NvbnRyb2xsZXIuY3JlYXJFcXVpcG8pO1xyXG5yb3V0ZXIuZ2V0KCcvJyxFcXVpcG9Db250cm9sbGVyLm9idGVuZXJFcXVpcG9zKTtcclxucm91dGVyLmdldCgnL25vbWJyZT06bm9tYnJlJyxFcXVpcG9Db250cm9sbGVyLm9idGVuZXJFcXVpcG8pO1xyXG5yb3V0ZXIuZ2V0KCcvOmlkJyxFcXVpcG9Db250cm9sbGVyLm9idGVuZXJFcXVpcG8pO1xyXG5yb3V0ZXIucHV0KCcvOmlkJyxFcXVpcG9Db250cm9sbGVyLmFjdHVhbGl6YXJFcXVpcG8pO1xyXG5cclxucm91dGVyLmRlbGV0ZSgnLzppZCcsRXF1aXBvQ29udHJvbGxlci5lbGltaW5hckVxdWlwbyk7IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "equipo.js"
      ],
      "names": [
        "router",
        "post",
        "EquipoController",
        "crearEquipo",
        "get",
        "obtenerEquipos",
        "obtenerEquipo",
        "put",
        "actualizarEquipo",
        "eliminarEquipo"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAgBC,mBAAiBC,WAAjC;AACAH,MAAM,CAACI,GAAP,CAAW,GAAX,EAAeF,mBAAiBG,cAAhC;AACAL,MAAM,CAACI,GAAP,CAAW,iBAAX,EAA6BF,mBAAiBI,aAA9C;AACAN,MAAM,CAACI,GAAP,CAAW,MAAX,EAAkBF,mBAAiBI,aAAnC;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAkBL,mBAAiBM,gBAAnC;AAEAR,MAAM,UAAN,CAAc,MAAd,EAAqBE,mBAAiBO,cAAtC;eAEeT,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport EquipoController from '../controllers/equipo.controller';\r\n\r\nrouter.post('/',EquipoController.crearEquipo);\r\nrouter.get('/',EquipoController.obtenerEquipos);\r\nrouter.get('/nombre=:nombre',EquipoController.obtenerEquipo);\r\nrouter.get('/:id',EquipoController.obtenerEquipo);\r\nrouter.put('/:id',EquipoController.actualizarEquipo);\r\n\r\nrouter.delete('/:id',EquipoController.eliminarEquipo); \r\n\r\nexport default router;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595864433818
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\equipo.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\equipo.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\equipo.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\equipo.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "equipo.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _EquipoService = _interopRequireDefault(require(\"../services/EquipoService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar EquipoController =\n/*#__PURE__*/\nfunction () {\n  function EquipoController() {\n    _classCallCheck(this, EquipoController);\n  }\n\n  _createClass(EquipoController, null, [{\n    key: \"crearEquipo\",\n    value: function crearEquipo(req, res) {\n      var nuevoEquipo, EquipoCreada;\n      return regeneratorRuntime.async(function crearEquipo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoEquipo = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].agregarEquipo(nuevoEquipo));\n\n            case 4:\n              EquipoCreada = _context.sent;\n              util.setSuccess(201, 'Equipo añadido', EquipoCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos(req, res) {\n      var Equipos;\n      return regeneratorRuntime.async(function obtenerEquipos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipos());\n\n            case 3:\n              Equipos = _context2.sent;\n\n              if (Equipos && Equipos.length > 0) {\n                util.setSuccess(200, 'Equipos obtenidos', Equipos);\n              } else {\n                util.setSuccess(200, 'No se encuentran Equipos');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerEquipo\",\n    value: function obtenerEquipo(req, res) {\n      var equipo, id, nombre;\n      return regeneratorRuntime.async(function obtenerEquipo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              if (!req.params.id) {\n                _context3.next = 8;\n                break;\n              }\n\n              id = req.params.id;\n              _context3.next = 5;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipoID(id));\n\n            case 5:\n              equipo = _context3.sent;\n              _context3.next = 12;\n              break;\n\n            case 8:\n              nombre = req.params.nombre;\n              _context3.next = 11;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipo(nombre));\n\n            case 11:\n              equipo = _context3.sent;\n\n            case 12:\n              if (equipo) {\n                util.setSuccess(200, 'Equipo obtenido', equipo);\n              } else {\n                util.setError(404, \"Equipo no encontrado\");\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"actualizarEquipo\",\n    value: function actualizarEquipo(req, res) {\n      var id_equipo, equipo, equipoActualizado;\n      return regeneratorRuntime.async(function actualizarEquipo$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_equipo = req.params.id;\n              equipo = req.body;\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].actualizarEquipo(id_equipo, equipo));\n\n            case 5:\n              equipoActualizado = _context4.sent;\n\n              if (equipoActualizado) {\n                util.setSuccess(200, 'Categoría actualizada', equipoActualizado);\n              } else {\n                util.setError(404, \"Equipo no encontrado\");\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarEquipo\",\n    value: function eliminarEquipo(req, res) {\n      var id_equipo, equipoEliminado;\n      return regeneratorRuntime.async(function eliminarEquipo$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_equipo = req.params.id;\n              _context5.next = 4;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].eliminarEquipo(id_equipo));\n\n            case 4:\n              equipoEliminado = _context5.sent;\n\n              if (equipoEliminado) {\n                util.setSuccess(200, 'Equuipo eliminado');\n              } else {\n                util.setError(404, \"Equipo con id_equipo: \".concat(id_equipo, \" no encontrado \"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return EquipoController;\n}();\n\nvar _default = EquipoController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "equipo.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "EquipoController",
        "req",
        "res",
        "nuevoEquipo",
        "body",
        "EquipoService",
        "agregarEquipo",
        "EquipoCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerEquipos",
        "Equipos",
        "length",
        "params",
        "id",
        "obtenerEquipoID",
        "equipo",
        "nombre",
        "obtenerEquipo",
        "id_equipo",
        "actualizarEquipo",
        "equipoActualizado",
        "eliminarEquipo",
        "equipoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,gB;;;;;;;;;gCACuBC,G,EAAKC,G;;;;;;;AAEhBC,cAAAA,W,GAAcF,GAAG,CAACG,I;;8CACGC,0BAAcC,aAAd,CAA4BH,WAA5B,C;;;AAArBI,cAAAA,Y;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,gBAApB,EAAqCD,YAArC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;;8CAEHG,0BAAcO,cAAd,E;;;AAAhBC,cAAAA,O;;AAEN,kBAAGA,OAAO,IAAIA,OAAO,CAACC,MAAR,GAAiB,CAA/B,EAAiC;AAC7BhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCK,OAAxC;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,0BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;;mBAIrBD,GAAG,CAACc,MAAJ,CAAWC,E;;;;;AACJA,cAAAA,E,GAAKf,GAAG,CAACc,MAAJ,CAAWC,E;;8CACPX,0BAAcY,eAAd,CAA8BD,EAA9B,C;;;AAAfE,cAAAA,M;;;;;AAGMC,cAAAA,M,GAASlB,GAAG,CAACc,MAAJ,CAAWI,M;;8CACXd,0BAAce,aAAd,CAA4BD,MAA5B,C;;;AAAfD,cAAAA,M;;;AAGJ,kBAAGA,MAAH,EAAU;AACNpB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCU,MAAtC;AACH,eAFD,MAGI;AACApB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;qCAIeD,G,EAAKC,G;;;;;;;AAGrBmB,cAAAA,S,GAAYpB,GAAG,CAACc,MAAJ,CAAWC,E;AAEvBE,cAAAA,M,GAASjB,GAAG,CAACG,I;;8CAEaC,0BAAciB,gBAAd,CAA+BD,SAA/B,EAAyCH,MAAzC,C;;;AAA1BK,cAAAA,iB;;AAEN,kBAAGA,iBAAH,EAAqB;AACjBzB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,uBAApB,EAA4Ce,iBAA5C;AACH,eAFD,MAGI;AACAzB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDAEMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBmB,cAAAA,S,GAAYpB,GAAG,CAACc,MAAJ,CAAWC,E;;8CACCX,0BAAcmB,cAAd,CAA6BH,SAA7B,C;;;AAAxBI,cAAAA,e;;AAEN,kBAAGA,eAAH,EAAmB;AACf3B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,kCAA2CW,SAA3C;AACH;;gDAEMvB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,gB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import EquipoService from '../services/EquipoService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass EquipoController {\r\n    static async crearEquipo(req, res) {    \r\n        try {    \r\n            const nuevoEquipo = req.body;\r\n            const EquipoCreada = await EquipoService.agregarEquipo(nuevoEquipo);\r\n\r\n            util.setSuccess(201,'Equipo añadido',EquipoCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerEquipos(req, res){\r\n        try {\r\n            const Equipos = await EquipoService.obtenerEquipos();\r\n            \r\n            if(Equipos && Equipos.length > 0){\r\n                util.setSuccess(200,'Equipos obtenidos',Equipos);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Equipos'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerEquipo(req, res){\r\n        try {\r\n            var equipo;\r\n\r\n            if(req.params.id){\r\n                const id = req.params.id;\r\n                equipo = await EquipoService.obtenerEquipoID(id);\r\n            }\r\n            else{\r\n                const nombre = req.params.nombre;\r\n                equipo = await EquipoService.obtenerEquipo(nombre);\r\n            }\r\n            \r\n            if(equipo){\r\n                util.setSuccess(200,'Equipo obtenido',equipo);\r\n            }\r\n            else{\r\n                util.setError(404,`Equipo no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n  \r\n    static async actualizarEquipo(req, res){\r\n\r\n        try {\r\n            const id_equipo = req.params.id;\r\n\r\n            const equipo = req.body;\r\n\r\n            const equipoActualizado = await EquipoService.actualizarEquipo(id_equipo,equipo);\r\n\r\n            if(equipoActualizado){\r\n                util.setSuccess(200,'Categoría actualizada',equipoActualizado);\r\n            }\r\n            else{\r\n                util.setError(404,`Equipo no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarEquipo(req, res){\r\n        try {\r\n            const id_equipo = req.params.id;\r\n            const equipoEliminado = await EquipoService.eliminarEquipo(id_equipo);\r\n\r\n            if(equipoEliminado){\r\n                util.setSuccess(200,'Equuipo eliminado');\r\n            }\r\n            else{\r\n                util.setError(404,`Equipo con id_equipo: ${id_equipo} no encontrado `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n} \r\n\r\nexport default EquipoController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595871897582
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\EquipoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\EquipoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\EquipoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\EquipoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "EquipoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Equipo = _interopRequireDefault(require(\"../models/Equipo\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar EquipoService =\n/*#__PURE__*/\nfunction () {\n  function EquipoService() {\n    _classCallCheck(this, EquipoService);\n  }\n\n  _createClass(EquipoService, null, [{\n    key: \"agregarEquipo\",\n    value: function agregarEquipo(nuevoEquipo) {\n      return regeneratorRuntime.async(function agregarEquipo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].create(nuevoEquipo));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos() {\n      return regeneratorRuntime.async(function obtenerEquipos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerEquipo\",\n    value: function obtenerEquipo(nombre) {\n      var equipo;\n      return regeneratorRuntime.async(function obtenerEquipo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findOne({\n                where: {\n                  nombre: nombre\n                }\n              }));\n\n            case 3:\n              equipo = _context3.sent;\n              return _context3.abrupt(\"return\", equipo);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerEquipoID\",\n    value: function obtenerEquipoID(id) {\n      var equipo;\n      return regeneratorRuntime.async(function obtenerEquipoID$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              console.log(\"Mostrar\", id);\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findByPk(id));\n\n            case 4:\n              equipo = _context4.sent;\n              return _context4.abrupt(\"return\", equipo);\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"actualizarEquipo\",\n    value: function actualizarEquipo(id_equipo, equipo) {\n      var equipoExistente;\n      return regeneratorRuntime.async(function actualizarEquipo$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findByPk(id_equipo));\n\n            case 3:\n              equipoExistente = _context5.sent;\n\n              if (!equipoExistente) {\n                _context5.next = 10;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].update(equipo, {\n                where: {\n                  id_equipo: id_equipo\n                }\n              }));\n\n            case 7:\n              return _context5.abrupt(\"return\", equipo);\n\n            case 10:\n              return _context5.abrupt(\"return\", null);\n\n            case 11:\n              _context5.next = 16;\n              break;\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarEquipo\",\n    value: function eliminarEquipo(id_equipo) {\n      var equipoExistente, equipoEliminado;\n      return regeneratorRuntime.async(function eliminarEquipo$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findByPk(id_equipo));\n\n            case 3:\n              equipoExistente = _context6.sent;\n\n              if (!equipoExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].destroy({\n                where: {\n                  id_equipo: id_equipo\n                }\n              }));\n\n            case 7:\n              equipoEliminado = _context6.sent;\n              return _context6.abrupt(\"return\", equipoEliminado);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return EquipoService;\n}();\n\nvar _default = EquipoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVxdWlwb1NlcnZpY2UuanMiXSwibmFtZXMiOlsiRXF1aXBvU2VydmljZSIsIm51ZXZvRXF1aXBvIiwiRXF1aXBvIiwiY3JlYXRlIiwiZmluZEFsbCIsIm5vbWJyZSIsImZpbmRPbmUiLCJ3aGVyZSIsImVxdWlwbyIsImlkIiwiY29uc29sZSIsImxvZyIsImZpbmRCeVBrIiwiaWRfZXF1aXBvIiwiZXF1aXBvRXhpc3RlbnRlIiwidXBkYXRlIiwiZGVzdHJveSIsImVxdWlwb0VsaW1pbmFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRU1BLGE7Ozs7Ozs7OztrQ0FDeUJDLFc7Ozs7Ozs7OENBRVZDLG1CQUFPQyxNQUFQLENBQWNGLFdBQWQsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OENBUUFDLG1CQUFPRSxPQUFQLEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBT1VDLE07Ozs7Ozs7OzhDQUVGSCxtQkFBT0ksT0FBUCxDQUFlO0FBQUNDLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0Ysa0JBQUFBLE1BQU0sRUFBQ0E7QUFBUjtBQUFQLGVBQWYsQzs7O0FBQWZHLGNBQUFBLE07Z0RBQ0NBLE07Ozs7Ozs7Ozs7Ozs7Ozs7b0NBT29CQyxFOzs7Ozs7O0FBRXpCQyxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxTQUFaLEVBQXNCRixFQUF0Qjs7OENBQ3FCUCxtQkFBT1UsUUFBUCxDQUFnQkgsRUFBaEIsQzs7O0FBQWZELGNBQUFBLE07Z0RBQ0NBLE07Ozs7Ozs7Ozs7Ozs7Ozs7cUNBT2lCSyxTLEVBQVVMLE07Ozs7Ozs7OzhDQUVOTixtQkFBT1UsUUFBUCxDQUFnQkMsU0FBaEIsQzs7O0FBQXhCQyxjQUFBQSxlOzttQkFFSEEsZTs7Ozs7OzhDQUNLWixtQkFBT2EsTUFBUCxDQUFjUCxNQUFkLEVBQXFCO0FBQUNELGdCQUFBQSxLQUFLLEVBQUM7QUFBQ00sa0JBQUFBLFNBQVMsRUFBQ0E7QUFBWDtBQUFQLGVBQXJCLEM7OztnREFDQ0wsTTs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQVFlSyxTOzs7Ozs7Ozs4Q0FFTVgsbUJBQU9VLFFBQVAsQ0FBZ0JDLFNBQWhCLEM7OztBQUF4QkMsY0FBQUEsZTs7bUJBRUhBLGU7Ozs7Ozs4Q0FDNkJaLG1CQUFPYyxPQUFQLENBQWU7QUFBQ1QsZ0JBQUFBLEtBQUssRUFBQztBQUFDTSxrQkFBQUEsU0FBUyxFQUFDQTtBQUFYO0FBQVAsZUFBZixDOzs7QUFBeEJJLGNBQUFBLGU7Z0RBQ0NBLGU7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQVVBakIsYSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFcXVpcG8gZnJvbSAnLi4vbW9kZWxzL0VxdWlwbyc7XHJcblxyXG5jbGFzcyBFcXVpcG9TZXJ2aWNlIHsgXHJcbiAgICBzdGF0aWMgYXN5bmMgYWdyZWdhckVxdWlwbyhudWV2b0VxdWlwbykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBFcXVpcG8uY3JlYXRlKG51ZXZvRXF1aXBvKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyRXF1aXBvcygpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBFcXVpcG8uZmluZEFsbCgpO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjsgICBcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyRXF1aXBvKG5vbWJyZSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZXF1aXBvID0gYXdhaXQgRXF1aXBvLmZpbmRPbmUoe3doZXJlOntub21icmU6bm9tYnJlfX0pO1xyXG4gICAgICAgIHJldHVybiBlcXVpcG87XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyRXF1aXBvSUQoaWQpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIk1vc3RyYXJcIixpZCk7XHJcbiAgICAgICAgICBjb25zdCBlcXVpcG8gPSBhd2FpdCBFcXVpcG8uZmluZEJ5UGsoaWQpO1xyXG4gICAgICAgICAgcmV0dXJuIGVxdWlwbztcclxuICAgICAgICB9XHJcbiAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphckVxdWlwbyhpZF9lcXVpcG8sZXF1aXBvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBlcXVpcG9FeGlzdGVudGUgPSBhd2FpdCBFcXVpcG8uZmluZEJ5UGsoaWRfZXF1aXBvKTtcclxuXHJcbiAgICAgICAgaWYoZXF1aXBvRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGF3YWl0IEVxdWlwby51cGRhdGUoZXF1aXBvLHt3aGVyZTp7aWRfZXF1aXBvOmlkX2VxdWlwb319KTtcclxuICAgICAgICAgIHJldHVybiBlcXVpcG87IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgc3RhdGljIGFzeW5jIGVsaW1pbmFyRXF1aXBvKGlkX2VxdWlwbyl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZXF1aXBvRXhpc3RlbnRlID0gYXdhaXQgRXF1aXBvLmZpbmRCeVBrKGlkX2VxdWlwbyk7XHJcblxyXG4gICAgICAgIGlmKGVxdWlwb0V4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBjb25zdCBlcXVpcG9FbGltaW5hZG8gPSBhd2FpdCBFcXVpcG8uZGVzdHJveSh7d2hlcmU6e2lkX2VxdWlwbzppZF9lcXVpcG99fSk7XHJcbiAgICAgICAgICByZXR1cm4gZXF1aXBvRWxpbWluYWRvOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxufSBcclxuXHJcbiAgZXhwb3J0IGRlZmF1bHQgRXF1aXBvU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "EquipoService.js"
      ],
      "names": [
        "EquipoService",
        "nuevoEquipo",
        "Equipo",
        "create",
        "findAll",
        "nombre",
        "findOne",
        "where",
        "equipo",
        "id",
        "console",
        "log",
        "findByPk",
        "id_equipo",
        "equipoExistente",
        "update",
        "destroy",
        "equipoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,a;;;;;;;;;kCACyBC,W;;;;;;;8CAEVC,mBAAOC,MAAP,CAAcF,WAAd,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,mBAAOE,OAAP,E;;;;;;;;;;;;;;;;;;;kCAOUC,M;;;;;;;;8CAEFH,mBAAOI,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACF,kBAAAA,MAAM,EAACA;AAAR;AAAP,eAAf,C;;;AAAfG,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;oCAOoBC,E;;;;;;;AAEzBC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,EAAtB;;8CACqBP,mBAAOU,QAAP,CAAgBH,EAAhB,C;;;AAAfD,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;qCAOiBK,S,EAAUL,M;;;;;;;;8CAENN,mBAAOU,QAAP,CAAgBC,SAAhB,C;;;AAAxBC,cAAAA,e;;mBAEHA,e;;;;;;8CACKZ,mBAAOa,MAAP,CAAcP,MAAd,EAAqB;AAACD,gBAAAA,KAAK,EAAC;AAACM,kBAAAA,SAAS,EAACA;AAAX;AAAP,eAArB,C;;;gDACCL,M;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;mCAQeK,S;;;;;;;;8CAEMX,mBAAOU,QAAP,CAAgBC,SAAhB,C;;;AAAxBC,cAAAA,e;;mBAEHA,e;;;;;;8CAC6BZ,mBAAOc,OAAP,CAAe;AAACT,gBAAAA,KAAK,EAAC;AAACM,kBAAAA,SAAS,EAACA;AAAX;AAAP,eAAf,C;;;AAAxBI,cAAAA,e;gDACCA,e;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eAUAjB,a",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Equipo from '../models/Equipo';\r\n\r\nclass EquipoService { \r\n    static async agregarEquipo(nuevoEquipo) {\r\n      try {\r\n        return await Equipo.create(nuevoEquipo);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerEquipos(){\r\n      try {\r\n        return await Equipo.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerEquipo(nombre){\r\n      try {\r\n        const equipo = await Equipo.findOne({where:{nombre:nombre}});\r\n        return equipo;\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerEquipoID(id){\r\n        try {\r\n          console.log(\"Mostrar\",id);\r\n          const equipo = await Equipo.findByPk(id);\r\n          return equipo;\r\n        }\r\n         catch (error) {\r\n           throw error;\r\n          }\r\n        }\r\n\r\n    static async actualizarEquipo(id_equipo,equipo){\r\n      try {\r\n        const equipoExistente = await Equipo.findByPk(id_equipo);\r\n\r\n        if(equipoExistente){\r\n          await Equipo.update(equipo,{where:{id_equipo:id_equipo}});\r\n          return equipo; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarEquipo(id_equipo){\r\n      try {\r\n        const equipoExistente = await Equipo.findByPk(id_equipo);\r\n\r\n        if(equipoExistente){\r\n          const equipoEliminado = await Equipo.destroy({where:{id_equipo:id_equipo}});\r\n          return equipoEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n} \r\n\r\n  export default EquipoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595871841495
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Equipo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Equipo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Equipo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Equipo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Equipo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Equipo = _database.sequelize.define('Equipo', {\n  id_equipo: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT,\n    unique: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Equipo;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVxdWlwby5qcyJdLCJuYW1lcyI6WyJFcXVpcG8iLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJpZF9lcXVpcG8iLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50Iiwibm9tYnJlIiwiVEVYVCIsInVuaXF1ZSIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQURtQztBQUduQyxJQUFNQSxNQUFNLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFFBQWpCLEVBQTJCO0FBQ3RDQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEVDtBQUVQQyxJQUFBQSxVQUFVLEVBQUUsSUFGTDtBQUdQQyxJQUFBQSxhQUFhLEVBQUU7QUFIUixHQUQyQjtBQU10Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pMLElBQUFBLElBQUksRUFBRUMsc0JBQVVLLElBRFo7QUFFSkMsSUFBQUEsTUFBTSxFQUFFO0FBRko7QUFOOEIsQ0FBM0IsRUFVWjtBQUNDQyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FWWSxDQUFmOztlQWdCZWIsTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IC8vIGNsYXNlIFNlcXVlbGl6ZVxyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZScgLy9jb25leGlvbiBhIGxhIGJhc2VcclxuXHJcbmNvbnN0IEVxdWlwbyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0VxdWlwbycsIHtcclxuICAgIGlkX2VxdWlwbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXHJcbiAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5vbWJyZToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhULFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxyXG4gICAgfVxyXG59LCB7XHJcbiAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxufSk7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRXF1aXBvOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Equipo.js"
      ],
      "names": [
        "Equipo",
        "sequelize",
        "define",
        "id_equipo",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "nombre",
        "TEXT",
        "unique",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,MAAM,GAAGC,oBAAUC,MAAV,CAAiB,QAAjB,EAA2B;AACtCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAEC,sBAAUC,OADT;AAEPC,IAAAA,UAAU,EAAE,IAFL;AAGPC,IAAAA,aAAa,EAAE;AAHR,GAD2B;AAMtCC,EAAAA,MAAM,EAAE;AACJL,IAAAA,IAAI,EAAEC,sBAAUK,IADZ;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAN8B,CAA3B,EAUZ;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAVY,CAAf;;eAgBeb,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Equipo = sequelize.define('Equipo', {\r\n    id_equipo: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT,\r\n        unique: true\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\n\r\nexport default Equipo;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142504
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\listaInscripcion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\listaInscripcion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\listaInscripcion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\listaInscripcion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "listaInscripcion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _listaInscripcion = _interopRequireDefault(require(\"../controllers/listaInscripcion.controller\"));\n\nvar _ListaInscripcionService = _interopRequireDefault(require(\"../services/ListaInscripcionService\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _listaInscripcion[\"default\"].obtenerListasInscripcion);\nrouter.get('/:id', _listaInscripcion[\"default\"].obtenerListaInscripcion);\nrouter.get('/jugadoresListados/:id', _listaInscripcion[\"default\"].obtenerJugadores);\nrouter.post('/', _listaInscripcion[\"default\"].crearListaInscripcion);\nrouter.post('/agregarJugadores/:id', _listaInscripcion[\"default\"].agregarJugadoresEnLista); //recibe una lista de jugadores para insertar en lista :id\n\nrouter[\"delete\"]('/eliminarJugador/:id&:dni_jugador', _listaInscripcion[\"default\"].eliminarJugadorEnLista);\nrouter.put('/:id', _listaInscripcion[\"default\"].actualizarListaInscripcion);\nrouter[\"delete\"]('/:id', _listaInscripcion[\"default\"].eliminarListaInscripcion);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RhSW5zY3JpcGNpb24uanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIiLCJvYnRlbmVyTGlzdGFzSW5zY3JpcGNpb24iLCJvYnRlbmVyTGlzdGFJbnNjcmlwY2lvbiIsIm9idGVuZXJKdWdhZG9yZXMiLCJwb3N0IiwiY3JlYXJMaXN0YUluc2NyaXBjaW9uIiwiYWdyZWdhckp1Z2Fkb3Jlc0VuTGlzdGEiLCJlbGltaW5hckp1Z2Fkb3JFbkxpc3RhIiwicHV0IiwiYWN0dWFsaXphckxpc3RhSW5zY3JpcGNpb24iLCJlbGltaW5hckxpc3RhSW5zY3JpcGNpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7QUFDQTs7OztBQUhBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQU1BQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWVDLDZCQUEyQkMsd0JBQTFDO0FBQ0FILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JDLDZCQUEyQkUsdUJBQTdDO0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLHdCQUFYLEVBQW9DQyw2QkFBMkJHLGdCQUEvRDtBQUNBTCxNQUFNLENBQUNNLElBQVAsQ0FBWSxHQUFaLEVBQWlCSiw2QkFBMkJLLHFCQUE1QztBQUNBUCxNQUFNLENBQUNNLElBQVAsQ0FBWSx1QkFBWixFQUFvQ0osNkJBQTJCTSx1QkFBL0QsRSxDQUF5Rjs7QUFDekZSLE1BQU0sVUFBTixDQUFjLG1DQUFkLEVBQWtERSw2QkFBMkJPLHNCQUE3RTtBQUNBVCxNQUFNLENBQUNVLEdBQVAsQ0FBVyxNQUFYLEVBQWtCUiw2QkFBMkJTLDBCQUE3QztBQUNBWCxNQUFNLFVBQU4sQ0FBYyxNQUFkLEVBQXFCRSw2QkFBMkJVLHdCQUFoRDtlQUVlWixNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbmltcG9ydCBMaXN0YUluc2NyaXBjaW9uQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy9saXN0YUluc2NyaXBjaW9uLmNvbnRyb2xsZXInO1xyXG5pbXBvcnQgTGlzdGFJbnNjcmlwY2lvblNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvTGlzdGFJbnNjcmlwY2lvblNlcnZpY2UnO1xyXG5cclxuXHJcbnJvdXRlci5nZXQoJy8nLExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyLm9idGVuZXJMaXN0YXNJbnNjcmlwY2lvbik7XHJcbnJvdXRlci5nZXQoJy86aWQnLExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyLm9idGVuZXJMaXN0YUluc2NyaXBjaW9uKTtcclxucm91dGVyLmdldCgnL2p1Z2Fkb3Jlc0xpc3RhZG9zLzppZCcsTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIub2J0ZW5lckp1Z2Fkb3Jlcyk7XHJcbnJvdXRlci5wb3N0KCcvJywgTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIuY3JlYXJMaXN0YUluc2NyaXBjaW9uKTtcclxucm91dGVyLnBvc3QoJy9hZ3JlZ2FySnVnYWRvcmVzLzppZCcsTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIuYWdyZWdhckp1Z2Fkb3Jlc0VuTGlzdGEpOyAvL3JlY2liZSB1bmEgbGlzdGEgZGUganVnYWRvcmVzIHBhcmEgaW5zZXJ0YXIgZW4gbGlzdGEgOmlkXHJcbnJvdXRlci5kZWxldGUoJy9lbGltaW5hckp1Z2Fkb3IvOmlkJjpkbmlfanVnYWRvcicsTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIuZWxpbWluYXJKdWdhZG9yRW5MaXN0YSk7XHJcbnJvdXRlci5wdXQoJy86aWQnLExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyLmFjdHVhbGl6YXJMaXN0YUluc2NyaXBjaW9uKTtcclxucm91dGVyLmRlbGV0ZSgnLzppZCcsTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIuZWxpbWluYXJMaXN0YUluc2NyaXBjaW9uKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "listaInscripcion.js"
      ],
      "names": [
        "router",
        "get",
        "ListaInscripcionController",
        "obtenerListasInscripcion",
        "obtenerListaInscripcion",
        "obtenerJugadores",
        "post",
        "crearListaInscripcion",
        "agregarJugadoresEnLista",
        "eliminarJugadorEnLista",
        "put",
        "actualizarListaInscripcion",
        "eliminarListaInscripcion"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AACA;;;;AAHA,IAAMA,MAAM,GAAG,sBAAf;AAMAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,6BAA2BC,wBAA1C;AACAH,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,6BAA2BE,uBAA7C;AACAJ,MAAM,CAACC,GAAP,CAAW,wBAAX,EAAoCC,6BAA2BG,gBAA/D;AACAL,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiBJ,6BAA2BK,qBAA5C;AACAP,MAAM,CAACM,IAAP,CAAY,uBAAZ,EAAoCJ,6BAA2BM,uBAA/D,E,CAAyF;;AACzFR,MAAM,UAAN,CAAc,mCAAd,EAAkDE,6BAA2BO,sBAA7E;AACAT,MAAM,CAACU,GAAP,CAAW,MAAX,EAAkBR,6BAA2BS,0BAA7C;AACAX,MAAM,UAAN,CAAc,MAAd,EAAqBE,6BAA2BU,wBAAhD;eAEeZ,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport ListaInscripcionController from '../controllers/listaInscripcion.controller';\r\nimport ListaInscripcionService from '../services/ListaInscripcionService';\r\n\r\n\r\nrouter.get('/',ListaInscripcionController.obtenerListasInscripcion);\r\nrouter.get('/:id',ListaInscripcionController.obtenerListaInscripcion);\r\nrouter.get('/jugadoresListados/:id',ListaInscripcionController.obtenerJugadores);\r\nrouter.post('/', ListaInscripcionController.crearListaInscripcion);\r\nrouter.post('/agregarJugadores/:id',ListaInscripcionController.agregarJugadoresEnLista); //recibe una lista de jugadores para insertar en lista :id\r\nrouter.delete('/eliminarJugador/:id&:dni_jugador',ListaInscripcionController.eliminarJugadorEnLista);\r\nrouter.put('/:id',ListaInscripcionController.actualizarListaInscripcion);\r\nrouter.delete('/:id',ListaInscripcionController.eliminarListaInscripcion);\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595816966700
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\listaInscripcion.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\listaInscripcion.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\listaInscripcion.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\listaInscripcion.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "listaInscripcion.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ListaInscripcionService = _interopRequireDefault(require(\"../services/ListaInscripcionService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Jugador_integra_ListaService = _interopRequireDefault(require(\"../services/Jugador_integra_ListaService\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar ListaInscripcionController =\n/*#__PURE__*/\nfunction () {\n  function ListaInscripcionController() {\n    _classCallCheck(this, ListaInscripcionController);\n  }\n\n  _createClass(ListaInscripcionController, null, [{\n    key: \"crearListaInscripcion\",\n    value: function crearListaInscripcion(req, res) {\n      var nuevaListaInscripcion, ListaInscripcionCreada;\n      return regeneratorRuntime.async(function crearListaInscripcion$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaListaInscripcion = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].agregarListaInscripcion(nuevaListaInscripcion));\n\n            case 4:\n              ListaInscripcionCreada = _context.sent;\n              util.setSuccess(201, 'ListaInscripcion añadida', ListaInscripcionCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerListasInscripcion\",\n    value: function obtenerListasInscripcion(req, res) {\n      var listasInscripcion;\n      return regeneratorRuntime.async(function obtenerListasInscripcion$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListasInscripcion());\n\n            case 3:\n              listasInscripcion = _context2.sent;\n\n              if (listasInscripcion && listasInscripcion.length > 0) {\n                util.setSuccess(200, 'Listas de Inscripción obtenidas', listasInscripcion);\n              } else {\n                util.setError(404, 'No se encuentran Listas de Inscripción');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerListaInscripcion\",\n    value: function obtenerListaInscripcion(req, res) {\n      var id_lista, listaInscripcion;\n      return regeneratorRuntime.async(function obtenerListaInscripcion$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id_lista = req.params.id;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListaInscripcion(id_lista));\n\n            case 4:\n              listaInscripcion = _context3.sent;\n\n              if (listaInscripcion) {\n                //const equipo = await listaInscripcion.getEquipo();\n                //console.log(\"Información del equipo de la lista: \",equipo.dataValues);\n                util.setSuccess(200, 'ListaInscripcion obtenida', listaInscripcion);\n              } else {\n                util.setError(404, \"ListaInscripcion no encontrada\");\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarListaInscripcion\",\n    value: function actualizarListaInscripcion(req, res) {\n      var id_listaInscripcion, listaInscripcion, listaInscripcionActualizada;\n      return regeneratorRuntime.async(function actualizarListaInscripcion$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_listaInscripcion = req.params.id;\n              listaInscripcion = req.body;\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].actualizarListaInscripcion(id_listaInscripcion, listaInscripcion));\n\n            case 5:\n              listaInscripcionActualizada = _context4.sent;\n\n              if (listaInscripcionActualizada) {\n                util.setSuccess(200, 'Lista inscripción actualizada', listaInscripcionActualizada);\n              } else {\n                util.setError(404, \"ListaInscripcion no encontrada \");\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarListaInscripcion\",\n    value: function eliminarListaInscripcion(req, res) {\n      var id_lista, listaEliminada;\n      return regeneratorRuntime.async(function eliminarListaInscripcion$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_lista = req.params.id;\n              _context5.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].eliminarListaInscripcion(id_lista));\n\n            case 4:\n              listaEliminada = _context5.sent;\n\n              if (listaEliminada) {\n                util.setSuccess(200, 'ListaInscripcion eliminada');\n              } else {\n                util.setError(404, \"ListaInscripcion no se pudo eliminar\");\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerCapitan\",\n    value: function obtenerCapitan(lista) {\n      var capitan;\n      return regeneratorRuntime.async(function obtenerCapitan$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(lista.getCapitan());\n\n            case 3:\n              capitan = _context6.sent;\n              return _context6.abrupt(\"return\", capitan.dataValues);\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerDelegado\",\n    value: function obtenerDelegado(lista) {\n      var delegado;\n      return regeneratorRuntime.async(function obtenerDelegado$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(lista.getDelegado());\n\n            case 3:\n              delegado = _context7.sent;\n              return _context7.abrupt(\"return\", delegado.dataValues);\n\n            case 7:\n              _context7.prev = 7;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerSubDelegado\",\n    value: function obtenerSubDelegado(lista) {\n      var subdelegado;\n      return regeneratorRuntime.async(function obtenerSubDelegado$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return regeneratorRuntime.awrap(lista.getSubDelegado());\n\n            case 3:\n              subdelegado = _context8.sent;\n              return _context8.abrupt(\"return\", subdelegado.dataValues);\n\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(anio_torneo, tipo_torneo) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerTorneo(anio_torneo, tipo_torneo));\n\n            case 3:\n              torneo = _context9.sent;\n              return _context9.abrupt(\"return\", torneo);\n\n            case 7:\n              _context9.prev = 7;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores(req, res) {\n      var id_lista, jugadores;\n      return regeneratorRuntime.async(function obtenerJugadores$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              id_lista = req.params.id;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerJugadores(id_lista));\n\n            case 4:\n              jugadores = _context10.sent;\n\n              if (jugadores) {\n                util.setSuccess(200, \"Jugadores de la lista: '\".concat(id_lista, \"'  obtenidos\"), jugadores);\n              } else {\n                util.setError(404, \"Jugadores no encontrados\");\n              }\n\n              return _context10.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](1);\n              throw _context10.t0;\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    }\n  }, {\n    key: \"agregarJugadoresEnLista\",\n    value: function agregarJugadoresEnLista(req, res) {\n      var id_lista, lista, jugadores, operacion;\n      return regeneratorRuntime.async(function agregarJugadoresEnLista$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              id_lista = req.params.id;\n              _context11.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListaInscripcion(id_lista));\n\n            case 4:\n              lista = _context11.sent;\n              jugadores = req.body;\n\n              if (!lista) {\n                _context11.next = 13;\n                break;\n              }\n\n              _context11.next = 9;\n              return regeneratorRuntime.awrap(_Jugador_integra_ListaService[\"default\"].agregarJugadoresEnLista(id_lista, jugadores));\n\n            case 9:\n              operacion = _context11.sent;\n\n              if (operacion) {\n                util.setSuccess(201, \"Jugadores a\\xF1adidos a la lista: \".concat(id_lista, \" \"), operacion);\n              } else {\n                util.setError(400, 'No se pudo completar la operación');\n              }\n\n              _context11.next = 14;\n              break;\n\n            case 13:\n              util.setError(404, 'No se encuentra lista de Inscripción');\n\n            case 14:\n              return _context11.abrupt(\"return\", util.send(res));\n\n            case 17:\n              _context11.prev = 17;\n              _context11.t0 = _context11[\"catch\"](0);\n              util.setError(400, _context11.t0.message);\n              return _context11.abrupt(\"return\", util.send(res));\n\n            case 21:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[0, 17]]);\n    }\n  }, {\n    key: \"eliminarJugadorEnLista\",\n    value: function eliminarJugadorEnLista(req, res) {\n      var id_lista, lista, dni_jugador, operacion;\n      return regeneratorRuntime.async(function eliminarJugadorEnLista$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              id_lista = req.params.id;\n              _context12.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListaInscripcion(id_lista));\n\n            case 4:\n              lista = _context12.sent;\n              dni_jugador = req.params.dni_jugador;\n\n              if (!lista) {\n                _context12.next = 13;\n                break;\n              }\n\n              _context12.next = 9;\n              return regeneratorRuntime.awrap(_Jugador_integra_ListaService[\"default\"].eliminarJugadorEnLista(id_lista, dni_jugador));\n\n            case 9:\n              operacion = _context12.sent;\n\n              if (operacion) {\n                util.setSuccess(201, \"Jugador eliminado de la lista: \".concat(id_lista, \" \"), operacion);\n              } else {\n                util.setError(400, 'No se pudo completar la operación (jugador no se encontraba en la lista)');\n              }\n\n              _context12.next = 14;\n              break;\n\n            case 13:\n              util.setError(404, 'No se encuentra lista de Inscripción');\n\n            case 14:\n              return _context12.abrupt(\"return\", util.send(res));\n\n            case 17:\n              _context12.prev = 17;\n              _context12.t0 = _context12[\"catch\"](0);\n              util.setError(400, _context12.t0.message);\n              return _context12.abrupt(\"return\", util.send(res));\n\n            case 21:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, [[0, 17]]);\n    }\n  }]);\n\n  return ListaInscripcionController;\n}();\n\nvar _default = ListaInscripcionController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RhSW5zY3JpcGNpb24uY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJ1dGlsIiwiVXRpbCIsIkxpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyIiwicmVxIiwicmVzIiwibnVldmFMaXN0YUluc2NyaXBjaW9uIiwiYm9keSIsIkxpc3RhSW5zY3JpcGNpb25TZXJ2aWNlIiwiYWdyZWdhckxpc3RhSW5zY3JpcGNpb24iLCJMaXN0YUluc2NyaXBjaW9uQ3JlYWRhIiwic2V0U3VjY2VzcyIsInNlbmQiLCJzZXRFcnJvciIsIm1lc3NhZ2UiLCJvYnRlbmVyTGlzdGFzSW5zY3JpcGNpb24iLCJsaXN0YXNJbnNjcmlwY2lvbiIsImxlbmd0aCIsImlkX2xpc3RhIiwicGFyYW1zIiwiaWQiLCJvYnRlbmVyTGlzdGFJbnNjcmlwY2lvbiIsImxpc3RhSW5zY3JpcGNpb24iLCJpZF9saXN0YUluc2NyaXBjaW9uIiwiYWN0dWFsaXphckxpc3RhSW5zY3JpcGNpb24iLCJsaXN0YUluc2NyaXBjaW9uQWN0dWFsaXphZGEiLCJlbGltaW5hckxpc3RhSW5zY3JpcGNpb24iLCJsaXN0YUVsaW1pbmFkYSIsImxpc3RhIiwiZ2V0Q2FwaXRhbiIsImNhcGl0YW4iLCJkYXRhVmFsdWVzIiwiZ2V0RGVsZWdhZG8iLCJkZWxlZ2FkbyIsImdldFN1YkRlbGVnYWRvIiwic3ViZGVsZWdhZG8iLCJhbmlvX3Rvcm5lbyIsInRpcG9fdG9ybmVvIiwib2J0ZW5lclRvcm5lbyIsInRvcm5lbyIsIm9idGVuZXJKdWdhZG9yZXMiLCJqdWdhZG9yZXMiLCJKdWdhZG9yX2ludGVncmFfTGlzdGFTZXJ2aWNlIiwiYWdyZWdhckp1Z2Fkb3Jlc0VuTGlzdGEiLCJvcGVyYWNpb24iLCJkbmlfanVnYWRvciIsImVsaW1pbmFySnVnYWRvckVuTGlzdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7OztBQUVBLElBQU1BLElBQUksR0FBRyxJQUFJQyxpQkFBSixFQUFiOztJQUVNQywwQjs7Ozs7Ozs7OzBDQUNpQ0MsRyxFQUFLQyxHOzs7Ozs7O0FBRTFCQyxjQUFBQSxxQixHQUF3QkYsR0FBRyxDQUFDRyxJOzs4Q0FDR0Msb0NBQXdCQyx1QkFBeEIsQ0FBZ0RILHFCQUFoRCxDOzs7QUFBL0JJLGNBQUFBLHNCO0FBRU5ULGNBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQixFQUFvQiwwQkFBcEIsRUFBK0NELHNCQUEvQzsrQ0FDT1QsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixZQUFNQyxPQUF4QjsrQ0FDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7NkNBSXVCRCxHLEVBQUtDLEc7Ozs7Ozs7OzhDQUVIRyxvQ0FBd0JPLHdCQUF4QixFOzs7QUFBMUJDLGNBQUFBLGlCOztBQUVOLGtCQUFHQSxpQkFBaUIsSUFBSUEsaUJBQWlCLENBQUNDLE1BQWxCLEdBQTJCLENBQW5ELEVBQXFEO0FBQ2pEaEIsZ0JBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQixFQUFvQixpQ0FBcEIsRUFBc0RLLGlCQUF0RDtBQUNILGVBRkQsTUFHSTtBQUNBZixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQix3Q0FBbEI7QUFDSDs7Z0RBQ01aLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7O0FBR1BKLGNBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsRUFBa0IsYUFBTUMsT0FBeEI7Z0RBQ09iLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7Ozs7Ozs7OzRDQUlzQkQsRyxFQUFLQyxHOzs7Ozs7O0FBRTVCYSxjQUFBQSxRLEdBQVdkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFOzs4Q0FDR1osb0NBQXdCYSx1QkFBeEIsQ0FBZ0RILFFBQWhELEM7OztBQUF6QkksY0FBQUEsZ0I7O0FBRU4sa0JBQUdBLGdCQUFILEVBQXFCO0FBQ2pCO0FBQ0E7QUFDQXJCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsMkJBQXBCLEVBQWdEVyxnQkFBaEQ7QUFDSCxlQUpELE1BS0k7QUFDQXJCLGdCQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkO0FBQ0g7O2dEQUNNWixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7OztBQUdQSixjQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLGFBQU1DLE9BQXhCO2dEQUNPYixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7Ozs7Ozs7OzsrQ0FJeUJELEcsRUFBS0MsRzs7Ozs7OztBQUcvQmtCLGNBQUFBLG1CLEdBQXNCbkIsR0FBRyxDQUFDZSxNQUFKLENBQVdDLEU7QUFDakNFLGNBQUFBLGdCLEdBQW1CbEIsR0FBRyxDQUFDRyxJOzs4Q0FDYUMsb0NBQXdCZ0IsMEJBQXhCLENBQW1ERCxtQkFBbkQsRUFBdUVELGdCQUF2RSxDOzs7QUFBcENHLGNBQUFBLDJCOztBQUVOLGtCQUFHQSwyQkFBSCxFQUErQjtBQUMzQnhCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsK0JBQXBCLEVBQW9EYywyQkFBcEQ7QUFDSCxlQUZELE1BR0k7QUFDQXhCLGdCQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkO0FBQ0g7O2dEQUVNWixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7OztBQUdQSixjQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLGFBQU1DLE9BQXhCO2dEQUNPYixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7Ozs7Ozs7Ozs2Q0FJdUJELEcsRUFBS0MsRzs7Ozs7OztBQUU3QmEsY0FBQUEsUSxHQUFXZCxHQUFHLENBQUNlLE1BQUosQ0FBV0MsRTs7OENBQ0FaLG9DQUF3QmtCLHdCQUF4QixDQUFpRFIsUUFBakQsQzs7O0FBQXRCUyxjQUFBQSxjOztBQUVOLGtCQUFHQSxjQUFILEVBQW1CO0FBQ2YxQixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLDRCQUFwQjtBQUNILGVBRkQsTUFHSTtBQUNBVixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZDtBQUNIOztnREFDTVosSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7bUNBSWF1QixLOzs7Ozs7Ozs4Q0FFR0EsS0FBSyxDQUFDQyxVQUFOLEU7OztBQUFqQkMsY0FBQUEsTztnREFDQ0EsT0FBTyxDQUFDQyxVOzs7Ozs7Ozs7Ozs7Ozs7O29DQU1NSCxLOzs7Ozs7Ozs4Q0FFRUEsS0FBSyxDQUFDSSxXQUFOLEU7OztBQUFqQkMsY0FBQUEsUTtnREFDQ0EsUUFBUSxDQUFDRixVOzs7Ozs7Ozs7Ozs7Ozs7O3VDQU1RSCxLOzs7Ozs7Ozs4Q0FFR0EsS0FBSyxDQUFDTSxjQUFOLEU7OztBQUFyQkMsY0FBQUEsVztnREFDQ0EsV0FBVyxDQUFDSixVOzs7Ozs7Ozs7Ozs7Ozs7O2tDQU9BSyxXLEVBQWFDLFc7Ozs7Ozs7OzhDQUVWN0Isb0NBQXdCOEIsYUFBeEIsQ0FBc0NGLFdBQXRDLEVBQWtEQyxXQUFsRCxDOzs7QUFBaEJFLGNBQUFBLE07Z0RBQ0NBLE07Ozs7Ozs7Ozs7Ozs7Ozs7cUNBT2VuQyxHLEVBQUlDLEc7Ozs7OztBQUN4QmEsY0FBQUEsUSxHQUFXZCxHQUFHLENBQUNlLE1BQUosQ0FBV0MsRTs7OzhDQUdBWixvQ0FBd0JnQyxnQkFBeEIsQ0FBeUN0QixRQUF6QyxDOzs7QUFBbEJ1QixjQUFBQSxTOztBQUNOLGtCQUFHQSxTQUFILEVBQWE7QUFDVHhDLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsb0NBQStDTyxRQUEvQyxtQkFBc0V1QixTQUF0RTtBQUNILGVBRkQsTUFHSTtBQUNBeEMsZ0JBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQ7QUFDSDs7aURBQ01aLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7Ozs7Ozs7Ozs7Ozs7NENBT3NCRCxHLEVBQUlDLEc7Ozs7Ozs7QUFFM0JhLGNBQUFBLFEsR0FBV2QsR0FBRyxDQUFDZSxNQUFKLENBQVdDLEU7OzhDQUNSWixvQ0FBd0JhLHVCQUF4QixDQUFnREgsUUFBaEQsQzs7O0FBQWRVLGNBQUFBLEs7QUFDQWEsY0FBQUEsUyxHQUFZckMsR0FBRyxDQUFDRyxJOzttQkFFbEJxQixLOzs7Ozs7OENBQ3dCYyx5Q0FBNkJDLHVCQUE3QixDQUFxRHpCLFFBQXJELEVBQThEdUIsU0FBOUQsQzs7O0FBQWxCRyxjQUFBQSxTOztBQUNOLGtCQUFJQSxTQUFKLEVBQWM7QUFDVjNDLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsOENBQXNETyxRQUF0RCxRQUFrRTBCLFNBQWxFO0FBQ0gsZUFGRCxNQUlJO0FBQ0EzQyxnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixtQ0FBbEI7QUFDSDs7Ozs7O0FBR0RaLGNBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsRUFBa0Isc0NBQWxCOzs7aURBRUdaLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7O0FBR1BKLGNBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsRUFBa0IsY0FBTUMsT0FBeEI7aURBQ09iLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7Ozs7Ozs7OzJDQUlxQkQsRyxFQUFLQyxHOzs7Ozs7O0FBRTNCYSxjQUFBQSxRLEdBQVdkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFOzs4Q0FDUlosb0NBQXdCYSx1QkFBeEIsQ0FBZ0RILFFBQWhELEM7OztBQUFkVSxjQUFBQSxLO0FBQ0FpQixjQUFBQSxXLEdBQWN6QyxHQUFHLENBQUNlLE1BQUosQ0FBVzBCLFc7O21CQUUzQmpCLEs7Ozs7Ozs4Q0FDd0JjLHlDQUE2Qkksc0JBQTdCLENBQW9ENUIsUUFBcEQsRUFBNkQyQixXQUE3RCxDOzs7QUFBbEJELGNBQUFBLFM7O0FBQ04sa0JBQUlBLFNBQUosRUFBYztBQUNWM0MsZ0JBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQiwyQ0FBc0RPLFFBQXRELFFBQW1FMEIsU0FBbkU7QUFDSCxlQUZELE1BR0k7QUFDQTNDLGdCQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLDBFQUFsQjtBQUNIOzs7Ozs7QUFHRFosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixzQ0FBbEI7OztpREFFR1osSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixjQUFNQyxPQUF4QjtpREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7Ozs7ZUFLSkYsMEIiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGlzdGFJbnNjcmlwY2lvblNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvTGlzdGFJbnNjcmlwY2lvblNlcnZpY2UnO1xyXG5pbXBvcnQgVXRpbCBmcm9tICcuLi91dGlscy9VdGlscyc7XHJcbmltcG9ydCBKdWdhZG9yX2ludGVncmFfTGlzdGFTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL0p1Z2Fkb3JfaW50ZWdyYV9MaXN0YVNlcnZpY2UnO1xyXG5cclxuY29uc3QgdXRpbCA9IG5ldyBVdGlsKCk7XHJcblxyXG5jbGFzcyBMaXN0YUluc2NyaXBjaW9uQ29udHJvbGxlciB7XHJcbiAgICBzdGF0aWMgYXN5bmMgY3JlYXJMaXN0YUluc2NyaXBjaW9uKHJlcSwgcmVzKSB7ICAgIFxyXG4gICAgICAgIHRyeSB7ICAgIFxyXG4gICAgICAgICAgICBjb25zdCBudWV2YUxpc3RhSW5zY3JpcGNpb24gPSByZXEuYm9keTtcclxuICAgICAgICAgICAgY29uc3QgTGlzdGFJbnNjcmlwY2lvbkNyZWFkYSA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLmFncmVnYXJMaXN0YUluc2NyaXBjaW9uKG51ZXZhTGlzdGFJbnNjcmlwY2lvbik7XHJcblxyXG4gICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAxLCdMaXN0YUluc2NyaXBjaW9uIGHDsWFkaWRhJyxMaXN0YUluc2NyaXBjaW9uQ3JlYWRhKTtcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3Ipe1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwMCxlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckxpc3Rhc0luc2NyaXBjaW9uKHJlcSwgcmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBsaXN0YXNJbnNjcmlwY2lvbiA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLm9idGVuZXJMaXN0YXNJbnNjcmlwY2lvbigpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYobGlzdGFzSW5zY3JpcGNpb24gJiYgbGlzdGFzSW5zY3JpcGNpb24ubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdMaXN0YXMgZGUgSW5zY3JpcGNpw7NuIG9idGVuaWRhcycsbGlzdGFzSW5zY3JpcGNpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCwnTm8gc2UgZW5jdWVudHJhbiBMaXN0YXMgZGUgSW5zY3JpcGNpw7NuJyk7IFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwMCxlcnJvci5tZXNzYWdlKTsgICBcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckxpc3RhSW5zY3JpcGNpb24ocmVxLCByZXMpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkX2xpc3RhID0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgICAgICAgY29uc3QgbGlzdGFJbnNjcmlwY2lvbiA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLm9idGVuZXJMaXN0YUluc2NyaXBjaW9uKGlkX2xpc3RhKTtcclxuXHJcbiAgICAgICAgICAgIGlmKGxpc3RhSW5zY3JpcGNpb24pIHtcclxuICAgICAgICAgICAgICAgIC8vY29uc3QgZXF1aXBvID0gYXdhaXQgbGlzdGFJbnNjcmlwY2lvbi5nZXRFcXVpcG8oKTtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJJbmZvcm1hY2nDs24gZGVsIGVxdWlwbyBkZSBsYSBsaXN0YTogXCIsZXF1aXBvLmRhdGFWYWx1ZXMpO1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnTGlzdGFJbnNjcmlwY2lvbiBvYnRlbmlkYScsbGlzdGFJbnNjcmlwY2lvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBMaXN0YUluc2NyaXBjaW9uIG5vIGVuY29udHJhZGFgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsZXJyb3IubWVzc2FnZSk7ICAgXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTsgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGFjdHVhbGl6YXJMaXN0YUluc2NyaXBjaW9uKHJlcSwgcmVzKXtcclxuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgaWRfbGlzdGFJbnNjcmlwY2lvbiA9IHJlcS5wYXJhbXMuaWQ7XHJcbiAgICAgICAgICAgIGNvbnN0IGxpc3RhSW5zY3JpcGNpb24gPSByZXEuYm9keTtcclxuICAgICAgICAgICAgY29uc3QgbGlzdGFJbnNjcmlwY2lvbkFjdHVhbGl6YWRhID0gYXdhaXQgTGlzdGFJbnNjcmlwY2lvblNlcnZpY2UuYWN0dWFsaXphckxpc3RhSW5zY3JpcGNpb24oaWRfbGlzdGFJbnNjcmlwY2lvbixsaXN0YUluc2NyaXBjaW9uKTtcclxuXHJcbiAgICAgICAgICAgIGlmKGxpc3RhSW5zY3JpcGNpb25BY3R1YWxpemFkYSl7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdMaXN0YSBpbnNjcmlwY2nDs24gYWN0dWFsaXphZGEnLGxpc3RhSW5zY3JpcGNpb25BY3R1YWxpemFkYSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBMaXN0YUluc2NyaXBjaW9uIG5vIGVuY29udHJhZGEgYCk7XHJcbiAgICAgICAgICAgIH0gXHJcblxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsZXJyb3IubWVzc2FnZSk7ICAgXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTsgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hckxpc3RhSW5zY3JpcGNpb24ocmVxLCByZXMpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkX2xpc3RhID0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgICAgICAgY29uc3QgbGlzdGFFbGltaW5hZGE9IGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLmVsaW1pbmFyTGlzdGFJbnNjcmlwY2lvbihpZF9saXN0YSk7XHJcblxyXG4gICAgICAgICAgICBpZihsaXN0YUVsaW1pbmFkYSkge1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnTGlzdGFJbnNjcmlwY2lvbiBlbGltaW5hZGEnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsYExpc3RhSW5zY3JpcGNpb24gbm8gc2UgcHVkbyBlbGltaW5hcmApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxlcnJvci5tZXNzYWdlKTsgICBcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckNhcGl0YW4obGlzdGEpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNhcGl0YW4gPSAgYXdhaXQgbGlzdGEuZ2V0Q2FwaXRhbigpO1xyXG4gICAgICAgICAgICByZXR1cm4gY2FwaXRhbi5kYXRhVmFsdWVzO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyRGVsZWdhZG8obGlzdGEpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRlbGVnYWRvID0gYXdhaXQgbGlzdGEuZ2V0RGVsZWdhZG8oKTtcclxuICAgICAgICAgICAgcmV0dXJuIGRlbGVnYWRvLmRhdGFWYWx1ZXM7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJTdWJEZWxlZ2FkbyhsaXN0YSl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3Qgc3ViZGVsZWdhZG8gPSAgYXdhaXQgbGlzdGEuZ2V0U3ViRGVsZWdhZG8oKTtcclxuICAgICAgICAgICAgcmV0dXJuIHN1YmRlbGVnYWRvLmRhdGFWYWx1ZXM7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyVG9ybmVvKGFuaW9fdG9ybmVvLCB0aXBvX3Rvcm5lbyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgdG9ybmVvID0gIGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLm9idGVuZXJUb3JuZW8oYW5pb190b3JuZW8sdGlwb190b3JuZW8pO1xyXG4gICAgICAgICAgICByZXR1cm4gdG9ybmVvO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckp1Z2Fkb3JlcyhyZXEscmVzKXtcclxuICAgICAgICBjb25zdCBpZF9saXN0YSA9IHJlcS5wYXJhbXMuaWQ7XHJcblxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGp1Z2Fkb3JlcyA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLm9idGVuZXJKdWdhZG9yZXMoaWRfbGlzdGEpO1xyXG4gICAgICAgICAgICBpZihqdWdhZG9yZXMpe1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCxgSnVnYWRvcmVzIGRlIGxhIGxpc3RhOiAnJHtpZF9saXN0YX0nICBvYnRlbmlkb3NgLGp1Z2Fkb3Jlcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBKdWdhZG9yZXMgbm8gZW5jb250cmFkb3NgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcblxyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYWdyZWdhckp1Z2Fkb3Jlc0VuTGlzdGEocmVxLHJlcyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgaWRfbGlzdGEgPSByZXEucGFyYW1zLmlkO1xyXG4gICAgICAgICAgICBjb25zdCBsaXN0YSA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLm9idGVuZXJMaXN0YUluc2NyaXBjaW9uKGlkX2xpc3RhKTtcclxuICAgICAgICAgICAgY29uc3QganVnYWRvcmVzID0gcmVxLmJvZHk7XHJcblxyXG4gICAgICAgICAgICBpZiAobGlzdGEpe1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgb3BlcmFjaW9uID0gYXdhaXQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhU2VydmljZS5hZ3JlZ2FySnVnYWRvcmVzRW5MaXN0YShpZF9saXN0YSxqdWdhZG9yZXMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG9wZXJhY2lvbil7XHJcbiAgICAgICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMSxgSnVnYWRvcmVzIGHDsWFkaWRvcyBhIGxhIGxpc3RhOiAke2lkX2xpc3RhfSBgLG9wZXJhY2lvbik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwMCwnTm8gc2UgcHVkbyBjb21wbGV0YXIgbGEgb3BlcmFjacOzbicpOyBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsJ05vIHNlIGVuY3VlbnRyYSBsaXN0YSBkZSBJbnNjcmlwY2nDs24nKTsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG5cclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwMCxlcnJvci5tZXNzYWdlKTsgICBcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZWxpbWluYXJKdWdhZG9yRW5MaXN0YShyZXEsIHJlcyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgaWRfbGlzdGEgPSByZXEucGFyYW1zLmlkO1xyXG4gICAgICAgICAgICBjb25zdCBsaXN0YSA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLm9idGVuZXJMaXN0YUluc2NyaXBjaW9uKGlkX2xpc3RhKTtcclxuICAgICAgICAgICAgY29uc3QgZG5pX2p1Z2Fkb3IgPSByZXEucGFyYW1zLmRuaV9qdWdhZG9yO1xyXG5cclxuICAgICAgICAgICAgaWYgKGxpc3RhKXtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG9wZXJhY2lvbiA9IGF3YWl0IEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YVNlcnZpY2UuZWxpbWluYXJKdWdhZG9yRW5MaXN0YShpZF9saXN0YSxkbmlfanVnYWRvcik7XHJcbiAgICAgICAgICAgICAgICBpZiAob3BlcmFjaW9uKXtcclxuICAgICAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAxLGBKdWdhZG9yIGVsaW1pbmFkbyBkZSBsYSBsaXN0YTogJHtpZF9saXN0YX0gYCwgb3BlcmFjaW9uKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDAsJ05vIHNlIHB1ZG8gY29tcGxldGFyIGxhIG9wZXJhY2nDs24gKGp1Z2Fkb3Igbm8gc2UgZW5jb250cmFiYSBlbiBsYSBsaXN0YSknKTsgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LCdObyBzZSBlbmN1ZW50cmEgbGlzdGEgZGUgSW5zY3JpcGNpw7NuJyk7IFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuXHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDAsZXJyb3IubWVzc2FnZSk7ICAgXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTsgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "listaInscripcion.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "ListaInscripcionController",
        "req",
        "res",
        "nuevaListaInscripcion",
        "body",
        "ListaInscripcionService",
        "agregarListaInscripcion",
        "ListaInscripcionCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerListasInscripcion",
        "listasInscripcion",
        "length",
        "id_lista",
        "params",
        "id",
        "obtenerListaInscripcion",
        "listaInscripcion",
        "id_listaInscripcion",
        "actualizarListaInscripcion",
        "listaInscripcionActualizada",
        "eliminarListaInscripcion",
        "listaEliminada",
        "lista",
        "getCapitan",
        "capitan",
        "dataValues",
        "getDelegado",
        "delegado",
        "getSubDelegado",
        "subdelegado",
        "anio_torneo",
        "tipo_torneo",
        "obtenerTorneo",
        "torneo",
        "obtenerJugadores",
        "jugadores",
        "Jugador_integra_ListaService",
        "agregarJugadoresEnLista",
        "operacion",
        "dni_jugador",
        "eliminarJugadorEnLista"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,0B;;;;;;;;;0CACiCC,G,EAAKC,G;;;;;;;AAE1BC,cAAAA,qB,GAAwBF,GAAG,CAACG,I;;8CACGC,oCAAwBC,uBAAxB,CAAgDH,qBAAhD,C;;;AAA/BI,cAAAA,sB;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,0BAApB,EAA+CD,sBAA/C;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;6CAIuBD,G,EAAKC,G;;;;;;;;8CAEHG,oCAAwBO,wBAAxB,E;;;AAA1BC,cAAAA,iB;;AAEN,kBAAGA,iBAAiB,IAAIA,iBAAiB,CAACC,MAAlB,GAA2B,CAAnD,EAAqD;AACjDhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iCAApB,EAAsDK,iBAAtD;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,wCAAlB;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;4CAIsBD,G,EAAKC,G;;;;;;;AAE5Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACGZ,oCAAwBa,uBAAxB,CAAgDH,QAAhD,C;;;AAAzBI,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAqB;AACjB;AACA;AACArB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,2BAApB,EAAgDW,gBAAhD;AACH,eAJD,MAKI;AACArB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;+CAIyBD,G,EAAKC,G;;;;;;;AAG/BkB,cAAAA,mB,GAAsBnB,GAAG,CAACe,MAAJ,CAAWC,E;AACjCE,cAAAA,gB,GAAmBlB,GAAG,CAACG,I;;8CACaC,oCAAwBgB,0BAAxB,CAAmDD,mBAAnD,EAAuED,gBAAvE,C;;;AAApCG,cAAAA,2B;;AAEN,kBAAGA,2BAAH,EAA+B;AAC3BxB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,+BAApB,EAAoDc,2BAApD;AACH,eAFD,MAGI;AACAxB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDAEMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;6CAIuBD,G,EAAKC,G;;;;;;;AAE7Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACAZ,oCAAwBkB,wBAAxB,CAAiDR,QAAjD,C;;;AAAtBS,cAAAA,c;;AAEN,kBAAGA,cAAH,EAAmB;AACf1B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,4BAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIauB,K;;;;;;;;8CAEGA,KAAK,CAACC,UAAN,E;;;AAAjBC,cAAAA,O;gDACCA,OAAO,CAACC,U;;;;;;;;;;;;;;;;oCAMMH,K;;;;;;;;8CAEEA,KAAK,CAACI,WAAN,E;;;AAAjBC,cAAAA,Q;gDACCA,QAAQ,CAACF,U;;;;;;;;;;;;;;;;uCAMQH,K;;;;;;;;8CAEGA,KAAK,CAACM,cAAN,E;;;AAArBC,cAAAA,W;gDACCA,WAAW,CAACJ,U;;;;;;;;;;;;;;;;kCAOAK,W,EAAaC,W;;;;;;;;8CAEV7B,oCAAwB8B,aAAxB,CAAsCF,WAAtC,EAAkDC,WAAlD,C;;;AAAhBE,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;qCAOenC,G,EAAIC,G;;;;;;AACxBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;;8CAGAZ,oCAAwBgC,gBAAxB,CAAyCtB,QAAzC,C;;;AAAlBuB,cAAAA,S;;AACN,kBAAGA,SAAH,EAAa;AACTxC,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,oCAA+CO,QAA/C,mBAAsEuB,SAAtE;AACH,eAFD,MAGI;AACAxC,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;iDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;;;4CAOsBD,G,EAAIC,G;;;;;;;AAE3Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACRZ,oCAAwBa,uBAAxB,CAAgDH,QAAhD,C;;;AAAdU,cAAAA,K;AACAa,cAAAA,S,GAAYrC,GAAG,CAACG,I;;mBAElBqB,K;;;;;;8CACwBc,yCAA6BC,uBAA7B,CAAqDzB,QAArD,EAA8DuB,SAA9D,C;;;AAAlBG,cAAAA,S;;AACN,kBAAIA,SAAJ,EAAc;AACV3C,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,8CAAsDO,QAAtD,QAAkE0B,SAAlE;AACH,eAFD,MAII;AACA3C,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,mCAAlB;AACH;;;;;;AAGDZ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,sCAAlB;;;iDAEGZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;2CAIqBD,G,EAAKC,G;;;;;;;AAE3Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACRZ,oCAAwBa,uBAAxB,CAAgDH,QAAhD,C;;;AAAdU,cAAAA,K;AACAiB,cAAAA,W,GAAczC,GAAG,CAACe,MAAJ,CAAW0B,W;;mBAE3BjB,K;;;;;;8CACwBc,yCAA6BI,sBAA7B,CAAoD5B,QAApD,EAA6D2B,WAA7D,C;;;AAAlBD,cAAAA,S;;AACN,kBAAIA,SAAJ,EAAc;AACV3C,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,2CAAsDO,QAAtD,QAAmE0B,SAAnE;AACH,eAFD,MAGI;AACA3C,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,0EAAlB;AACH;;;;;;AAGDZ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,sCAAlB;;;iDAEGZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,0B",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import ListaInscripcionService from '../services/ListaInscripcionService';\r\nimport Util from '../utils/Utils';\r\nimport Jugador_integra_ListaService from '../services/Jugador_integra_ListaService';\r\n\r\nconst util = new Util();\r\n\r\nclass ListaInscripcionController {\r\n    static async crearListaInscripcion(req, res) {    \r\n        try {    \r\n            const nuevaListaInscripcion = req.body;\r\n            const ListaInscripcionCreada = await ListaInscripcionService.agregarListaInscripcion(nuevaListaInscripcion);\r\n\r\n            util.setSuccess(201,'ListaInscripcion añadida',ListaInscripcionCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerListasInscripcion(req, res){\r\n        try {\r\n            const listasInscripcion = await ListaInscripcionService.obtenerListasInscripcion();\r\n            \r\n            if(listasInscripcion && listasInscripcion.length > 0){\r\n                util.setSuccess(200,'Listas de Inscripción obtenidas',listasInscripcion);\r\n            }\r\n            else{\r\n                util.setError(404,'No se encuentran Listas de Inscripción'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerListaInscripcion(req, res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const listaInscripcion = await ListaInscripcionService.obtenerListaInscripcion(id_lista);\r\n\r\n            if(listaInscripcion) {\r\n                //const equipo = await listaInscripcion.getEquipo();\r\n                //console.log(\"Información del equipo de la lista: \",equipo.dataValues);\r\n                util.setSuccess(200,'ListaInscripcion obtenida',listaInscripcion);\r\n            }\r\n            else{\r\n                util.setError(404,`ListaInscripcion no encontrada`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async actualizarListaInscripcion(req, res){\r\n\r\n        try {\r\n            const id_listaInscripcion = req.params.id;\r\n            const listaInscripcion = req.body;\r\n            const listaInscripcionActualizada = await ListaInscripcionService.actualizarListaInscripcion(id_listaInscripcion,listaInscripcion);\r\n\r\n            if(listaInscripcionActualizada){\r\n                util.setSuccess(200,'Lista inscripción actualizada',listaInscripcionActualizada);\r\n            }\r\n            else{\r\n                util.setError(404,`ListaInscripcion no encontrada `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n    \r\n    static async eliminarListaInscripcion(req, res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const listaEliminada= await ListaInscripcionService.eliminarListaInscripcion(id_lista);\r\n\r\n            if(listaEliminada) {\r\n                util.setSuccess(200,'ListaInscripcion eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`ListaInscripcion no se pudo eliminar`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerCapitan(lista){\r\n        try {\r\n            const capitan =  await lista.getCapitan();\r\n            return capitan.dataValues;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    static async obtenerDelegado(lista){\r\n        try {\r\n            const delegado = await lista.getDelegado();\r\n            return delegado.dataValues;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    static async obtenerSubDelegado(lista){\r\n        try {\r\n            const subdelegado =  await lista.getSubDelegado();\r\n            return subdelegado.dataValues;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async obtenerTorneo(anio_torneo, tipo_torneo){\r\n        try {\r\n            const torneo =  await ListaInscripcionService.obtenerTorneo(anio_torneo,tipo_torneo);\r\n            return torneo;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async obtenerJugadores(req,res){\r\n        const id_lista = req.params.id;\r\n\r\n        try {\r\n            const jugadores = await ListaInscripcionService.obtenerJugadores(id_lista);\r\n            if(jugadores){\r\n                util.setSuccess(200,`Jugadores de la lista: '${id_lista}'  obtenidos`,jugadores);\r\n            }\r\n            else{\r\n                util.setError(404,`Jugadores no encontrados`);\r\n            }\r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async agregarJugadoresEnLista(req,res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const lista = await ListaInscripcionService.obtenerListaInscripcion(id_lista);\r\n            const jugadores = req.body;\r\n\r\n            if (lista){\r\n                const operacion = await Jugador_integra_ListaService.agregarJugadoresEnLista(id_lista,jugadores);\r\n                if (operacion){\r\n                    util.setSuccess(201,`Jugadores añadidos a la lista: ${id_lista} `,operacion);\r\n                }\r\n\r\n                else{\r\n                    util.setError(400,'No se pudo completar la operación'); \r\n                }\r\n            }\r\n            else{\r\n                util.setError(404,'No se encuentra lista de Inscripción'); \r\n            }\r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarJugadorEnLista(req, res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const lista = await ListaInscripcionService.obtenerListaInscripcion(id_lista);\r\n            const dni_jugador = req.params.dni_jugador;\r\n\r\n            if (lista){\r\n                const operacion = await Jugador_integra_ListaService.eliminarJugadorEnLista(id_lista,dni_jugador);\r\n                if (operacion){\r\n                    util.setSuccess(201,`Jugador eliminado de la lista: ${id_lista} `, operacion);\r\n                }\r\n                else{\r\n                    util.setError(400,'No se pudo completar la operación (jugador no se encontraba en la lista)'); \r\n                }\r\n            }\r\n            else{\r\n                util.setError(404,'No se encuentra lista de Inscripción'); \r\n            }\r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\nexport default ListaInscripcionController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595862393340
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\ListaInscripcionService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\ListaInscripcionService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\ListaInscripcionService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\ListaInscripcionService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "ListaInscripcionService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"../models/ListaInscripcion\"));\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nvar _Jugador_integra_Lista = _interopRequireDefault(require(\"../models/Jugador_integra_Lista\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ListaInscripcionService =\n/*#__PURE__*/\nfunction () {\n  function ListaInscripcionService() {\n    _classCallCheck(this, ListaInscripcionService);\n  }\n\n  _createClass(ListaInscripcionService, null, [{\n    key: \"agregarListaInscripcion\",\n    value: function agregarListaInscripcion(nuevaListaInscripcion) {\n      return regeneratorRuntime.async(function agregarListaInscripcion$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].create(nuevaListaInscripcion));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerListasInscripcion\",\n    value: function obtenerListasInscripcion() {\n      return regeneratorRuntime.async(function obtenerListasInscripcion$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerListaInscripcion\",\n    value: function obtenerListaInscripcion(id_lista) {\n      var lista;\n      return regeneratorRuntime.async(function obtenerListaInscripcion$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              lista = _context3.sent;\n              return _context3.abrupt(\"return\", lista);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarListaInscripcion\",\n    value: function actualizarListaInscripcion(id_lista, lista) {\n      var listaExistente;\n      return regeneratorRuntime.async(function actualizarListaInscripcion$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              listaExistente = _context4.sent;\n\n              if (!listaExistente) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.next = 7;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].update(lista, {\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 7:\n              return _context4.abrupt(\"return\", lista);\n\n            case 10:\n              return _context4.abrupt(\"return\", null);\n\n            case 11:\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarListaInscripcion\",\n    value: function eliminarListaInscripcion(id_lista) {\n      var listaExistente, listaEliminada;\n      return regeneratorRuntime.async(function eliminarListaInscripcion$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              listaExistente = _context5.sent;\n\n              if (!listaExistente) {\n                _context5.next = 13;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].destroy({\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 7:\n              _context5.next = 9;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].destroy({\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 9:\n              listaEliminada = _context5.sent;\n              return _context5.abrupt(\"return\", listaEliminada);\n\n            case 13:\n              return _context5.abrupt(\"return\", null);\n\n            case 14:\n              _context5.next = 19;\n              break;\n\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(anio_torneo, tipo_torneo) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio_torneo,\n                  tipo: tipo_torneo\n                }\n              }));\n\n            case 3:\n              torneo = _context6.sent;\n              return _context6.abrupt(\"return\", torneo.dataValues);\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores(id_lista) {\n      var lista, jugadores;\n      return regeneratorRuntime.async(function obtenerJugadores$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              lista = _context7.sent;\n\n              if (!lista) {\n                _context7.next = 9;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].findAll({\n                raw: true,\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 7:\n              jugadores = _context7.sent;\n              return _context7.abrupt(\"return\", jugadores);\n\n            case 9:\n              _context7.next = 14;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }]);\n\n  return ListaInscripcionService;\n}();\n\nvar _default = ListaInscripcionService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIkxpc3RhSW5zY3JpcGNpb25TZXJ2aWNlIiwibnVldmFMaXN0YUluc2NyaXBjaW9uIiwiTGlzdGFJbnNjcmlwY2lvbiIsImNyZWF0ZSIsImZpbmRBbGwiLCJpZF9saXN0YSIsImZpbmRCeVBrIiwibGlzdGEiLCJsaXN0YUV4aXN0ZW50ZSIsInVwZGF0ZSIsIndoZXJlIiwiSnVnYWRvcl9pbnRlZ3JhX0xpc3RhIiwiZGVzdHJveSIsImxpc3RhRWxpbWluYWRhIiwiYW5pb190b3JuZW8iLCJ0aXBvX3Rvcm5lbyIsIlRvcm5lbyIsImZpbmRPbmUiLCJhbmlvIiwidGlwbyIsInRvcm5lbyIsImRhdGFWYWx1ZXMiLCJyYXciLCJqdWdhZG9yZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7OztJQUVNQSx1Qjs7Ozs7Ozs7OzRDQUNtQ0MscUI7Ozs7Ozs7OENBRXBCQyw2QkFBaUJDLE1BQWpCLENBQXdCRixxQkFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OENBUUFDLDZCQUFpQkUsT0FBakIsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0Q0FRb0JDLFE7Ozs7Ozs7OzhDQUViSCw2QkFBaUJJLFFBQWpCLENBQTBCRCxRQUExQixDOzs7QUFBZEUsY0FBQUEsSztnREFDQ0EsSzs7Ozs7Ozs7Ozs7Ozs7OzsrQ0FPNkJGLFEsRUFBU0UsSzs7Ozs7Ozs7OENBRWhCTCw2QkFBaUJJLFFBQWpCLENBQTBCRCxRQUExQixDOzs7QUFBdkJHLGNBQUFBLGM7O21CQUVIQSxjOzs7Ozs7OENBQ0tOLDZCQUFpQk8sTUFBakIsQ0FBd0JGLEtBQXhCLEVBQThCO0FBQUNHLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLFFBQVEsRUFBQ0E7QUFBVjtBQUFQLGVBQTlCLEM7OztnREFDQ0UsSzs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZDQVEyQkYsUTs7Ozs7Ozs7OENBRUxILDZCQUFpQkksUUFBakIsQ0FBMEJELFFBQTFCLEM7OztBQUF2QkcsY0FBQUEsYzs7bUJBQ0hBLGM7Ozs7Ozs4Q0FDS0csa0NBQXNCQyxPQUF0QixDQUE4QjtBQUFDRixnQkFBQUEsS0FBSyxFQUFDO0FBQUNMLGtCQUFBQSxRQUFRLEVBQUNBO0FBQVY7QUFBUCxlQUE5QixDOzs7OzhDQUN1QkgsNkJBQWlCVSxPQUFqQixDQUF5QjtBQUFDRixnQkFBQUEsS0FBSyxFQUFDO0FBQUNMLGtCQUFBQSxRQUFRLEVBQUNBO0FBQVY7QUFBUCxlQUF6QixDOzs7QUFBdkJRLGNBQUFBLGM7Z0RBQ0NBLGM7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQ0FRY0MsVyxFQUFZQyxXOzs7Ozs7Ozs4Q0FFZEMsbUJBQU9DLE9BQVAsQ0FBZTtBQUFDUCxnQkFBQUEsS0FBSyxFQUFDO0FBQUNRLGtCQUFBQSxJQUFJLEVBQUNKLFdBQU47QUFBa0JLLGtCQUFBQSxJQUFJLEVBQUNKO0FBQXZCO0FBQVAsZUFBZixDOzs7QUFBZkssY0FBQUEsTTtnREFDQ0EsTUFBTSxDQUFDQyxVOzs7Ozs7Ozs7Ozs7Ozs7O3FDQU9ZaEIsUTs7Ozs7Ozs7OENBRU5ILDZCQUFpQkksUUFBakIsQ0FBMEJELFFBQTFCLEM7OztBQUFkRSxjQUFBQSxLOzttQkFFRkEsSzs7Ozs7OzhDQUNzQkksa0NBQXNCUCxPQUF0QixDQUE4QjtBQUFDa0IsZ0JBQUFBLEdBQUcsRUFBQyxJQUFMO0FBQVVaLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLFFBQVEsRUFBQ0E7QUFBVjtBQUFoQixlQUE5QixDOzs7QUFBbEJrQixjQUFBQSxTO2dEQUdDQSxTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQVVGdkIsdUIiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGlzdGFJbnNjcmlwY2lvbiBmcm9tICcuLi9tb2RlbHMvTGlzdGFJbnNjcmlwY2lvbic7XHJcblxyXG5pbXBvcnQgVG9ybmVvIGZyb20gJy4uL21vZGVscy9Ub3JuZW8nO1xyXG5pbXBvcnQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhIGZyb20gJy4uL21vZGVscy9KdWdhZG9yX2ludGVncmFfTGlzdGEnO1xyXG5cclxuY2xhc3MgTGlzdGFJbnNjcmlwY2lvblNlcnZpY2UgeyBcclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyTGlzdGFJbnNjcmlwY2lvbihudWV2YUxpc3RhSW5zY3JpcGNpb24pIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgTGlzdGFJbnNjcmlwY2lvbi5jcmVhdGUobnVldmFMaXN0YUluc2NyaXBjaW9uKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyTGlzdGFzSW5zY3JpcGNpb24oKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgTGlzdGFJbnNjcmlwY2lvbi5maW5kQWxsKCk7XHJcbiAgICAgIH0gXHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yOyAgIFxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyTGlzdGFJbnNjcmlwY2lvbihpZF9saXN0YSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgbGlzdGEgPSBhd2FpdCBMaXN0YUluc2NyaXBjaW9uLmZpbmRCeVBrKGlkX2xpc3RhKTtcclxuICAgICAgICByZXR1cm4gbGlzdGE7XHJcbiAgICAgIH0gXHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yOyAgIFxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGFjdHVhbGl6YXJMaXN0YUluc2NyaXBjaW9uKGlkX2xpc3RhLGxpc3RhKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBsaXN0YUV4aXN0ZW50ZSA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb24uZmluZEJ5UGsoaWRfbGlzdGEpO1xyXG5cclxuICAgICAgICBpZihsaXN0YUV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBhd2FpdCBMaXN0YUluc2NyaXBjaW9uLnVwZGF0ZShsaXN0YSx7d2hlcmU6e2lkX2xpc3RhOmlkX2xpc3RhfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIGxpc3RhOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgc3RhdGljIGFzeW5jIGVsaW1pbmFyTGlzdGFJbnNjcmlwY2lvbihpZF9saXN0YSl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IGxpc3RhRXhpc3RlbnRlID0gYXdhaXQgTGlzdGFJbnNjcmlwY2lvbi5maW5kQnlQayhpZF9saXN0YSk7XHJcbiAgICAgICAgICBpZihsaXN0YUV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICAgIGF3YWl0IEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YS5kZXN0cm95KHt3aGVyZTp7aWRfbGlzdGE6aWRfbGlzdGF9fSk7IC8vZWxpbWluYW1vcyBsYSBsaXN0YSBkZSBqdWdhZG9yZXNcclxuICAgICAgICAgICAgY29uc3QgbGlzdGFFbGltaW5hZGEgPSBhd2FpdCBMaXN0YUluc2NyaXBjaW9uLmRlc3Ryb3koe3doZXJlOntpZF9saXN0YTppZF9saXN0YX19KTtcclxuICAgICAgICAgICAgcmV0dXJuIGxpc3RhRWxpbWluYWRhOyBcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgc3RhdGljIGFzeW5jIG9idGVuZXJUb3JuZW8oYW5pb190b3JuZW8sdGlwb190b3JuZW8pe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCB0b3JuZW8gPSBhd2FpdCBUb3JuZW8uZmluZE9uZSh7d2hlcmU6e2FuaW86YW5pb190b3JuZW8sdGlwbzp0aXBvX3Rvcm5lb319KTtcclxuICAgICAgICAgIHJldHVybiB0b3JuZW8uZGF0YVZhbHVlcztcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgZXJyb3I7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckp1Z2Fkb3JlcyhpZF9saXN0YSl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IGxpc3RhID0gYXdhaXQgTGlzdGFJbnNjcmlwY2lvbi5maW5kQnlQayhpZF9saXN0YSk7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIGlmIChsaXN0YSl7XHJcbiAgICAgICAgICAgIGNvbnN0IGp1Z2Fkb3JlcyA9IGF3YWl0IEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YS5maW5kQWxsKHtyYXc6dHJ1ZSx3aGVyZTp7aWRfbGlzdGE6aWRfbGlzdGF9fSk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJKdWdhZG9yZXMgZGUgbGEgbGlzdGFcIiwganVnYWRvcmVzKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBqdWdhZG9yZXM7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxufSBcclxuXHJcbiAgZXhwb3J0IGRlZmF1bHQgTGlzdGFJbnNjcmlwY2lvblNlcnZpY2U7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ListaInscripcionService.js"
      ],
      "names": [
        "ListaInscripcionService",
        "nuevaListaInscripcion",
        "ListaInscripcion",
        "create",
        "findAll",
        "id_lista",
        "findByPk",
        "lista",
        "listaExistente",
        "update",
        "where",
        "Jugador_integra_Lista",
        "destroy",
        "listaEliminada",
        "anio_torneo",
        "tipo_torneo",
        "Torneo",
        "findOne",
        "anio",
        "tipo",
        "torneo",
        "dataValues",
        "raw",
        "jugadores"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;IAEMA,uB;;;;;;;;;4CACmCC,qB;;;;;;;8CAEpBC,6BAAiBC,MAAjB,CAAwBF,qBAAxB,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,6BAAiBE,OAAjB,E;;;;;;;;;;;;;;;;;;;4CAQoBC,Q;;;;;;;;8CAEbH,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAdE,cAAAA,K;gDACCA,K;;;;;;;;;;;;;;;;+CAO6BF,Q,EAASE,K;;;;;;;;8CAEhBL,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAvBG,cAAAA,c;;mBAEHA,c;;;;;;8CACKN,6BAAiBO,MAAjB,CAAwBF,KAAxB,EAA8B;AAACG,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAA9B,C;;;gDACCE,K;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;6CAQ2BF,Q;;;;;;;;8CAELH,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAvBG,cAAAA,c;;mBACHA,c;;;;;;8CACKG,kCAAsBC,OAAtB,CAA8B;AAACF,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAA9B,C;;;;8CACuBH,6BAAiBU,OAAjB,CAAyB;AAACF,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAAzB,C;;;AAAvBQ,cAAAA,c;gDACCA,c;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;kCAQcC,W,EAAYC,W;;;;;;;;8CAEdC,mBAAOC,OAAP,CAAe;AAACP,gBAAAA,KAAK,EAAC;AAACQ,kBAAAA,IAAI,EAACJ,WAAN;AAAkBK,kBAAAA,IAAI,EAACJ;AAAvB;AAAP,eAAf,C;;;AAAfK,cAAAA,M;gDACCA,MAAM,CAACC,U;;;;;;;;;;;;;;;;qCAOYhB,Q;;;;;;;;8CAENH,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAdE,cAAAA,K;;mBAEFA,K;;;;;;8CACsBI,kCAAsBP,OAAtB,CAA8B;AAACkB,gBAAAA,GAAG,EAAC,IAAL;AAAUZ,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAhB,eAA9B,C;;;AAAlBkB,cAAAA,S;gDAGCA,S;;;;;;;;;;;;;;;;;;;;;;;eAUFvB,uB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import ListaInscripcion from '../models/ListaInscripcion';\r\n\r\nimport Torneo from '../models/Torneo';\r\nimport Jugador_integra_Lista from '../models/Jugador_integra_Lista';\r\n\r\nclass ListaInscripcionService { \r\n    static async agregarListaInscripcion(nuevaListaInscripcion) {\r\n      try {\r\n        return await ListaInscripcion.create(nuevaListaInscripcion);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerListasInscripcion(){\r\n      try {\r\n        return await ListaInscripcion.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n\r\n    static async obtenerListaInscripcion(id_lista){\r\n      try {\r\n        const lista = await ListaInscripcion.findByPk(id_lista);\r\n        return lista;\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async actualizarListaInscripcion(id_lista,lista){\r\n      try {\r\n        const listaExistente = await ListaInscripcion.findByPk(id_lista);\r\n\r\n        if(listaExistente){\r\n          await ListaInscripcion.update(lista,{where:{id_lista:id_lista}});\r\n          return lista; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async eliminarListaInscripcion(id_lista){\r\n        try {\r\n          const listaExistente = await ListaInscripcion.findByPk(id_lista);\r\n          if(listaExistente){\r\n            await Jugador_integra_Lista.destroy({where:{id_lista:id_lista}}); //eliminamos la lista de jugadores\r\n            const listaEliminada = await ListaInscripcion.destroy({where:{id_lista:id_lista}});\r\n            return listaEliminada; \r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerTorneo(anio_torneo,tipo_torneo){\r\n        try {\r\n          const torneo = await Torneo.findOne({where:{anio:anio_torneo,tipo:tipo_torneo}});\r\n          return torneo.dataValues;\r\n        } \r\n        catch (error) {\r\n          throw error;   \r\n        }\r\n      }\r\n\r\n      static async obtenerJugadores(id_lista){\r\n        try {\r\n          const lista = await ListaInscripcion.findByPk(id_lista);\r\n          \r\n          if (lista){\r\n            const jugadores = await Jugador_integra_Lista.findAll({raw:true,where:{id_lista:id_lista}});\r\n            //console.log(\"Jugadores de la lista\", jugadores);\r\n\r\n            return jugadores;\r\n          }\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n} \r\n\r\n  export default ListaInscripcionService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142514
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\ListaInscripcion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\ListaInscripcion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\ListaInscripcion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\ListaInscripcion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "ListaInscripcion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Jugador = _interopRequireDefault(require(\"./Jugador\"));\n\nvar _Equipo = _interopRequireDefault(require(\"./Equipo\"));\n\nvar _Jugador_integra_Lista = _interopRequireDefault(require(\"./Jugador_integra_Lista\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar ListaInscripcion = _database.sequelize.define('ListaInscripcion', {\n  id_lista: {\n    type: _sequelize[\"default\"].INTEGER,\n    autoIncrement: true,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  id_equipo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  anio_torneo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  tipo_torneo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_capitan: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_delegado: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_subdelegado: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nListaInscripcion.belongsTo(_Equipo[\"default\"], {\n  foreignKey: 'id_equipo',\n  as: 'equipo'\n});\nListaInscripcion.belongsTo(_Jugador[\"default\"], {\n  foreignKey: 'dni_capitan',\n  as: 'capitan'\n});\nListaInscripcion.belongsTo(_Jugador[\"default\"], {\n  foreignKey: 'dni_delegado',\n  as: 'delegado'\n});\nListaInscripcion.belongsTo(_Jugador[\"default\"], {\n  foreignKey: 'dni_subdelegado',\n  as: 'subDelegado'\n});\nvar _default = ListaInscripcion;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RhSW5zY3JpcGNpb24uanMiXSwibmFtZXMiOlsiTGlzdGFJbnNjcmlwY2lvbiIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkX2xpc3RhIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5vbWJyZSIsIlRFWFQiLCJkZXNjcmlwY2lvbiIsImlkX2VxdWlwbyIsImFuaW9fdG9ybmVvIiwidGlwb190b3JuZW8iLCJkbmlfY2FwaXRhbiIsImRuaV9kZWxlZ2FkbyIsImRuaV9zdWJkZWxlZ2FkbyIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiLCJiZWxvbmdzVG8iLCJFcXVpcG8iLCJmb3JlaWduS2V5IiwiYXMiLCJKdWdhZG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7QUFMbUM7QUFPbkMsSUFBTUEsZ0JBQWdCLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLGtCQUFqQixFQUFxQztBQUMxREMsRUFBQUEsUUFBUSxFQUFFO0FBQ05DLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRFY7QUFFTkMsSUFBQUEsYUFBYSxFQUFFLElBRlQ7QUFHTkMsSUFBQUEsVUFBVSxFQUFFO0FBSE4sR0FEZ0Q7QUFNMURDLEVBQUFBLE1BQU0sRUFBQztBQUNITCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSztBQURiLEdBTm1EO0FBUzFEQyxFQUFBQSxXQUFXLEVBQUM7QUFDUlAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEUixHQVQ4QztBQVkxREUsRUFBQUEsU0FBUyxFQUFDO0FBQ05SLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFYsR0FaZ0Q7QUFlMURPLEVBQUFBLFdBQVcsRUFBQztBQUNSVCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURSLEdBZjhDO0FBa0IxRFEsRUFBQUEsV0FBVyxFQUFDO0FBQ1JWLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFIsR0FsQjhDO0FBcUIxRFMsRUFBQUEsV0FBVyxFQUFDO0FBQ1JYLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFIsR0FyQjhDO0FBd0IxRFUsRUFBQUEsWUFBWSxFQUFDO0FBQ1RaLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFAsR0F4QjZDO0FBMkIxRFcsRUFBQUEsZUFBZSxFQUFDO0FBQ1piLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREo7QUEzQjBDLENBQXJDLEVBK0J0QjtBQUNDWSxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0EvQnNCLENBQXpCOztBQW9DQW5CLGdCQUFnQixDQUFDb0IsU0FBakIsQ0FBMkJDLGtCQUEzQixFQUFrQztBQUFDQyxFQUFBQSxVQUFVLEVBQUUsV0FBYjtBQUEwQkMsRUFBQUEsRUFBRSxFQUFDO0FBQTdCLENBQWxDO0FBQ0F2QixnQkFBZ0IsQ0FBQ29CLFNBQWpCLENBQTJCSSxtQkFBM0IsRUFBbUM7QUFBQ0YsRUFBQUEsVUFBVSxFQUFFLGFBQWI7QUFBMkJDLEVBQUFBLEVBQUUsRUFBQztBQUE5QixDQUFuQztBQUNBdkIsZ0JBQWdCLENBQUNvQixTQUFqQixDQUEyQkksbUJBQTNCLEVBQW1DO0FBQUNGLEVBQUFBLFVBQVUsRUFBRSxjQUFiO0FBQTRCQyxFQUFBQSxFQUFFLEVBQUM7QUFBL0IsQ0FBbkM7QUFDQXZCLGdCQUFnQixDQUFDb0IsU0FBakIsQ0FBMkJJLG1CQUEzQixFQUFtQztBQUFDRixFQUFBQSxVQUFVLEVBQUUsaUJBQWI7QUFBK0JDLEVBQUFBLEVBQUUsRUFBQztBQUFsQyxDQUFuQztlQUVldkIsZ0IiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnOyAvLyBjbGFzZSBTZXF1ZWxpemVcclxuaW1wb3J0IHsgc2VxdWVsaXplIH0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnIC8vY29uZXhpb24gYSBsYSBiYXNlXHJcblxyXG5pbXBvcnQgSnVnYWRvciBmcm9tICcuL0p1Z2Fkb3InO1xyXG5pbXBvcnQgRXF1aXBvIGZyb20gJy4vRXF1aXBvJztcclxuaW1wb3J0IEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YSBmcm9tICcuL0p1Z2Fkb3JfaW50ZWdyYV9MaXN0YSc7XHJcblxyXG5jb25zdCBMaXN0YUluc2NyaXBjaW9uID0gc2VxdWVsaXplLmRlZmluZSgnTGlzdGFJbnNjcmlwY2lvbicsIHtcclxuICAgIGlkX2xpc3RhOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgbm9tYnJlOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGRlc2NyaXBjaW9uOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGlkX2VxdWlwbzp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBhbmlvX3Rvcm5lbzp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICB0aXBvX3Rvcm5lbzp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBkbmlfY2FwaXRhbjp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBkbmlfZGVsZWdhZG86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgZG5pX3N1YmRlbGVnYWRvOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfVxyXG5cclxufSwge1xyXG4gICAgdGltZXN0YW1wczogZmFsc2UsXHJcbiAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUsXHJcbn0pO1xyXG5cclxuTGlzdGFJbnNjcmlwY2lvbi5iZWxvbmdzVG8oRXF1aXBvLHtmb3JlaWduS2V5OiAnaWRfZXF1aXBvJywgYXM6J2VxdWlwbyd9KTtcclxuTGlzdGFJbnNjcmlwY2lvbi5iZWxvbmdzVG8oSnVnYWRvcix7Zm9yZWlnbktleTogJ2RuaV9jYXBpdGFuJyxhczonY2FwaXRhbid9KTtcclxuTGlzdGFJbnNjcmlwY2lvbi5iZWxvbmdzVG8oSnVnYWRvcix7Zm9yZWlnbktleTogJ2RuaV9kZWxlZ2FkbycsYXM6J2RlbGVnYWRvJ30pO1xyXG5MaXN0YUluc2NyaXBjaW9uLmJlbG9uZ3NUbyhKdWdhZG9yLHtmb3JlaWduS2V5OiAnZG5pX3N1YmRlbGVnYWRvJyxhczonc3ViRGVsZWdhZG8nfSk7IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTGlzdGFJbnNjcmlwY2lvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ListaInscripcion.js"
      ],
      "names": [
        "ListaInscripcion",
        "sequelize",
        "define",
        "id_lista",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "nombre",
        "TEXT",
        "descripcion",
        "id_equipo",
        "anio_torneo",
        "tipo_torneo",
        "dni_capitan",
        "dni_delegado",
        "dni_subdelegado",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Equipo",
        "foreignKey",
        "as",
        "Jugador"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;AALmC;AAOnC,IAAMA,gBAAgB,GAAGC,oBAAUC,MAAV,CAAiB,kBAAjB,EAAqC;AAC1DC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEC,sBAAUC,OADV;AAENC,IAAAA,aAAa,EAAE,IAFT;AAGNC,IAAAA,UAAU,EAAE;AAHN,GADgD;AAM1DC,EAAAA,MAAM,EAAC;AACHL,IAAAA,IAAI,EAAEC,sBAAUK;AADb,GANmD;AAS1DC,EAAAA,WAAW,EAAC;AACRP,IAAAA,IAAI,EAAEC,sBAAUK;AADR,GAT8C;AAY1DE,EAAAA,SAAS,EAAC;AACNR,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAZgD;AAe1DO,EAAAA,WAAW,EAAC;AACRT,IAAAA,IAAI,EAAEC,sBAAUC;AADR,GAf8C;AAkB1DQ,EAAAA,WAAW,EAAC;AACRV,IAAAA,IAAI,EAAEC,sBAAUC;AADR,GAlB8C;AAqB1DS,EAAAA,WAAW,EAAC;AACRX,IAAAA,IAAI,EAAEC,sBAAUC;AADR,GArB8C;AAwB1DU,EAAAA,YAAY,EAAC;AACTZ,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GAxB6C;AA2B1DW,EAAAA,eAAe,EAAC;AACZb,IAAAA,IAAI,EAAEC,sBAAUC;AADJ;AA3B0C,CAArC,EA+BtB;AACCY,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CA/BsB,CAAzB;;AAoCAnB,gBAAgB,CAACoB,SAAjB,CAA2BC,kBAA3B,EAAkC;AAACC,EAAAA,UAAU,EAAE,WAAb;AAA0BC,EAAAA,EAAE,EAAC;AAA7B,CAAlC;AACAvB,gBAAgB,CAACoB,SAAjB,CAA2BI,mBAA3B,EAAmC;AAACF,EAAAA,UAAU,EAAE,aAAb;AAA2BC,EAAAA,EAAE,EAAC;AAA9B,CAAnC;AACAvB,gBAAgB,CAACoB,SAAjB,CAA2BI,mBAA3B,EAAmC;AAACF,EAAAA,UAAU,EAAE,cAAb;AAA4BC,EAAAA,EAAE,EAAC;AAA/B,CAAnC;AACAvB,gBAAgB,CAACoB,SAAjB,CAA2BI,mBAA3B,EAAmC;AAACF,EAAAA,UAAU,EAAE,iBAAb;AAA+BC,EAAAA,EAAE,EAAC;AAAlC,CAAnC;eAEevB,gB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nimport Jugador from './Jugador';\r\nimport Equipo from './Equipo';\r\nimport Jugador_integra_Lista from './Jugador_integra_Lista';\r\n\r\nconst ListaInscripcion = sequelize.define('ListaInscripcion', {\r\n    id_lista: {\r\n        type: Sequelize.INTEGER,\r\n        autoIncrement: true,\r\n        primaryKey: true\r\n    },\r\n    nombre:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    descripcion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    id_equipo:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    anio_torneo:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    tipo_torneo:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_capitan:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_delegado:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_subdelegado:{\r\n        type: Sequelize.INTEGER\r\n    }\r\n\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nListaInscripcion.belongsTo(Equipo,{foreignKey: 'id_equipo', as:'equipo'});\r\nListaInscripcion.belongsTo(Jugador,{foreignKey: 'dni_capitan',as:'capitan'});\r\nListaInscripcion.belongsTo(Jugador,{foreignKey: 'dni_delegado',as:'delegado'});\r\nListaInscripcion.belongsTo(Jugador,{foreignKey: 'dni_subdelegado',as:'subDelegado'}); \r\n\r\nexport default ListaInscripcion;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595652877662
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\tabla.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\tabla.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\tabla.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\tabla.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "tabla.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _tabla = _interopRequireDefault(require(\"../controllers/tabla.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.post('/', _tabla[\"default\"].crearTabla);\nrouter.get('/:id', _tabla[\"default\"].obtenerTabla);\nrouter.get('/', _tabla[\"default\"].obtenerTablas);\nrouter.put('/:id', _tabla[\"default\"].actualizarTabla);\nrouter[\"delete\"]('/:id', _tabla[\"default\"].eliminarTabla);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxhLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJUYWJsYUNvbnRyb2xsZXIiLCJjcmVhclRhYmxhIiwiZ2V0Iiwib2J0ZW5lclRhYmxhIiwib2J0ZW5lclRhYmxhcyIsInB1dCIsImFjdHVhbGl6YXJUYWJsYSIsImVsaW1pbmFyVGFibGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxHQUFaLEVBQWlCQyxrQkFBZ0JDLFVBQWpDO0FBQ0FILE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLE1BQVgsRUFBa0JGLGtCQUFnQkcsWUFBbEM7QUFDQUwsTUFBTSxDQUFDSSxHQUFQLENBQVcsR0FBWCxFQUFlRixrQkFBZ0JJLGFBQS9CO0FBQ0FOLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLE1BQVgsRUFBa0JMLGtCQUFnQk0sZUFBbEM7QUFDQVIsTUFBTSxVQUFOLENBQWMsTUFBZCxFQUFxQkUsa0JBQWdCTyxhQUFyQztlQUVlVCxNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbmltcG9ydCBUYWJsYUNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvdGFibGEuY29udHJvbGxlcic7XHJcblxyXG5yb3V0ZXIucG9zdCgnLycsIFRhYmxhQ29udHJvbGxlci5jcmVhclRhYmxhKTtcclxucm91dGVyLmdldCgnLzppZCcsVGFibGFDb250cm9sbGVyLm9idGVuZXJUYWJsYSk7XHJcbnJvdXRlci5nZXQoJy8nLFRhYmxhQ29udHJvbGxlci5vYnRlbmVyVGFibGFzKTtcclxucm91dGVyLnB1dCgnLzppZCcsVGFibGFDb250cm9sbGVyLmFjdHVhbGl6YXJUYWJsYSk7XHJcbnJvdXRlci5kZWxldGUoJy86aWQnLFRhYmxhQ29udHJvbGxlci5lbGltaW5hclRhYmxhKTsgXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "tabla.js"
      ],
      "names": [
        "router",
        "post",
        "TablaController",
        "crearTabla",
        "get",
        "obtenerTabla",
        "obtenerTablas",
        "put",
        "actualizarTabla",
        "eliminarTabla"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBC,kBAAgBC,UAAjC;AACAH,MAAM,CAACI,GAAP,CAAW,MAAX,EAAkBF,kBAAgBG,YAAlC;AACAL,MAAM,CAACI,GAAP,CAAW,GAAX,EAAeF,kBAAgBI,aAA/B;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAkBL,kBAAgBM,eAAlC;AACAR,MAAM,UAAN,CAAc,MAAd,EAAqBE,kBAAgBO,aAArC;eAEeT,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport TablaController from '../controllers/tabla.controller';\r\n\r\nrouter.post('/', TablaController.crearTabla);\r\nrouter.get('/:id',TablaController.obtenerTabla);\r\nrouter.get('/',TablaController.obtenerTablas);\r\nrouter.put('/:id',TablaController.actualizarTabla);\r\nrouter.delete('/:id',TablaController.eliminarTabla); \r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142509
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\tablaActualizada.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\tablaActualizada.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\tablaActualizada.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\tablaActualizada.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "tablaActualizada.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _TablaActualizadaService = _interopRequireDefault(require(\"../services/TablaActualizadaService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar TablaActualizadaController =\n/*#__PURE__*/\nfunction () {\n  function TablaActualizadaController() {\n    _classCallCheck(this, TablaActualizadaController);\n  }\n\n  _createClass(TablaActualizadaController, null, [{\n    key: \"crearTablaActualizada\",\n    value: function crearTablaActualizada(req, res) {\n      var nuevaTablaActualizada, TablaActualizadaCreada;\n      return regeneratorRuntime.async(function crearTablaActualizada$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaTablaActualizada = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_TablaActualizadaService[\"default\"].agregarTablaActualizada(nuevaTablaActualizada));\n\n            case 4:\n              TablaActualizadaCreada = _context.sent;\n              util.setSuccess(201, 'Tabla Actualizada añadida', TablaActualizadaCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTablasActualizadas\",\n    value: function obtenerTablasActualizadas(req, res) {\n      var tablasActualizadas;\n      return regeneratorRuntime.async(function obtenerTablasActualizadas$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_TablaActualizadaService[\"default\"].obtenerTablasActualizadas());\n\n            case 3:\n              tablasActualizadas = _context2.sent;\n\n              if (tablasActualizadas && tablasActualizadas.length > 0) {\n                util.setSuccess(200, 'Tablas_Actualizadas obtenidas', tablasActualizadas);\n              } else {\n                util.setSuccess(200, 'No se encuentran Tablas_Actualizadas');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerTablaActualizada\",\n    value: function obtenerTablaActualizada(req, res) {\n      var id_tabla, tablaActualizada;\n      return regeneratorRuntime.async(function obtenerTablaActualizada$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id_tabla = req.params.id;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_TablaActualizadaService[\"default\"].obtenerTablaActualizada(id_tabla));\n\n            case 4:\n              tablaActualizada = _context3.sent;\n\n              if (tablaActualizada) {\n                util.setSuccess(200, 'Tabla_Actualizada obtenida', tablaActualizada);\n              } else {\n                util.setError(404, \"Tabla_Actualizada con id:\\\"\".concat(id, \"\\\" no encontrado\"));\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"eliminarTablaActualizada\",\n    value: function eliminarTablaActualizada(req, res) {\n      var id_tabla, tablaActualizadaEliminada;\n      return regeneratorRuntime.async(function eliminarTablaActualizada$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_tabla = req.params.id;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_TablaActualizadaService[\"default\"].eliminarTablaActualizada(id_tabla));\n\n            case 4:\n              tablaActualizadaEliminada = _context4.sent;\n\n              if (tablaActualizadaEliminada) {\n                util.setSuccess(200, 'Tabla_Actualizada eliminada');\n              } else {\n                util.setError(404, \"Tabla_Actualizada con id:\\\"\".concat(id, \"\\\" no encontrada\"));\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarTablaActualizada\",\n    value: function actualizarTablaActualizada(req, res) {\n      var anio, tipo, tablaActualizada, tablaActualizadaActualizado;\n      return regeneratorRuntime.async(function actualizarTablaActualizada$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              anio = parseInt(req.params.anio);\n              tipo = req.params.tipo;\n              tablaActualizada = req.body;\n              _context5.next = 6;\n              return regeneratorRuntime.awrap(_TablaActualizadaService[\"default\"].actualizarTablaActualizada(anio, tipo, tablaActualizada));\n\n            case 6:\n              tablaActualizadaActualizado = _context5.sent;\n\n              if (tablaActualizadaActualizado) {\n                util.setSuccess(200, 'TablaActualizada actualizado', tablaActualizadaActualizado);\n              } else {\n                util.setError(404, \"TablaActualizada: \\\"\".concat(tipo, \"\\\" del a\\xF1o: \\\"\").concat(anio, \"\\\" no encontrado\"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }]);\n\n  return TablaActualizadaController;\n}();\n\nvar _default = TablaActualizadaController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxhQWN0dWFsaXphZGEuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJ1dGlsIiwiVXRpbCIsIlRhYmxhQWN0dWFsaXphZGFDb250cm9sbGVyIiwicmVxIiwicmVzIiwibnVldmFUYWJsYUFjdHVhbGl6YWRhIiwiYm9keSIsIlRhYmxhQWN0dWFsaXphZGFTZXJ2aWNlIiwiYWdyZWdhclRhYmxhQWN0dWFsaXphZGEiLCJUYWJsYUFjdHVhbGl6YWRhQ3JlYWRhIiwic2V0U3VjY2VzcyIsInNlbmQiLCJzZXRFcnJvciIsIm1lc3NhZ2UiLCJvYnRlbmVyVGFibGFzQWN0dWFsaXphZGFzIiwidGFibGFzQWN0dWFsaXphZGFzIiwibGVuZ3RoIiwiaWRfdGFibGEiLCJwYXJhbXMiLCJpZCIsIm9idGVuZXJUYWJsYUFjdHVhbGl6YWRhIiwidGFibGFBY3R1YWxpemFkYSIsImVsaW1pbmFyVGFibGFBY3R1YWxpemFkYSIsInRhYmxhQWN0dWFsaXphZGFFbGltaW5hZGEiLCJhbmlvIiwicGFyc2VJbnQiLCJ0aXBvIiwiYWN0dWFsaXphclRhYmxhQWN0dWFsaXphZGEiLCJ0YWJsYUFjdHVhbGl6YWRhQWN0dWFsaXphZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7OztBQUVBLElBQU1BLElBQUksR0FBRyxJQUFJQyxpQkFBSixFQUFiOztJQUVNQywwQjs7Ozs7Ozs7OzBDQUNpQ0MsRyxFQUFLQyxHOzs7Ozs7O0FBRTFCQyxjQUFBQSxxQixHQUF3QkYsR0FBRyxDQUFDRyxJOzs4Q0FDR0Msb0NBQXdCQyx1QkFBeEIsQ0FBZ0RILHFCQUFoRCxDOzs7QUFBL0JJLGNBQUFBLHNCO0FBRU5ULGNBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQixFQUFvQiwyQkFBcEIsRUFBaURELHNCQUFqRDsrQ0FDT1QsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixZQUFNQyxPQUF4QjsrQ0FDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7OENBSXdCRCxHLEVBQUtDLEc7Ozs7Ozs7OzhDQUVIRyxvQ0FBd0JPLHlCQUF4QixFOzs7QUFBM0JDLGNBQUFBLGtCOztBQUVOLGtCQUFHQSxrQkFBa0IsSUFBSUEsa0JBQWtCLENBQUNDLE1BQW5CLEdBQTRCLENBQXJELEVBQXVEO0FBQ25EaEIsZ0JBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQixFQUFvQiwrQkFBcEIsRUFBb0RLLGtCQUFwRDtBQUNILGVBRkQsTUFHSTtBQUNBZixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLHNDQUFwQjtBQUNIOztnREFDTVYsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7NENBSXNCRCxHLEVBQUtDLEc7Ozs7Ozs7QUFFNUJhLGNBQUFBLFEsR0FBV2QsR0FBRyxDQUFDZSxNQUFKLENBQVdDLEU7OzhDQUNHWixvQ0FBd0JhLHVCQUF4QixDQUFnREgsUUFBaEQsQzs7O0FBQXpCSSxjQUFBQSxnQjs7QUFFTixrQkFBR0EsZ0JBQUgsRUFBb0I7QUFDaEJyQixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLDRCQUFwQixFQUFpRFcsZ0JBQWpEO0FBQ0gsZUFGRCxNQUdJO0FBQ0FyQixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCx1Q0FBK0NPLEVBQS9DO0FBQ0g7O2dEQUNNbkIsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7NkNBSXVCRCxHLEVBQUtDLEc7Ozs7Ozs7QUFFN0JhLGNBQUFBLFEsR0FBV2QsR0FBRyxDQUFDZSxNQUFKLENBQVdDLEU7OzhDQUNZWixvQ0FBd0JlLHdCQUF4QixDQUFpREwsUUFBakQsQzs7O0FBQWxDTSxjQUFBQSx5Qjs7QUFFTixrQkFBR0EseUJBQUgsRUFBNkI7QUFDekJ2QixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLDZCQUFwQjtBQUNILGVBRkQsTUFHSTtBQUNBVixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCx1Q0FBK0NPLEVBQS9DO0FBQ0g7O2dEQUVNbkIsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7K0NBSXlCRCxHLEVBQUtDLEc7Ozs7Ozs7QUFFL0JvQixjQUFBQSxJLEdBQU9DLFFBQVEsQ0FBQ3RCLEdBQUcsQ0FBQ2UsTUFBSixDQUFXTSxJQUFaLEM7QUFDZkUsY0FBQUEsSSxHQUFPdkIsR0FBRyxDQUFDZSxNQUFKLENBQVdRLEk7QUFDbEJMLGNBQUFBLGdCLEdBQW1CbEIsR0FBRyxDQUFDRyxJOzs4Q0FFYUMsb0NBQXdCb0IsMEJBQXhCLENBQW1ESCxJQUFuRCxFQUF3REUsSUFBeEQsRUFBNkRMLGdCQUE3RCxDOzs7QUFBcENPLGNBQUFBLDJCOztBQUVOLGtCQUFHQSwyQkFBSCxFQUErQjtBQUMzQjVCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsOEJBQXBCLEVBQW1Ea0IsMkJBQW5EO0FBQ0gsZUFGRCxNQUdJO0FBQ0E1QixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxnQ0FBd0NjLElBQXhDLDhCQUEyREYsSUFBM0Q7QUFDSDs7Z0RBRU14QixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7OztBQUdQSixjQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLGFBQU1DLE9BQXhCO2dEQUNPYixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7Ozs7Ozs7Ozs7OztlQUtKRiwwQiIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUYWJsYUFjdHVhbGl6YWRhU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9UYWJsYUFjdHVhbGl6YWRhU2VydmljZSc7XHJcbmltcG9ydCBVdGlsIGZyb20gJy4uL3V0aWxzL1V0aWxzJztcclxuXHJcbmNvbnN0IHV0aWwgPSBuZXcgVXRpbCgpO1xyXG5cclxuY2xhc3MgVGFibGFBY3R1YWxpemFkYUNvbnRyb2xsZXIge1xyXG4gICAgc3RhdGljIGFzeW5jIGNyZWFyVGFibGFBY3R1YWxpemFkYShyZXEsIHJlcykgeyAgICBcclxuICAgICAgICB0cnkgeyAgICBcclxuICAgICAgICAgICAgY29uc3QgbnVldmFUYWJsYUFjdHVhbGl6YWRhID0gcmVxLmJvZHk7XHJcbiAgICAgICAgICAgIGNvbnN0IFRhYmxhQWN0dWFsaXphZGFDcmVhZGEgPSBhd2FpdCBUYWJsYUFjdHVhbGl6YWRhU2VydmljZS5hZ3JlZ2FyVGFibGFBY3R1YWxpemFkYShudWV2YVRhYmxhQWN0dWFsaXphZGEpO1xyXG5cclxuICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMSwnVGFibGEgQWN0dWFsaXphZGEgYcOxYWRpZGEnLCBUYWJsYUFjdHVhbGl6YWRhQ3JlYWRhKTtcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3Ipe1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwMCxlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclRhYmxhc0FjdHVhbGl6YWRhcyhyZXEsIHJlcyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgdGFibGFzQWN0dWFsaXphZGFzID0gYXdhaXQgVGFibGFBY3R1YWxpemFkYVNlcnZpY2Uub2J0ZW5lclRhYmxhc0FjdHVhbGl6YWRhcygpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYodGFibGFzQWN0dWFsaXphZGFzICYmIHRhYmxhc0FjdHVhbGl6YWRhcy5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDAsJ1RhYmxhc19BY3R1YWxpemFkYXMgb2J0ZW5pZGFzJyx0YWJsYXNBY3R1YWxpemFkYXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdObyBzZSBlbmN1ZW50cmFuIFRhYmxhc19BY3R1YWxpemFkYXMnKTsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDAwLGVycm9yLm1lc3NhZ2UpOyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyVGFibGFBY3R1YWxpemFkYShyZXEsIHJlcyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgaWRfdGFibGEgPSByZXEucGFyYW1zLmlkO1xyXG4gICAgICAgICAgICBjb25zdCB0YWJsYUFjdHVhbGl6YWRhID0gYXdhaXQgVGFibGFBY3R1YWxpemFkYVNlcnZpY2Uub2J0ZW5lclRhYmxhQWN0dWFsaXphZGEoaWRfdGFibGEpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYodGFibGFBY3R1YWxpemFkYSl7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdUYWJsYV9BY3R1YWxpemFkYSBvYnRlbmlkYScsdGFibGFBY3R1YWxpemFkYSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBUYWJsYV9BY3R1YWxpemFkYSBjb24gaWQ6XCIke2lkfVwiIG5vIGVuY29udHJhZG9gKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsZXJyb3IubWVzc2FnZSk7ICAgXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTsgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGVsaW1pbmFyVGFibGFBY3R1YWxpemFkYShyZXEsIHJlcyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgaWRfdGFibGEgPSByZXEucGFyYW1zLmlkO1xyXG4gICAgICAgICAgICBjb25zdCB0YWJsYUFjdHVhbGl6YWRhRWxpbWluYWRhID0gYXdhaXQgVGFibGFBY3R1YWxpemFkYVNlcnZpY2UuZWxpbWluYXJUYWJsYUFjdHVhbGl6YWRhKGlkX3RhYmxhKTtcclxuXHJcbiAgICAgICAgICAgIGlmKHRhYmxhQWN0dWFsaXphZGFFbGltaW5hZGEpe1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnVGFibGFfQWN0dWFsaXphZGEgZWxpbWluYWRhJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBUYWJsYV9BY3R1YWxpemFkYSBjb24gaWQ6XCIke2lkfVwiIG5vIGVuY29udHJhZGFgKTtcclxuICAgICAgICAgICAgfSBcclxuXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxlcnJvci5tZXNzYWdlKTsgICBcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH0gXHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGFjdHVhbGl6YXJUYWJsYUFjdHVhbGl6YWRhKHJlcSwgcmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBhbmlvID0gcGFyc2VJbnQocmVxLnBhcmFtcy5hbmlvKTtcclxuICAgICAgICAgICAgY29uc3QgdGlwbyA9IHJlcS5wYXJhbXMudGlwbztcclxuICAgICAgICAgICAgY29uc3QgdGFibGFBY3R1YWxpemFkYSA9IHJlcS5ib2R5O1xyXG5cclxuICAgICAgICAgICAgY29uc3QgdGFibGFBY3R1YWxpemFkYUFjdHVhbGl6YWRvID0gYXdhaXQgVGFibGFBY3R1YWxpemFkYVNlcnZpY2UuYWN0dWFsaXphclRhYmxhQWN0dWFsaXphZGEoYW5pbyx0aXBvLHRhYmxhQWN0dWFsaXphZGEpO1xyXG5cclxuICAgICAgICAgICAgaWYodGFibGFBY3R1YWxpemFkYUFjdHVhbGl6YWRvKXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDAsJ1RhYmxhQWN0dWFsaXphZGEgYWN0dWFsaXphZG8nLHRhYmxhQWN0dWFsaXphZGFBY3R1YWxpemFkbyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBUYWJsYUFjdHVhbGl6YWRhOiBcIiR7dGlwb31cIiBkZWwgYcOxbzogXCIke2FuaW99XCIgbm8gZW5jb250cmFkb2ApO1xyXG4gICAgICAgICAgICB9IFxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGVycm9yLm1lc3NhZ2UpOyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfSBcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGFibGFBY3R1YWxpemFkYUNvbnRyb2xsZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tablaActualizada.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "TablaActualizadaController",
        "req",
        "res",
        "nuevaTablaActualizada",
        "body",
        "TablaActualizadaService",
        "agregarTablaActualizada",
        "TablaActualizadaCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerTablasActualizadas",
        "tablasActualizadas",
        "length",
        "id_tabla",
        "params",
        "id",
        "obtenerTablaActualizada",
        "tablaActualizada",
        "eliminarTablaActualizada",
        "tablaActualizadaEliminada",
        "anio",
        "parseInt",
        "tipo",
        "actualizarTablaActualizada",
        "tablaActualizadaActualizado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,0B;;;;;;;;;0CACiCC,G,EAAKC,G;;;;;;;AAE1BC,cAAAA,qB,GAAwBF,GAAG,CAACG,I;;8CACGC,oCAAwBC,uBAAxB,CAAgDH,qBAAhD,C;;;AAA/BI,cAAAA,sB;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,2BAApB,EAAiDD,sBAAjD;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;8CAIwBD,G,EAAKC,G;;;;;;;;8CAEHG,oCAAwBO,yBAAxB,E;;;AAA3BC,cAAAA,kB;;AAEN,kBAAGA,kBAAkB,IAAIA,kBAAkB,CAACC,MAAnB,GAA4B,CAArD,EAAuD;AACnDhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,+BAApB,EAAoDK,kBAApD;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,sCAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;4CAIsBD,G,EAAKC,G;;;;;;;AAE5Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACGZ,oCAAwBa,uBAAxB,CAAgDH,QAAhD,C;;;AAAzBI,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAoB;AAChBrB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,4BAApB,EAAiDW,gBAAjD;AACH,eAFD,MAGI;AACArB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,uCAA+CO,EAA/C;AACH;;gDACMnB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;6CAIuBD,G,EAAKC,G;;;;;;;AAE7Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACYZ,oCAAwBe,wBAAxB,CAAiDL,QAAjD,C;;;AAAlCM,cAAAA,yB;;AAEN,kBAAGA,yBAAH,EAA6B;AACzBvB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,6BAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,uCAA+CO,EAA/C;AACH;;gDAEMnB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;+CAIyBD,G,EAAKC,G;;;;;;;AAE/BoB,cAAAA,I,GAAOC,QAAQ,CAACtB,GAAG,CAACe,MAAJ,CAAWM,IAAZ,C;AACfE,cAAAA,I,GAAOvB,GAAG,CAACe,MAAJ,CAAWQ,I;AAClBL,cAAAA,gB,GAAmBlB,GAAG,CAACG,I;;8CAEaC,oCAAwBoB,0BAAxB,CAAmDH,IAAnD,EAAwDE,IAAxD,EAA6DL,gBAA7D,C;;;AAApCO,cAAAA,2B;;AAEN,kBAAGA,2BAAH,EAA+B;AAC3B5B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,8BAApB,EAAmDkB,2BAAnD;AACH,eAFD,MAGI;AACA5B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,gCAAwCc,IAAxC,8BAA2DF,IAA3D;AACH;;gDAEMxB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,0B",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import TablaActualizadaService from '../services/TablaActualizadaService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass TablaActualizadaController {\r\n    static async crearTablaActualizada(req, res) {    \r\n        try {    \r\n            const nuevaTablaActualizada = req.body;\r\n            const TablaActualizadaCreada = await TablaActualizadaService.agregarTablaActualizada(nuevaTablaActualizada);\r\n\r\n            util.setSuccess(201,'Tabla Actualizada añadida', TablaActualizadaCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerTablasActualizadas(req, res){\r\n        try {\r\n            const tablasActualizadas = await TablaActualizadaService.obtenerTablasActualizadas();\r\n            \r\n            if(tablasActualizadas && tablasActualizadas.length > 0){\r\n                util.setSuccess(200,'Tablas_Actualizadas obtenidas',tablasActualizadas);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Tablas_Actualizadas'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerTablaActualizada(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tablaActualizada = await TablaActualizadaService.obtenerTablaActualizada(id_tabla);\r\n            \r\n            if(tablaActualizada){\r\n                util.setSuccess(200,'Tabla_Actualizada obtenida',tablaActualizada);\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla_Actualizada con id:\"${id}\" no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarTablaActualizada(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tablaActualizadaEliminada = await TablaActualizadaService.eliminarTablaActualizada(id_tabla);\r\n\r\n            if(tablaActualizadaEliminada){\r\n                util.setSuccess(200,'Tabla_Actualizada eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla_Actualizada con id:\"${id}\" no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    } \r\n\r\n    static async actualizarTablaActualizada(req, res){\r\n        try {\r\n            const anio = parseInt(req.params.anio);\r\n            const tipo = req.params.tipo;\r\n            const tablaActualizada = req.body;\r\n\r\n            const tablaActualizadaActualizado = await TablaActualizadaService.actualizarTablaActualizada(anio,tipo,tablaActualizada);\r\n\r\n            if(tablaActualizadaActualizado){\r\n                util.setSuccess(200,'TablaActualizada actualizado',tablaActualizadaActualizado);\r\n            }\r\n            else{\r\n                util.setError(404,`TablaActualizada: \"${tipo}\" del año: \"${anio}\" no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    } \r\n}\r\n\r\nexport default TablaActualizadaController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583100703231
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\tabla.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\tabla.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\tabla.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\tabla.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "tabla.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _TablaService = _interopRequireDefault(require(\"../services/TablaService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar TablaController =\n/*#__PURE__*/\nfunction () {\n  function TablaController() {\n    _classCallCheck(this, TablaController);\n  }\n\n  _createClass(TablaController, null, [{\n    key: \"crearTabla\",\n    value: function crearTabla(req, res) {\n      var nuevaTabla, TablaCreada;\n      return regeneratorRuntime.async(function crearTabla$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaTabla = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].agregarTabla(nuevaTabla));\n\n            case 4:\n              TablaCreada = _context.sent;\n              util.setSuccess(201, 'Tabla añadida', TablaCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTablas\",\n    value: function obtenerTablas(req, res) {\n      var tablas;\n      return regeneratorRuntime.async(function obtenerTablas$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].obtenerTablas());\n\n            case 3:\n              tablas = _context2.sent;\n\n              if (tablas && tablas.length > 0) {\n                util.setSuccess(200, 'Tablas obtenidas', tablas);\n              } else {\n                util.setSuccess(200, 'No se encuentran Tablas');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(req, res) {\n      var id_tabla, tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id_tabla = req.params.id;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].obtenerTabla(id_tabla));\n\n            case 4:\n              tabla = _context3.sent;\n\n              if (tabla) {\n                util.setSuccess(200, 'Tabla obtenida', tabla);\n              } else {\n                util.setError(404, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no encontrado\"));\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"eliminarTabla\",\n    value: function eliminarTabla(req, res) {\n      var id_tabla, tablaEliminada;\n      return regeneratorRuntime.async(function eliminarTabla$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_tabla = req.params.id;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].eliminarTabla(id_tabla));\n\n            case 4:\n              tablaEliminada = _context4.sent;\n\n              if (tablaEliminada) {\n                util.setSuccess(200, 'Tabla eliminada');\n              } else {\n                util.setError(404, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no encontrada\"));\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarTabla\",\n    value: function actualizarTabla(req, res) {\n      var id_tabla, tabla, tablaActualizada;\n      return regeneratorRuntime.async(function actualizarTabla$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_tabla = req.params.id;\n              tabla = req.body;\n              _context5.next = 5;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].actualizarTabla(id_tabla, tabla));\n\n            case 5:\n              tablaActualizada = _context5.sent;\n\n              if (tablaActualizada == 0) {\n                // no hay columnas actualizadas\n                util.setError(400, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no se pudo actualizar. Chequear par\\xE1metros\"));\n              } else {\n                if (tablaActualizada == null) {\n                  util.setError(404, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no se encuentra\"));\n                } else {\n                  util.setSuccess(200, 'Tabla actualizada', tablaActualizada);\n                }\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }]);\n\n  return TablaController;\n}();\n\nvar _default = TablaController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxhLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsidXRpbCIsIlV0aWwiLCJUYWJsYUNvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJudWV2YVRhYmxhIiwiYm9keSIsIlRhYmxhU2VydmljZSIsImFncmVnYXJUYWJsYSIsIlRhYmxhQ3JlYWRhIiwic2V0U3VjY2VzcyIsInNlbmQiLCJzZXRFcnJvciIsIm1lc3NhZ2UiLCJvYnRlbmVyVGFibGFzIiwidGFibGFzIiwibGVuZ3RoIiwiaWRfdGFibGEiLCJwYXJhbXMiLCJpZCIsIm9idGVuZXJUYWJsYSIsInRhYmxhIiwiZWxpbWluYXJUYWJsYSIsInRhYmxhRWxpbWluYWRhIiwiYWN0dWFsaXphclRhYmxhIiwidGFibGFBY3R1YWxpemFkYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHLElBQUlDLGlCQUFKLEVBQWI7O0lBRU1DLGU7Ozs7Ozs7OzsrQkFDc0JDLEcsRUFBS0MsRzs7Ozs7OztBQUVmQyxjQUFBQSxVLEdBQWFGLEdBQUcsQ0FBQ0csSTs7OENBQ0dDLHlCQUFhQyxZQUFiLENBQTBCSCxVQUExQixDOzs7QUFBcEJJLGNBQUFBLFc7QUFFTlQsY0FBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLGVBQXBCLEVBQXFDRCxXQUFyQzsrQ0FDT1QsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixZQUFNQyxPQUF4QjsrQ0FDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7a0NBSVlELEcsRUFBS0MsRzs7Ozs7Ozs7OENBRUhHLHlCQUFhTyxhQUFiLEU7OztBQUFmQyxjQUFBQSxNOztBQUVOLGtCQUFHQSxNQUFNLElBQUlBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUE3QixFQUErQjtBQUMzQmhCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0Isa0JBQXBCLEVBQXVDSyxNQUF2QztBQUNILGVBRkQsTUFHSTtBQUNBZixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLHlCQUFwQjtBQUNIOztnREFDTVYsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7aUNBSVdELEcsRUFBS0MsRzs7Ozs7OztBQUVqQmEsY0FBQUEsUSxHQUFXZCxHQUFHLENBQUNlLE1BQUosQ0FBV0MsRTs7OENBQ1JaLHlCQUFhYSxZQUFiLENBQTBCSCxRQUExQixDOzs7QUFBZEksY0FBQUEsSzs7QUFFTixrQkFBR0EsS0FBSCxFQUFTO0FBQ0xyQixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLGdCQUFwQixFQUFxQ1csS0FBckM7QUFDSCxlQUZELE1BR0k7QUFDQXJCLGdCQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLDJCQUFtQ0ssUUFBbkM7QUFDSDs7Z0RBQ01qQixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7OztBQUdQSixjQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLGFBQU1DLE9BQXhCO2dEQUNPYixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7Ozs7Ozs7OztrQ0FJWUQsRyxFQUFLQyxHOzs7Ozs7O0FBRWxCYSxjQUFBQSxRLEdBQVdkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFOzs4Q0FDQ1oseUJBQWFlLGFBQWIsQ0FBMkJMLFFBQTNCLEM7OztBQUF2Qk0sY0FBQUEsYzs7QUFFTixrQkFBR0EsY0FBSCxFQUFrQjtBQUNkdkIsZ0JBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQixFQUFvQixpQkFBcEI7QUFDSCxlQUZELE1BR0k7QUFDQVYsZ0JBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsMkJBQW1DSyxRQUFuQztBQUNIOztnREFFTWpCLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7O0FBR1BKLGNBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsRUFBa0IsYUFBTUMsT0FBeEI7Z0RBQ09iLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7Ozs7Ozs7O29DQUljRCxHLEVBQUtDLEc7Ozs7Ozs7QUFFcEJhLGNBQUFBLFEsR0FBV2QsR0FBRyxDQUFDZSxNQUFKLENBQVdDLEU7QUFDdEJFLGNBQUFBLEssR0FBUWxCLEdBQUcsQ0FBQ0csSTs7OENBRWFDLHlCQUFhaUIsZUFBYixDQUE2QlAsUUFBN0IsRUFBc0NJLEtBQXRDLEM7OztBQUF6QkksY0FBQUEsZ0I7O0FBRU4sa0JBQUdBLGdCQUFnQixJQUFFLENBQXJCLEVBQXVCO0FBQUU7QUFDckJ6QixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCwyQkFBbUNLLFFBQW5DO0FBQ0gsZUFGRCxNQUdJO0FBQ0Esb0JBQUdRLGdCQUFnQixJQUFFLElBQXJCLEVBQTBCO0FBQ3RCekIsa0JBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsMkJBQW1DSyxRQUFuQztBQUNILGlCQUZELE1BR0k7QUFDQWpCLGtCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsbUJBQXBCLEVBQXdDZSxnQkFBeEM7QUFDSDtBQUNKOztnREFDTXpCLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7O0FBR1BKLGNBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjLEdBQWQsRUFBa0IsYUFBTUMsT0FBeEI7Z0RBQ09iLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFWLEM7Ozs7Ozs7Ozs7Ozs7O2VBS0pGLGUiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGFibGFTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL1RhYmxhU2VydmljZSc7XHJcbmltcG9ydCBVdGlsIGZyb20gJy4uL3V0aWxzL1V0aWxzJztcclxuXHJcbmNvbnN0IHV0aWwgPSBuZXcgVXRpbCgpO1xyXG5cclxuY2xhc3MgVGFibGFDb250cm9sbGVyIHtcclxuICAgIHN0YXRpYyBhc3luYyBjcmVhclRhYmxhKHJlcSwgcmVzKSB7ICAgIFxyXG4gICAgICAgIHRyeSB7ICAgIFxyXG4gICAgICAgICAgICBjb25zdCBudWV2YVRhYmxhID0gcmVxLmJvZHk7XHJcbiAgICAgICAgICAgIGNvbnN0IFRhYmxhQ3JlYWRhID0gYXdhaXQgVGFibGFTZXJ2aWNlLmFncmVnYXJUYWJsYShudWV2YVRhYmxhKTtcclxuXHJcbiAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDEsJ1RhYmxhIGHDsWFkaWRhJywgVGFibGFDcmVhZGEpO1xyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlcnJvcil7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDAwLGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyVGFibGFzKHJlcSwgcmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCB0YWJsYXMgPSBhd2FpdCBUYWJsYVNlcnZpY2Uub2J0ZW5lclRhYmxhcygpO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICBpZih0YWJsYXMgJiYgdGFibGFzLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnVGFibGFzIG9idGVuaWRhcycsdGFibGFzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnTm8gc2UgZW5jdWVudHJhbiBUYWJsYXMnKTsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDAwLGVycm9yLm1lc3NhZ2UpOyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyVGFibGEocmVxLCByZXMpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkX3RhYmxhID0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgICAgICAgY29uc3QgdGFibGEgPSBhd2FpdCBUYWJsYVNlcnZpY2Uub2J0ZW5lclRhYmxhKGlkX3RhYmxhKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKHRhYmxhKXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDAsJ1RhYmxhIG9idGVuaWRhJyx0YWJsYSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBUYWJsYSBjb24gaWQ6XCIke2lkX3RhYmxhfVwiIG5vIGVuY29udHJhZG9gKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsZXJyb3IubWVzc2FnZSk7ICAgXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTsgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGVsaW1pbmFyVGFibGEocmVxLCByZXMpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkX3RhYmxhID0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgICAgICAgY29uc3QgdGFibGFFbGltaW5hZGEgPSBhd2FpdCBUYWJsYVNlcnZpY2UuZWxpbWluYXJUYWJsYShpZF90YWJsYSk7XHJcblxyXG4gICAgICAgICAgICBpZih0YWJsYUVsaW1pbmFkYSl7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdUYWJsYSBlbGltaW5hZGEnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDQsYFRhYmxhIGNvbiBpZDpcIiR7aWRfdGFibGF9XCIgbm8gZW5jb250cmFkYWApO1xyXG4gICAgICAgICAgICB9IFxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGVycm9yLm1lc3NhZ2UpOyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfSBcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphclRhYmxhKHJlcSwgcmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBpZF90YWJsYSA9IHJlcS5wYXJhbXMuaWQ7XHJcbiAgICAgICAgICAgIGNvbnN0IHRhYmxhID0gcmVxLmJvZHk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCB0YWJsYUFjdHVhbGl6YWRhID0gYXdhaXQgVGFibGFTZXJ2aWNlLmFjdHVhbGl6YXJUYWJsYShpZF90YWJsYSx0YWJsYSk7XHJcblxyXG4gICAgICAgICAgICBpZih0YWJsYUFjdHVhbGl6YWRhPT0wKXsgLy8gbm8gaGF5IGNvbHVtbmFzIGFjdHVhbGl6YWRhc1xyXG4gICAgICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDAsYFRhYmxhIGNvbiBpZDpcIiR7aWRfdGFibGF9XCIgbm8gc2UgcHVkbyBhY3R1YWxpemFyLiBDaGVxdWVhciBwYXLDoW1ldHJvc2ApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBpZih0YWJsYUFjdHVhbGl6YWRhPT1udWxsKXtcclxuICAgICAgICAgICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxgVGFibGEgY29uIGlkOlwiJHtpZF90YWJsYX1cIiBubyBzZSBlbmN1ZW50cmFgKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgdXRpbC5zZXRTdWNjZXNzKDIwMCwnVGFibGEgYWN0dWFsaXphZGEnLHRhYmxhQWN0dWFsaXphZGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH1cclxuICAgIH0gXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRhYmxhQ29udHJvbGxlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "tabla.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "TablaController",
        "req",
        "res",
        "nuevaTabla",
        "body",
        "TablaService",
        "agregarTabla",
        "TablaCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerTablas",
        "tablas",
        "length",
        "id_tabla",
        "params",
        "id",
        "obtenerTabla",
        "tabla",
        "eliminarTabla",
        "tablaEliminada",
        "actualizarTabla",
        "tablaActualizada"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,e;;;;;;;;;+BACsBC,G,EAAKC,G;;;;;;;AAEfC,cAAAA,U,GAAaF,GAAG,CAACG,I;;8CACGC,yBAAaC,YAAb,CAA0BH,UAA1B,C;;;AAApBI,cAAAA,W;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,eAApB,EAAqCD,WAArC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;;8CAEHG,yBAAaO,aAAb,E;;;AAAfC,cAAAA,M;;AAEN,kBAAGA,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAA7B,EAA+B;AAC3BhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCK,MAAvC;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,yBAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;iCAIWD,G,EAAKC,G;;;;;;;AAEjBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACRZ,yBAAaa,YAAb,CAA0BH,QAA1B,C;;;AAAdI,cAAAA,K;;AAEN,kBAAGA,KAAH,EAAS;AACLrB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,gBAApB,EAAqCW,KAArC;AACH,eAFD,MAGI;AACArB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH;;gDACMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAElBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACCZ,yBAAae,aAAb,CAA2BL,QAA3B,C;;;AAAvBM,cAAAA,c;;AAEN,kBAAGA,cAAH,EAAkB;AACdvB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;AACtBE,cAAAA,K,GAAQlB,GAAG,CAACG,I;;8CAEaC,yBAAaiB,eAAb,CAA6BP,QAA7B,EAAsCI,KAAtC,C;;;AAAzBI,cAAAA,gB;;AAEN,kBAAGA,gBAAgB,IAAE,CAArB,EAAuB;AAAE;AACrBzB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH,eAFD,MAGI;AACA,oBAAGQ,gBAAgB,IAAE,IAArB,EAA0B;AACtBzB,kBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH,iBAFD,MAGI;AACAjB,kBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCe,gBAAxC;AACH;AACJ;;gDACMzB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,e",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import TablaService from '../services/TablaService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass TablaController {\r\n    static async crearTabla(req, res) {    \r\n        try {    \r\n            const nuevaTabla = req.body;\r\n            const TablaCreada = await TablaService.agregarTabla(nuevaTabla);\r\n\r\n            util.setSuccess(201,'Tabla añadida', TablaCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerTablas(req, res){\r\n        try {\r\n            const tablas = await TablaService.obtenerTablas();\r\n        \r\n            if(tablas && tablas.length > 0){\r\n                util.setSuccess(200,'Tablas obtenidas',tablas);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Tablas'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerTabla(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tabla = await TablaService.obtenerTabla(id_tabla);\r\n            \r\n            if(tabla){\r\n                util.setSuccess(200,'Tabla obtenida',tabla);\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla con id:\"${id_tabla}\" no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarTabla(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tablaEliminada = await TablaService.eliminarTabla(id_tabla);\r\n\r\n            if(tablaEliminada){\r\n                util.setSuccess(200,'Tabla eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla con id:\"${id_tabla}\" no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    } \r\n\r\n    static async actualizarTabla(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tabla = req.body;\r\n\r\n            const tablaActualizada = await TablaService.actualizarTabla(id_tabla,tabla);\r\n\r\n            if(tablaActualizada==0){ // no hay columnas actualizadas\r\n                util.setError(400,`Tabla con id:\"${id_tabla}\" no se pudo actualizar. Chequear parámetros`);\r\n            }\r\n            else{\r\n                if(tablaActualizada==null){\r\n                    util.setError(404,`Tabla con id:\"${id_tabla}\" no se encuentra`);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,'Tabla actualizada',tablaActualizada);\r\n                }\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);\r\n            return util.send(res);\r\n        }\r\n    } \r\n}\r\n\r\nexport default TablaController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142502
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\TablaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\TablaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\TablaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\TablaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "TablaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Tabla = _interopRequireDefault(require(\"../models/Tabla\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TablaService =\n/*#__PURE__*/\nfunction () {\n  function TablaService() {\n    _classCallCheck(this, TablaService);\n  }\n\n  _createClass(TablaService, null, [{\n    key: \"agregarTabla\",\n    value: function agregarTabla(nuevaTabla) {\n      return regeneratorRuntime.async(function agregarTabla$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].create(nuevaTabla));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"crearTablaVacia\",\n    value: function crearTablaVacia() {\n      var tabla;\n      return regeneratorRuntime.async(function crearTablaVacia$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              tabla = {};\n              tabla.tabla = {};\n              _context2.next = 5;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].create());\n\n            case 5:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerTablas\",\n    value: function obtenerTablas() {\n      return regeneratorRuntime.async(function obtenerTablas$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findAll());\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(id_tabla) {\n      var tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findByPk(id_tabla));\n\n            case 3:\n              tabla = _context4.sent;\n              return _context4.abrupt(\"return\", tabla);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"eliminarTabla\",\n    value: function eliminarTabla(id_tabla) {\n      var tablaExistente, tablaEliminada;\n      return regeneratorRuntime.async(function eliminarTabla$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findByPk(id_tabla));\n\n            case 3:\n              tablaExistente = _context5.sent;\n\n              if (!tablaExistente) {\n                _context5.next = 11;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].destroy({\n                where: {\n                  id_tabla: id_tabla\n                }\n              }));\n\n            case 7:\n              tablaEliminada = _context5.sent;\n              return _context5.abrupt(\"return\", tablaEliminada);\n\n            case 11:\n              return _context5.abrupt(\"return\", null);\n\n            case 12:\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"actualizarTabla\",\n    value: function actualizarTabla(id_tabla, tabla) {\n      var tablaExistente, actualizado;\n      return regeneratorRuntime.async(function actualizarTabla$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findByPk(id_tabla));\n\n            case 3:\n              tablaExistente = _context6.sent;\n\n              if (!tablaExistente) {\n                _context6.next = 15;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].update(tabla, {\n                where: {\n                  id_tabla: id_tabla\n                }\n              }));\n\n            case 7:\n              actualizado = _context6.sent;\n\n              if (!(actualizado == 0)) {\n                _context6.next = 12;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", 0);\n\n            case 12:\n              return _context6.abrupt(\"return\", tabla);\n\n            case 13:\n              _context6.next = 16;\n              break;\n\n            case 15:\n              return _context6.abrupt(\"return\", null);\n\n            case 16:\n              _context6.next = 21;\n              break;\n\n            case 18:\n              _context6.prev = 18;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 21:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }]);\n\n  return TablaService;\n}();\n\nvar _default = TablaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYmxhU2VydmljZS5qcyJdLCJuYW1lcyI6WyJUYWJsYVNlcnZpY2UiLCJudWV2YVRhYmxhIiwiVGFibGEiLCJjcmVhdGUiLCJ0YWJsYSIsImZpbmRBbGwiLCJpZF90YWJsYSIsImZpbmRCeVBrIiwidGFibGFFeGlzdGVudGUiLCJkZXN0cm95Iiwid2hlcmUiLCJ0YWJsYUVsaW1pbmFkYSIsInVwZGF0ZSIsImFjdHVhbGl6YWRvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7SUFFTUEsWTs7Ozs7Ozs7O2lDQUN3QkMsVTs7Ozs7Ozs4Q0FFVEMsa0JBQU1DLE1BQU4sQ0FBYUYsVUFBYixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFQRyxjQUFBQSxLLEdBQU0sRTtBQUNaQSxjQUFBQSxLQUFLLENBQUNBLEtBQU4sR0FBYyxFQUFkOzs4Q0FDYUYsa0JBQU1DLE1BQU4sRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OENBUUFELGtCQUFNRyxPQUFOLEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUNBT1NDLFE7Ozs7Ozs7OzhDQUVGSixrQkFBTUssUUFBTixDQUFlRCxRQUFmLEM7OztBQUFkRixjQUFBQSxLO2dEQUNDQSxLOzs7Ozs7Ozs7Ozs7Ozs7O2tDQU9nQkUsUTs7Ozs7Ozs7OENBRU1KLGtCQUFNSyxRQUFOLENBQWVELFFBQWYsQzs7O0FBQXZCRSxjQUFBQSxjOzttQkFDSEEsYzs7Ozs7OzhDQUM0Qk4sa0JBQU1PLE9BQU4sQ0FBYztBQUFDQyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNKLGtCQUFBQSxRQUFRLEVBQUNBO0FBQVY7QUFBUCxlQUFkLEM7OztBQUF2QkssY0FBQUEsYztnREFDQ0EsYzs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29DQVFnQkwsUSxFQUFTRixLOzs7Ozs7Ozs4Q0FFTEYsa0JBQU1LLFFBQU4sQ0FBZUQsUUFBZixDOzs7QUFBdkJFLGNBQUFBLGM7O21CQUNIQSxjOzs7Ozs7OENBQ3lCTixrQkFBTVUsTUFBTixDQUFhUixLQUFiLEVBQW1CO0FBQUNNLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0osa0JBQUFBLFFBQVEsRUFBQ0E7QUFBVjtBQUFQLGVBQW5CLEM7OztBQUFwQk8sY0FBQUEsVzs7b0JBQ0hBLFdBQVcsSUFBRSxDOzs7OztnREFDUCxDOzs7Z0RBR0FULEs7Ozs7Ozs7Z0RBSUYsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFTQUosWSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUYWJsYSBmcm9tICcuLi9tb2RlbHMvVGFibGEnO1xyXG5cclxuY2xhc3MgVGFibGFTZXJ2aWNlIHsgIFxyXG4gICAgc3RhdGljIGFzeW5jIGFncmVnYXJUYWJsYShudWV2YVRhYmxhKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFRhYmxhLmNyZWF0ZShudWV2YVRhYmxhKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBjcmVhclRhYmxhVmFjaWEoKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB0YWJsYT17fTtcclxuICAgICAgICB0YWJsYS50YWJsYSA9IHt9O1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBUYWJsYS5jcmVhdGUoKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyVGFibGFzKCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFRhYmxhLmZpbmRBbGwoKTtcclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyVGFibGEoaWRfdGFibGEpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHRhYmxhID0gYXdhaXQgVGFibGEuZmluZEJ5UGsoaWRfdGFibGEpO1xyXG4gICAgICAgIHJldHVybiB0YWJsYTtcclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hclRhYmxhKGlkX3RhYmxhKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB0YWJsYUV4aXN0ZW50ZSA9IGF3YWl0IFRhYmxhLmZpbmRCeVBrKGlkX3RhYmxhKTtcclxuICAgICAgICBpZih0YWJsYUV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBjb25zdCB0YWJsYUVsaW1pbmFkYSA9IGF3YWl0IFRhYmxhLmRlc3Ryb3koe3doZXJlOntpZF90YWJsYTppZF90YWJsYX19KTtcclxuICAgICAgICAgIHJldHVybiB0YWJsYUVsaW1pbmFkYTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFyVGFibGEoaWRfdGFibGEsdGFibGEpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHRhYmxhRXhpc3RlbnRlID0gYXdhaXQgVGFibGEuZmluZEJ5UGsoaWRfdGFibGEpO1xyXG4gICAgICAgIGlmKHRhYmxhRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGNvbnN0IGFjdHVhbGl6YWRvID0gYXdhaXQgVGFibGEudXBkYXRlKHRhYmxhLHt3aGVyZTp7aWRfdGFibGE6aWRfdGFibGF9fSk7XHJcbiAgICAgICAgICBpZihhY3R1YWxpemFkbz09MCl7IC8vc2kgbm8gaGF5IGNvbHVtbmFzIGFmZWN0YWRhc1xyXG4gICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJldHVybiB0YWJsYTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0gXHJcblxyXG4gIGV4cG9ydCBkZWZhdWx0IFRhYmxhU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "TablaService.js"
      ],
      "names": [
        "TablaService",
        "nuevaTabla",
        "Tabla",
        "create",
        "tabla",
        "findAll",
        "id_tabla",
        "findByPk",
        "tablaExistente",
        "destroy",
        "where",
        "tablaEliminada",
        "update",
        "actualizado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,Y;;;;;;;;;iCACwBC,U;;;;;;;8CAETC,kBAAMC,MAAN,CAAaF,UAAb,C;;;;;;;;;;;;;;;;;;;;;;;;;;AAQPG,cAAAA,K,GAAM,E;AACZA,cAAAA,KAAK,CAACA,KAAN,GAAc,EAAd;;8CACaF,kBAAMC,MAAN,E;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAD,kBAAMG,OAAN,E;;;;;;;;;;;;;;;;;;;iCAOSC,Q;;;;;;;;8CAEFJ,kBAAMK,QAAN,CAAeD,QAAf,C;;;AAAdF,cAAAA,K;gDACCA,K;;;;;;;;;;;;;;;;kCAOgBE,Q;;;;;;;;8CAEMJ,kBAAMK,QAAN,CAAeD,QAAf,C;;;AAAvBE,cAAAA,c;;mBACHA,c;;;;;;8CAC4BN,kBAAMO,OAAN,CAAc;AAACC,gBAAAA,KAAK,EAAC;AAACJ,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAAd,C;;;AAAvBK,cAAAA,c;gDACCA,c;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBL,Q,EAASF,K;;;;;;;;8CAELF,kBAAMK,QAAN,CAAeD,QAAf,C;;;AAAvBE,cAAAA,c;;mBACHA,c;;;;;;8CACyBN,kBAAMU,MAAN,CAAaR,KAAb,EAAmB;AAACM,gBAAAA,KAAK,EAAC;AAACJ,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAAnB,C;;;AAApBO,cAAAA,W;;oBACHA,WAAW,IAAE,C;;;;;gDACP,C;;;gDAGAT,K;;;;;;;gDAIF,I;;;;;;;;;;;;;;;;;;;;;;;eASAJ,Y",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Tabla from '../models/Tabla';\r\n\r\nclass TablaService {  \r\n    static async agregarTabla(nuevaTabla) {\r\n      try {\r\n        return await Tabla.create(nuevaTabla);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async crearTablaVacia(){\r\n      try {\r\n        const tabla={};\r\n        tabla.tabla = {};\r\n        return await Tabla.create();\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerTablas(){\r\n      try {\r\n        return await Tabla.findAll();\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerTabla(id_tabla){\r\n      try {\r\n        const tabla = await Tabla.findByPk(id_tabla);\r\n        return tabla;\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async eliminarTabla(id_tabla){\r\n      try {\r\n        const tablaExistente = await Tabla.findByPk(id_tabla);\r\n        if(tablaExistente){\r\n          const tablaEliminada = await Tabla.destroy({where:{id_tabla:id_tabla}});\r\n          return tablaEliminada;\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async actualizarTabla(id_tabla,tabla){\r\n      try {\r\n        const tablaExistente = await Tabla.findByPk(id_tabla);\r\n        if(tablaExistente){\r\n          const actualizado = await Tabla.update(tabla,{where:{id_tabla:id_tabla}});\r\n          if(actualizado==0){ //si no hay columnas afectadas\r\n            return 0;\r\n          }\r\n          else{\r\n            return tabla;\r\n          }\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  } \r\n\r\n  export default TablaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583955302472
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Tabla.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Tabla.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Tabla.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Tabla.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Tabla.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Tabla = _database.sequelize.define('Tabla', {\n  id_tabla: {\n    type: _sequelize[\"default\"].INTEGER,\n    autoIncrement: true,\n    primaryKey: true\n  },\n  tabla: {\n    type: _sequelize[\"default\"].JSON\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Tabla;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYmxhLmpzIl0sIm5hbWVzIjpbIlRhYmxhIiwic2VxdWVsaXplIiwiZGVmaW5lIiwiaWRfdGFibGEiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidGFibGEiLCJKU09OIiwidGltZXN0YW1wcyIsImZyZWV6ZVRhYmxlTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRG1DO0FBR25DLElBQU1BLEtBQUssR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsT0FBakIsRUFBMEI7QUFDcENDLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURWO0FBRU5DLElBQUFBLGFBQWEsRUFBRSxJQUZUO0FBR05DLElBQUFBLFVBQVUsRUFBRTtBQUhOLEdBRDBCO0FBTXBDQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEwsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEYjtBQU42QixDQUExQixFQVNYO0FBQ0NDLEVBQUFBLFVBQVUsRUFBRSxLQURiO0FBRUNDLEVBQUFBLGVBQWUsRUFBRTtBQUZsQixDQVRXLENBQWQ7O2VBY2VaLEsiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnOyAvLyBjbGFzZSBTZXF1ZWxpemVcclxuaW1wb3J0IHsgc2VxdWVsaXplIH0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnIC8vY29uZXhpb24gYSBsYSBiYXNlXHJcblxyXG5jb25zdCBUYWJsYSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1RhYmxhJywge1xyXG4gICAgaWRfdGFibGE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBhdXRvSW5jcmVtZW50OiB0cnVlLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICB0YWJsYToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5KU09OXHJcbiAgICB9XHJcbn0sIHtcclxuICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxyXG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlLFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRhYmxhOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Tabla.js"
      ],
      "names": [
        "Tabla",
        "sequelize",
        "define",
        "id_tabla",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "tabla",
        "JSON",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,KAAK,GAAGC,oBAAUC,MAAV,CAAiB,OAAjB,EAA0B;AACpCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEC,sBAAUC,OADV;AAENC,IAAAA,aAAa,EAAE,IAFT;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAD0B;AAMpCC,EAAAA,KAAK,EAAE;AACHL,IAAAA,IAAI,EAAEC,sBAAUK;AADb;AAN6B,CAA1B,EASX;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CATW,CAAd;;eAceZ,K",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Tabla = sequelize.define('Tabla', {\r\n    id_tabla: {\r\n        type: Sequelize.INTEGER,\r\n        autoIncrement: true,\r\n        primaryKey: true\r\n    },\r\n    tabla: {\r\n        type: Sequelize.JSON\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nexport default Tabla;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595361824545
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\partido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\partido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\partido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\routes\\partido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "partido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _partido = _interopRequireDefault(require(\"../controllers/partido.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _partido[\"default\"].obtenerPartidos);\nrouter.post('/', _partido[\"default\"].crearPartido);\nrouter.get('/:id', _partido[\"default\"].obtenerPartido);\nrouter.put('/:id', _partido[\"default\"].actualizarPartido);\nrouter[\"delete\"]('/:id', _partido[\"default\"].eliminarPartido);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpZG8uanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiUGFydGlkb0NvbnRyb2xsZXIiLCJvYnRlbmVyUGFydGlkb3MiLCJwb3N0IiwiY3JlYXJQYXJ0aWRvIiwib2J0ZW5lclBhcnRpZG8iLCJwdXQiLCJhY3R1YWxpemFyUGFydGlkbyIsImVsaW1pbmFyUGFydGlkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOzs7O0FBRkEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZUMsb0JBQWtCQyxlQUFqQztBQUNBSCxNQUFNLENBQUNJLElBQVAsQ0FBWSxHQUFaLEVBQWdCRixvQkFBa0JHLFlBQWxDO0FBQ0FMLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JDLG9CQUFrQkksY0FBcEM7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFrQkwsb0JBQWtCTSxpQkFBcEM7QUFDQVIsTUFBTSxVQUFOLENBQWMsTUFBZCxFQUFxQkUsb0JBQWtCTyxlQUF2QztlQUVlVCxNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbmltcG9ydCBQYXJ0aWRvQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy9wYXJ0aWRvLmNvbnRyb2xsZXInO1xyXG5cclxucm91dGVyLmdldCgnLycsUGFydGlkb0NvbnRyb2xsZXIub2J0ZW5lclBhcnRpZG9zKTtcclxucm91dGVyLnBvc3QoJy8nLFBhcnRpZG9Db250cm9sbGVyLmNyZWFyUGFydGlkbyk7XHJcbnJvdXRlci5nZXQoJy86aWQnLFBhcnRpZG9Db250cm9sbGVyLm9idGVuZXJQYXJ0aWRvKTtcclxucm91dGVyLnB1dCgnLzppZCcsUGFydGlkb0NvbnRyb2xsZXIuYWN0dWFsaXphclBhcnRpZG8pO1xyXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJyxQYXJ0aWRvQ29udHJvbGxlci5lbGltaW5hclBhcnRpZG8pOyBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "partido.js"
      ],
      "names": [
        "router",
        "get",
        "PartidoController",
        "obtenerPartidos",
        "post",
        "crearPartido",
        "obtenerPartido",
        "put",
        "actualizarPartido",
        "eliminarPartido"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,oBAAkBC,eAAjC;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAgBF,oBAAkBG,YAAlC;AACAL,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,oBAAkBI,cAApC;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAkBL,oBAAkBM,iBAApC;AACAR,MAAM,UAAN,CAAc,MAAd,EAAqBE,oBAAkBO,eAAvC;eAEeT,M",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport PartidoController from '../controllers/partido.controller';\r\n\r\nrouter.get('/',PartidoController.obtenerPartidos);\r\nrouter.post('/',PartidoController.crearPartido);\r\nrouter.get('/:id',PartidoController.obtenerPartido);\r\nrouter.put('/:id',PartidoController.actualizarPartido);\r\nrouter.delete('/:id',PartidoController.eliminarPartido); \r\n\r\nexport default router;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142509
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\partido.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\partido.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\partido.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers\\partido.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "partido.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _PartidoService = _interopRequireDefault(require(\"../services/PartidoService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Partido = _interopRequireDefault(require(\"../models/Partido\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar PartidoController =\n/*#__PURE__*/\nfunction () {\n  function PartidoController() {\n    _classCallCheck(this, PartidoController);\n  }\n\n  _createClass(PartidoController, null, [{\n    key: \"crearPartido\",\n    value: function crearPartido(req, res) {\n      var nuevoPartido, partidoCreado;\n      return regeneratorRuntime.async(function crearPartido$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoPartido = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].agregarPartido(nuevoPartido));\n\n            case 4:\n              partidoCreado = _context.sent;\n              util.setSuccess(201, 'Partido añadido', partidoCreado);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos(req, res) {\n      var partidos;\n      return regeneratorRuntime.async(function obtenerPartidos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].obtenerPartidos());\n\n            case 3:\n              partidos = _context2.sent;\n\n              if (partidos && partidos.length > 0) {\n                util.setSuccess(200, 'Partidos obtenidos', partidos);\n              } else {\n                util.setSuccess(200, 'No se encuentran Partidos');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerPartido\",\n    value: function obtenerPartido(req, res) {\n      var id_partido, partido;\n      return regeneratorRuntime.async(function obtenerPartido$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id_partido = req.params.id;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].obtenerPartido(id_partido));\n\n            case 4:\n              partido = _context3.sent;\n\n              /* const arbitro = await partido.getArbitro();  //datos del árbitro\r\n              const asistente = await partido.getAsistente(); //datos del asistente\r\n              \r\n              console.log(\"Datos del partido \",arbitro.dataValues,asistente.dataValues); */\n              if (partido) {\n                util.setSuccess(200, 'Partido obtenido', partido);\n              } else {\n                util.setError(404, \"Partido no encontrado\");\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarPartido\",\n    value: function actualizarPartido(req, res) {\n      var id_partido, partido, partidoActualizado;\n      return regeneratorRuntime.async(function actualizarPartido$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_partido = req.params.id;\n              partido = req.body;\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].actualizarPartido(id_partido, partido));\n\n            case 5:\n              partidoActualizado = _context4.sent;\n\n              if (partidoActualizado == 0) {\n                util.setError(400, \"Partido con id:\\\"\".concat(id_partido, \"\\\" no se pudo actualizar. Chequear par\\xE1metros\"));\n              } else {\n                if (partidoActualizado == null) {\n                  util.setError(404, \"Partido con id:\\\"\".concat(id_partido, \"\\\" no encontrado\"));\n                } else {\n                  util.setSuccess(200, 'Partido actualizado', partidoActualizado);\n                }\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarPartido\",\n    value: function eliminarPartido(req, res) {\n      var id_partido, partidoEliminado;\n      return regeneratorRuntime.async(function eliminarPartido$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_partido = req.params.id;\n              _context5.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].eliminarPartido(id_partido));\n\n            case 4:\n              partidoEliminado = _context5.sent;\n\n              if (partidoEliminado) {\n                util.setSuccess(200, 'Partido eliminado');\n              } else {\n                util.setError(404, \"Partido con id: \".concat(dni, \" no encontrado\"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return PartidoController;\n}();\n\nvar _default = PartidoController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "partido.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "PartidoController",
        "req",
        "res",
        "nuevoPartido",
        "body",
        "PartidoService",
        "agregarPartido",
        "partidoCreado",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerPartidos",
        "partidos",
        "length",
        "id_partido",
        "params",
        "id",
        "obtenerPartido",
        "partido",
        "actualizarPartido",
        "partidoActualizado",
        "eliminarPartido",
        "partidoEliminado",
        "dni"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,iB;;;;;;;;;iCACwBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,Y,GAAeF,GAAG,CAACG,I;;8CACGC,2BAAeC,cAAf,CAA8BH,YAA9B,C;;;AAAtBI,cAAAA,a;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCD,aAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;;8CAEHG,2BAAeO,eAAf,E;;;AAAjBC,cAAAA,Q;;AAEN,kBAAGA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAjC,EAAmC;AAC/BhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCK,QAAzC;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,2BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAGnBa,cAAAA,U,GAAad,GAAG,CAACe,MAAJ,CAAWC,E;;8CACRZ,2BAAea,cAAf,CAA8BH,UAA9B,C;;;AAAhBI,cAAAA,O;;AAGN;;;;AAKA,kBAAGA,OAAH,EAAW;AACPrB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCW,OAAvC;AACH,eAFD,MAGI;AACArB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAEtBa,cAAAA,U,GAAad,GAAG,CAACe,MAAJ,CAAWC,E;AACxBE,cAAAA,O,GAAUlB,GAAG,CAACG,I;;8CACaC,2BAAee,iBAAf,CAAiCL,UAAjC,EAA4CI,OAA5C,C;;;AAA3BE,cAAAA,kB;;AAEN,kBAAGA,kBAAkB,IAAE,CAAvB,EAAyB;AACrBvB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAqCK,UAArC;AACH,eAFD,MAGI;AACA,oBAAGM,kBAAkB,IAAE,IAAvB,EAA4B;AACxBvB,kBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAqCK,UAArC;AACH,iBAFD,MAGI;AACAjB,kBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0Ca,kBAA1C;AACH;AACJ;;gDACMvB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBa,cAAAA,U,GAAad,GAAG,CAACe,MAAJ,CAAWC,E;;8CACCZ,2BAAeiB,eAAf,CAA+BP,UAA/B,C;;;AAAzBQ,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAoB;AAChBzB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,4BAAqCc,GAArC;AACH;;gDAEM1B,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,iB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import PartidoService from '../services/PartidoService';\r\nimport Util from '../utils/Utils';\r\nimport Partido from '../models/Partido';\r\n\r\nconst util = new Util();\r\n\r\nclass PartidoController {\r\n    static async crearPartido(req, res) {    \r\n        try {    \r\n            const nuevoPartido = req.body;\r\n            const partidoCreado = await PartidoService.agregarPartido(nuevoPartido);\r\n\r\n            util.setSuccess(201,'Partido añadido',partidoCreado);\r\n            return util.send(res);\r\n        }   \r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerPartidos(req, res){\r\n        try {\r\n            const partidos = await PartidoService.obtenerPartidos();\r\n            \r\n            if(partidos && partidos.length > 0){\r\n                util.setSuccess(200,'Partidos obtenidos',partidos);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Partidos'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerPartido(req, res){\r\n        try {\r\n\r\n            const id_partido = req.params.id;\r\n            const partido = await PartidoService.obtenerPartido(id_partido);\r\n\r\n            \r\n            /* const arbitro = await partido.getArbitro();  //datos del árbitro\r\n            const asistente = await partido.getAsistente(); //datos del asistente\r\n            \r\n            console.log(\"Datos del partido \",arbitro.dataValues,asistente.dataValues); */\r\n            \r\n            if(partido){\r\n                util.setSuccess(200,'Partido obtenido',partido);\r\n            }\r\n            else{\r\n                util.setError(404,`Partido no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n   \r\n    static async actualizarPartido(req, res){\r\n        try {\r\n            const id_partido = req.params.id;\r\n            const partido = req.body;\r\n            const partidoActualizado = await PartidoService.actualizarPartido(id_partido,partido);\r\n\r\n            if(partidoActualizado==0){\r\n                util.setError(400,`Partido con id:\"${id_partido}\" no se pudo actualizar. Chequear parámetros`);\r\n            }\r\n            else{\r\n                if(partidoActualizado==null){\r\n                    util.setError(404,`Partido con id:\"${id_partido}\" no encontrado`);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,'Partido actualizado',partidoActualizado);\r\n                }\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async eliminarPartido(req, res){\r\n        try {\r\n            const id_partido = req.params.id;\r\n            const partidoEliminado = await PartidoService.eliminarPartido(id_partido);\r\n\r\n            if(partidoEliminado){\r\n                util.setSuccess(200,'Partido eliminado');\r\n            }\r\n            else{\r\n                util.setError(404,`Partido con id: ${dni} no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\nexport default PartidoController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142501
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\PartidoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\PartidoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\PartidoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\PartidoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "PartidoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Partido = _interopRequireDefault(require(\"../models/Partido\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PartidoService =\n/*#__PURE__*/\nfunction () {\n  function PartidoService() {\n    _classCallCheck(this, PartidoService);\n  }\n\n  _createClass(PartidoService, null, [{\n    key: \"agregarPartido\",\n    value: function agregarPartido(nuevoPartido) {\n      return regeneratorRuntime.async(function agregarPartido$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].create(nuevoPartido));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos() {\n      return regeneratorRuntime.async(function obtenerPartidos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerPartido\",\n    value: function obtenerPartido(id_partido) {\n      var partido;\n      return regeneratorRuntime.async(function obtenerPartido$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findByPk(id_partido));\n\n            case 3:\n              partido = _context3.sent;\n              return _context3.abrupt(\"return\", partido.dataValues);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarPartido\",\n    value: function actualizarPartido(id_partido, partido) {\n      var partidoExistente, actualizado;\n      return regeneratorRuntime.async(function actualizarPartido$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findByPk(id_partido));\n\n            case 3:\n              partidoExistente = _context4.sent;\n\n              if (!partidoExistente) {\n                _context4.next = 15;\n                break;\n              }\n\n              _context4.next = 7;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].update(partido, {\n                where: {\n                  id_partido: id_partido\n                }\n              }));\n\n            case 7:\n              actualizado = _context4.sent;\n\n              if (!(actualizado == 0)) {\n                _context4.next = 12;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", 0);\n\n            case 12:\n              return _context4.abrupt(\"return\", partido);\n\n            case 13:\n              _context4.next = 16;\n              break;\n\n            case 15:\n              return _context4.abrupt(\"return\", null);\n\n            case 16:\n              _context4.next = 21;\n              break;\n\n            case 18:\n              _context4.prev = 18;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }, {\n    key: \"eliminarPartido\",\n    value: function eliminarPartido(id_partido) {\n      var partidoExistente, partidoEliminado;\n      return regeneratorRuntime.async(function eliminarPartido$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findByPk(id_partido));\n\n            case 3:\n              partidoExistente = _context5.sent;\n\n              if (!partidoExistente) {\n                _context5.next = 11;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].destroy({\n                where: {\n                  id_partido: id_partido\n                }\n              }));\n\n            case 7:\n              partidoEliminado = _context5.sent;\n              return _context5.abrupt(\"return\", partidoEliminado);\n\n            case 11:\n              return _context5.abrupt(\"return\", null);\n\n            case 12:\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return PartidoService;\n}();\n\nvar _default = PartidoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcnRpZG9TZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIlBhcnRpZG9TZXJ2aWNlIiwibnVldm9QYXJ0aWRvIiwiUGFydGlkbyIsImNyZWF0ZSIsImZpbmRBbGwiLCJpZF9wYXJ0aWRvIiwiZmluZEJ5UGsiLCJwYXJ0aWRvIiwiZGF0YVZhbHVlcyIsInBhcnRpZG9FeGlzdGVudGUiLCJ1cGRhdGUiLCJ3aGVyZSIsImFjdHVhbGl6YWRvIiwiZGVzdHJveSIsInBhcnRpZG9FbGltaW5hZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUdNQSxjOzs7Ozs7Ozs7bUNBQzBCQyxZOzs7Ozs7OzhDQUVYQyxvQkFBUUMsTUFBUixDQUFlRixZQUFmLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQVFBQyxvQkFBUUUsT0FBUixFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQU9XQyxVOzs7Ozs7Ozs4Q0FFRkgsb0JBQVFJLFFBQVIsQ0FBaUJELFVBQWpCLEM7OztBQUFoQkUsY0FBQUEsTztnREFFQ0EsT0FBTyxDQUFDQyxVOzs7Ozs7Ozs7Ozs7Ozs7O3NDQU9ZSCxVLEVBQVdFLE87Ozs7Ozs7OzhDQUVQTCxvQkFBUUksUUFBUixDQUFpQkQsVUFBakIsQzs7O0FBQXpCSSxjQUFBQSxnQjs7bUJBRUhBLGdCOzs7Ozs7OENBQ3lCUCxvQkFBUVEsTUFBUixDQUFlSCxPQUFmLEVBQXVCO0FBQUNJLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ04sa0JBQUFBLFVBQVUsRUFBQ0E7QUFBWjtBQUFQLGVBQXZCLEM7OztBQUFwQk8sY0FBQUEsVzs7b0JBRUhBLFdBQVcsSUFBRSxDOzs7OztnREFDUCxDOzs7Z0RBR0FMLE87Ozs7Ozs7Z0RBSUYsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBUWtCRixVOzs7Ozs7Ozs4Q0FFTUgsb0JBQVFJLFFBQVIsQ0FBaUJELFVBQWpCLEM7OztBQUF6QkksY0FBQUEsZ0I7O21CQUVIQSxnQjs7Ozs7OzhDQUM4QlAsb0JBQVFXLE9BQVIsQ0FBZ0I7QUFBQ0YsZ0JBQUFBLEtBQUssRUFBQztBQUFDTixrQkFBQUEsVUFBVSxFQUFDQTtBQUFaO0FBQVAsZUFBaEIsQzs7O0FBQXpCUyxjQUFBQSxnQjtnREFDQ0EsZ0I7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQVNGZCxjIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHNlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhcnRpZG8gZnJvbSAnLi4vbW9kZWxzL1BhcnRpZG8nO1xyXG5cclxuXHJcbmNsYXNzIFBhcnRpZG9TZXJ2aWNlIHsgXHJcbiAgICBzdGF0aWMgYXN5bmMgYWdyZWdhclBhcnRpZG8obnVldm9QYXJ0aWRvKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFBhcnRpZG8uY3JlYXRlKG51ZXZvUGFydGlkbyk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclBhcnRpZG9zKCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFBhcnRpZG8uZmluZEFsbCgpO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjsgICBcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclBhcnRpZG8oaWRfcGFydGlkbyl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcGFydGlkbyA9IGF3YWl0IFBhcnRpZG8uZmluZEJ5UGsoaWRfcGFydGlkbyk7XHJcblxyXG4gICAgICAgIHJldHVybiBwYXJ0aWRvLmRhdGFWYWx1ZXM7XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphclBhcnRpZG8oaWRfcGFydGlkbyxwYXJ0aWRvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBwYXJ0aWRvRXhpc3RlbnRlID0gYXdhaXQgUGFydGlkby5maW5kQnlQayhpZF9wYXJ0aWRvKTtcclxuXHJcbiAgICAgICAgaWYocGFydGlkb0V4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBjb25zdCBhY3R1YWxpemFkbyA9IGF3YWl0IFBhcnRpZG8udXBkYXRlKHBhcnRpZG8se3doZXJlOntpZF9wYXJ0aWRvOmlkX3BhcnRpZG99fSk7XHJcblxyXG4gICAgICAgICAgaWYoYWN0dWFsaXphZG89PTApeyAvL3NpIG5vIGhheSBjb2x1bW5hcyBhZmVjdGFkYXNcclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICByZXR1cm4gcGFydGlkbzsgXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN0YXRpYyBhc3luYyBlbGltaW5hclBhcnRpZG8oaWRfcGFydGlkbyl7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IHBhcnRpZG9FeGlzdGVudGUgPSBhd2FpdCBQYXJ0aWRvLmZpbmRCeVBrKGlkX3BhcnRpZG8pO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBpZihwYXJ0aWRvRXhpc3RlbnRlKXtcclxuICAgICAgICAgICAgY29uc3QgcGFydGlkb0VsaW1pbmFkbyA9IGF3YWl0IFBhcnRpZG8uZGVzdHJveSh7d2hlcmU6e2lkX3BhcnRpZG86aWRfcGFydGlkb319KTtcclxuICAgICAgICAgICAgcmV0dXJuIHBhcnRpZG9FbGltaW5hZG87IFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbn0gXHJcblxyXG4gIGV4cG9ydCBkZWZhdWx0IFBhcnRpZG9TZXJ2aWNlO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "PartidoService.js"
      ],
      "names": [
        "PartidoService",
        "nuevoPartido",
        "Partido",
        "create",
        "findAll",
        "id_partido",
        "findByPk",
        "partido",
        "dataValues",
        "partidoExistente",
        "update",
        "where",
        "actualizado",
        "destroy",
        "partidoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAGMA,c;;;;;;;;;mCAC0BC,Y;;;;;;;8CAEXC,oBAAQC,MAAR,CAAeF,YAAf,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,oBAAQE,OAAR,E;;;;;;;;;;;;;;;;;;;mCAOWC,U;;;;;;;;8CAEFH,oBAAQI,QAAR,CAAiBD,UAAjB,C;;;AAAhBE,cAAAA,O;gDAECA,OAAO,CAACC,U;;;;;;;;;;;;;;;;sCAOYH,U,EAAWE,O;;;;;;;;8CAEPL,oBAAQI,QAAR,CAAiBD,UAAjB,C;;;AAAzBI,cAAAA,gB;;mBAEHA,gB;;;;;;8CACyBP,oBAAQQ,MAAR,CAAeH,OAAf,EAAuB;AAACI,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,UAAU,EAACA;AAAZ;AAAP,eAAvB,C;;;AAApBO,cAAAA,W;;oBAEHA,WAAW,IAAE,C;;;;;gDACP,C;;;gDAGAL,O;;;;;;;gDAIF,I;;;;;;;;;;;;;;;;;;;;oCAQkBF,U;;;;;;;;8CAEMH,oBAAQI,QAAR,CAAiBD,UAAjB,C;;;AAAzBI,cAAAA,gB;;mBAEHA,gB;;;;;;8CAC8BP,oBAAQW,OAAR,CAAgB;AAACF,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,UAAU,EAACA;AAAZ;AAAP,eAAhB,C;;;AAAzBS,cAAAA,gB;gDACCA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASFd,c",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Partido from '../models/Partido';\r\n\r\n\r\nclass PartidoService { \r\n    static async agregarPartido(nuevoPartido) {\r\n      try {\r\n        return await Partido.create(nuevoPartido);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerPartidos(){\r\n      try {\r\n        return await Partido.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n    \r\n    static async obtenerPartido(id_partido){\r\n      try {\r\n        const partido = await Partido.findByPk(id_partido);\r\n\r\n        return partido.dataValues;\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n    static async actualizarPartido(id_partido,partido){\r\n      try {\r\n        const partidoExistente = await Partido.findByPk(id_partido);\r\n\r\n        if(partidoExistente){\r\n          const actualizado = await Partido.update(partido,{where:{id_partido:id_partido}});\r\n\r\n          if(actualizado==0){ //si no hay columnas afectadas\r\n            return 0;\r\n          }\r\n          else{\r\n            return partido; \r\n          }\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async eliminarPartido(id_partido){\r\n        try {\r\n          const partidoExistente = await Partido.findByPk(id_partido);\r\n          \r\n          if(partidoExistente){\r\n            const partidoEliminado = await Partido.destroy({where:{id_partido:id_partido}});\r\n            return partidoEliminado; \r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n} \r\n\r\n  export default PartidoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584453634722
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Partido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Partido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Partido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Partido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Partido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Categoria = _interopRequireDefault(require(\"./Categoria\"));\n\nvar _Equipo = _interopRequireDefault(require(\"./Equipo\"));\n\nvar _Persona = _interopRequireDefault(require(\"./Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Partido = _database.sequelize.define('Partido', {\n  id_partido: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  nro_fecha: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  goles_local: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  goles_visitante: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  jugado: {\n    type: _sequelize[\"default\"].BOOLEAN\n  },\n  id_categoria: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  id_equipo_local: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  id_equipo_visitante: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_arbitro: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_asistente: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nPartido.belongsTo(_Categoria[\"default\"], {\n  foreignKey: 'id_categoria',\n  as: 'categoria'\n});\nPartido.belongsTo(_Equipo[\"default\"], {\n  foreignKey: 'id_equipo_local',\n  as: 'equipoLocal'\n});\nPartido.belongsTo(_Equipo[\"default\"], {\n  foreignKey: 'id_equipo_visitante',\n  as: 'equipoVisitante'\n});\nPartido.belongsTo(_Persona[\"default\"], {\n  foreignKey: 'dni_arbitro',\n  as: 'arbitro'\n});\nPartido.belongsTo(_Persona[\"default\"], {\n  foreignKey: 'dni_asistente',\n  as: 'asistente'\n});\nvar _default = Partido;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcnRpZG8uanMiXSwibmFtZXMiOlsiUGFydGlkbyIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkX3BhcnRpZG8iLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwibnJvX2ZlY2hhIiwiVEVYVCIsImdvbGVzX2xvY2FsIiwiZ29sZXNfdmlzaXRhbnRlIiwianVnYWRvIiwiQk9PTEVBTiIsImlkX2NhdGVnb3JpYSIsImlkX2VxdWlwb19sb2NhbCIsImlkX2VxdWlwb192aXNpdGFudGUiLCJkbmlfYXJiaXRybyIsImRuaV9hc2lzdGVudGUiLCJ0aW1lc3RhbXBzIiwiZnJlZXplVGFibGVOYW1lIiwiYmVsb25nc1RvIiwiQ2F0ZWdvcmlhIiwiZm9yZWlnbktleSIsImFzIiwiRXF1aXBvIiwiUGVyc29uYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHQyxvQkFBVUMsTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUN4Q0MsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRFI7QUFFUkMsSUFBQUEsVUFBVSxFQUFFLElBRko7QUFHUkMsSUFBQUEsYUFBYSxFQUFFO0FBSFAsR0FENEI7QUFNeENDLEVBQUFBLFNBQVMsRUFBRTtBQUNQTCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSztBQURULEdBTjZCO0FBU3hDQyxFQUFBQSxXQUFXLEVBQUU7QUFDVFAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEUCxHQVQyQjtBQVl4Q00sRUFBQUEsZUFBZSxFQUFFO0FBQ2JSLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREgsR0FadUI7QUFleENPLEVBQUFBLE1BQU0sRUFBRTtBQUNKVCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVUztBQURaLEdBZmdDO0FBa0J4Q0MsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZYLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRE4sR0FsQjBCO0FBcUJ4Q1UsRUFBQUEsZUFBZSxFQUFFO0FBQ2JaLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREgsR0FyQnVCO0FBd0J4Q1csRUFBQUEsbUJBQW1CLEVBQUU7QUFDakJiLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREMsR0F4Qm1CO0FBMkJ4Q1ksRUFBQUEsV0FBVyxFQUFFO0FBQ1RkLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFAsR0EzQjJCO0FBOEJ4Q2EsRUFBQUEsYUFBYSxFQUFFO0FBQ1hmLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREw7QUE5QnlCLENBQTVCLEVBaUNiO0FBQ0NjLEVBQUFBLFVBQVUsRUFBRSxLQURiO0FBRUNDLEVBQUFBLGVBQWUsRUFBRTtBQUZsQixDQWpDYSxDQUFoQjs7QUFzQ0FyQixPQUFPLENBQUNzQixTQUFSLENBQWtCQyxxQkFBbEIsRUFBNEI7QUFBQ0MsRUFBQUEsVUFBVSxFQUFFLGNBQWI7QUFBNEJDLEVBQUFBLEVBQUUsRUFBQztBQUEvQixDQUE1QjtBQUNBekIsT0FBTyxDQUFDc0IsU0FBUixDQUFrQkksa0JBQWxCLEVBQXlCO0FBQUNGLEVBQUFBLFVBQVUsRUFBRSxpQkFBYjtBQUErQkMsRUFBQUEsRUFBRSxFQUFDO0FBQWxDLENBQXpCO0FBQ0F6QixPQUFPLENBQUNzQixTQUFSLENBQWtCSSxrQkFBbEIsRUFBeUI7QUFBQ0YsRUFBQUEsVUFBVSxFQUFFLHFCQUFiO0FBQW1DQyxFQUFBQSxFQUFFLEVBQUM7QUFBdEMsQ0FBekI7QUFDQXpCLE9BQU8sQ0FBQ3NCLFNBQVIsQ0FBa0JLLG1CQUFsQixFQUEwQjtBQUFDSCxFQUFBQSxVQUFVLEVBQUUsYUFBYjtBQUEyQkMsRUFBQUEsRUFBRSxFQUFDO0FBQTlCLENBQTFCO0FBQ0F6QixPQUFPLENBQUNzQixTQUFSLENBQWtCSyxtQkFBbEIsRUFBMEI7QUFBQ0gsRUFBQUEsVUFBVSxFQUFFLGVBQWI7QUFBNkJDLEVBQUFBLEVBQUUsRUFBQztBQUFoQyxDQUExQjtlQUVlekIsTyIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCB7c2VxdWVsaXplIH0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnO1xyXG5pbXBvcnQgQ2F0ZWdvcmlhIGZyb20gJy4vQ2F0ZWdvcmlhJztcclxuaW1wb3J0IEVxdWlwbyBmcm9tICcuL0VxdWlwbyc7XHJcbmltcG9ydCBQZXJzb25hIGZyb20gJy4vUGVyc29uYSc7XHJcblxyXG5jb25zdCBQYXJ0aWRvID0gc2VxdWVsaXplLmRlZmluZSgnUGFydGlkbycsIHtcclxuICAgIGlkX3BhcnRpZG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlLFxyXG4gICAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuICAgIH0sXHJcbiAgICBucm9fZmVjaGE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGdvbGVzX2xvY2FsOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBnb2xlc192aXNpdGFudGU6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGp1Z2Fkbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5CT09MRUFOXHJcbiAgICB9LFxyXG4gICAgaWRfY2F0ZWdvcmlhOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBpZF9lcXVpcG9fbG9jYWw6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGlkX2VxdWlwb192aXNpdGFudGU6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGRuaV9hcmJpdHJvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBkbmlfYXNpc3RlbnRlOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH1cclxufSwge1xyXG4gICAgdGltZXN0YW1wczogZmFsc2UsXHJcbiAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUsXHJcbn0pO1xyXG5cclxuUGFydGlkby5iZWxvbmdzVG8oQ2F0ZWdvcmlhLHtmb3JlaWduS2V5OiAnaWRfY2F0ZWdvcmlhJyxhczonY2F0ZWdvcmlhJ30pO1xyXG5QYXJ0aWRvLmJlbG9uZ3NUbyhFcXVpcG8se2ZvcmVpZ25LZXk6ICdpZF9lcXVpcG9fbG9jYWwnLGFzOidlcXVpcG9Mb2NhbCd9KTtcclxuUGFydGlkby5iZWxvbmdzVG8oRXF1aXBvLHtmb3JlaWduS2V5OiAnaWRfZXF1aXBvX3Zpc2l0YW50ZScsYXM6J2VxdWlwb1Zpc2l0YW50ZSd9KTtcclxuUGFydGlkby5iZWxvbmdzVG8oUGVyc29uYSx7Zm9yZWlnbktleTogJ2RuaV9hcmJpdHJvJyxhczonYXJiaXRybyd9KTtcclxuUGFydGlkby5iZWxvbmdzVG8oUGVyc29uYSx7Zm9yZWlnbktleTogJ2RuaV9hc2lzdGVudGUnLGFzOidhc2lzdGVudGUnfSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQYXJ0aWRvOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Partido.js"
      ],
      "names": [
        "Partido",
        "sequelize",
        "define",
        "id_partido",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "nro_fecha",
        "TEXT",
        "goles_local",
        "goles_visitante",
        "jugado",
        "BOOLEAN",
        "id_categoria",
        "id_equipo_local",
        "id_equipo_visitante",
        "dni_arbitro",
        "dni_asistente",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Categoria",
        "foreignKey",
        "as",
        "Equipo",
        "Persona"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAEC,sBAAUC,OADR;AAERC,IAAAA,UAAU,EAAE,IAFJ;AAGRC,IAAAA,aAAa,EAAE;AAHP,GAD4B;AAMxCC,EAAAA,SAAS,EAAE;AACPL,IAAAA,IAAI,EAAEC,sBAAUK;AADT,GAN6B;AASxCC,EAAAA,WAAW,EAAE;AACTP,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GAT2B;AAYxCM,EAAAA,eAAe,EAAE;AACbR,IAAAA,IAAI,EAAEC,sBAAUC;AADH,GAZuB;AAexCO,EAAAA,MAAM,EAAE;AACJT,IAAAA,IAAI,EAAEC,sBAAUS;AADZ,GAfgC;AAkBxCC,EAAAA,YAAY,EAAE;AACVX,IAAAA,IAAI,EAAEC,sBAAUC;AADN,GAlB0B;AAqBxCU,EAAAA,eAAe,EAAE;AACbZ,IAAAA,IAAI,EAAEC,sBAAUC;AADH,GArBuB;AAwBxCW,EAAAA,mBAAmB,EAAE;AACjBb,IAAAA,IAAI,EAAEC,sBAAUC;AADC,GAxBmB;AA2BxCY,EAAAA,WAAW,EAAE;AACTd,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GA3B2B;AA8BxCa,EAAAA,aAAa,EAAE;AACXf,IAAAA,IAAI,EAAEC,sBAAUC;AADL;AA9ByB,CAA5B,EAiCb;AACCc,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAjCa,CAAhB;;AAsCArB,OAAO,CAACsB,SAAR,CAAkBC,qBAAlB,EAA4B;AAACC,EAAAA,UAAU,EAAE,cAAb;AAA4BC,EAAAA,EAAE,EAAC;AAA/B,CAA5B;AACAzB,OAAO,CAACsB,SAAR,CAAkBI,kBAAlB,EAAyB;AAACF,EAAAA,UAAU,EAAE,iBAAb;AAA+BC,EAAAA,EAAE,EAAC;AAAlC,CAAzB;AACAzB,OAAO,CAACsB,SAAR,CAAkBI,kBAAlB,EAAyB;AAACF,EAAAA,UAAU,EAAE,qBAAb;AAAmCC,EAAAA,EAAE,EAAC;AAAtC,CAAzB;AACAzB,OAAO,CAACsB,SAAR,CAAkBK,mBAAlB,EAA0B;AAACH,EAAAA,UAAU,EAAE,aAAb;AAA2BC,EAAAA,EAAE,EAAC;AAA9B,CAA1B;AACAzB,OAAO,CAACsB,SAAR,CAAkBK,mBAAlB,EAA0B;AAACH,EAAAA,UAAU,EAAE,eAAb;AAA6BC,EAAAA,EAAE,EAAC;AAAhC,CAA1B;eAEezB,O",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize } from '../database/database';\r\nimport Categoria from './Categoria';\r\nimport Equipo from './Equipo';\r\nimport Persona from './Persona';\r\n\r\nconst Partido = sequelize.define('Partido', {\r\n    id_partido: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    nro_fecha: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    goles_local: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    goles_visitante: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    jugado: {\r\n        type: Sequelize.BOOLEAN\r\n    },\r\n    id_categoria: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    id_equipo_local: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    id_equipo_visitante: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_arbitro: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_asistente: {\r\n        type: Sequelize.INTEGER\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nPartido.belongsTo(Categoria,{foreignKey: 'id_categoria',as:'categoria'});\r\nPartido.belongsTo(Equipo,{foreignKey: 'id_equipo_local',as:'equipoLocal'});\r\nPartido.belongsTo(Equipo,{foreignKey: 'id_equipo_visitante',as:'equipoVisitante'});\r\nPartido.belongsTo(Persona,{foreignKey: 'dni_arbitro',as:'arbitro'});\r\nPartido.belongsTo(Persona,{foreignKey: 'dni_asistente',as:'asistente'});\r\n\r\nexport default Partido;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142506
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Jugador_integra_Lista.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Jugador_integra_Lista.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Jugador_integra_Lista.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Jugador_integra_Lista.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Jugador_integra_Lista.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Jugador_integra_Lista = _database.sequelize.define('Jugador_integra_Lista', {\n  dni_jugador: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  id_lista: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Jugador_integra_Lista;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3JfaW50ZWdyYV9MaXN0YS5qcyJdLCJuYW1lcyI6WyJKdWdhZG9yX2ludGVncmFfTGlzdGEiLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJkbmlfanVnYWRvciIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImlkX2xpc3RhIiwidGltZXN0YW1wcyIsImZyZWV6ZVRhYmxlTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRG1DO0FBR25DLElBQU1BLHFCQUFxQixHQUFHQyxvQkFBVUMsTUFBVixDQUFpQix1QkFBakIsRUFBMEM7QUFDaEVDLEVBQUFBLFdBQVcsRUFBRTtBQUNUQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURQO0FBRVRDLElBQUFBLFVBQVUsRUFBRTtBQUZILEdBRG1EO0FBS2hFQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEVjtBQUVOQyxJQUFBQSxVQUFVLEVBQUM7QUFGTDtBQUxzRCxDQUExQyxFQVN2QjtBQUNDRSxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FUdUIsQ0FBOUI7O2VBZWVWLHFCIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcFxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJzsgLy8gY2xhc2UgU2VxdWVsaXplXHJcbmltcG9ydCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJyAvL2NvbmV4aW9uIGEgbGEgYmFzZVxyXG5cclxuY29uc3QgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhID0gc2VxdWVsaXplLmRlZmluZSgnSnVnYWRvcl9pbnRlZ3JhX0xpc3RhJywge1xyXG4gICAgICAgIGRuaV9qdWdhZG9yOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICAgICAgfSwgXHJcbiAgICAgICAgaWRfbGlzdGE6IHtcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgICAgIHByaW1hcnlLZXk6dHJ1ZVxyXG4gICAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgICAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUgXHJcbiAgICB9XHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBKdWdhZG9yX2ludGVncmFfTGlzdGE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Jugador_integra_Lista.js"
      ],
      "names": [
        "Jugador_integra_Lista",
        "sequelize",
        "define",
        "dni_jugador",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "id_lista",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,qBAAqB,GAAGC,oBAAUC,MAAV,CAAiB,uBAAjB,EAA0C;AAChEC,EAAAA,WAAW,EAAE;AACTC,IAAAA,IAAI,EAAEC,sBAAUC,OADP;AAETC,IAAAA,UAAU,EAAE;AAFH,GADmD;AAKhEC,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,IAAI,EAAEC,sBAAUC,OADV;AAENC,IAAAA,UAAU,EAAC;AAFL;AALsD,CAA1C,EASvB;AACCE,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CATuB,CAA9B;;eAeeV,qB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Jugador_integra_Lista = sequelize.define('Jugador_integra_Lista', {\r\n        dni_jugador: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey: true\r\n        }, \r\n        id_lista: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey:true\r\n        }\r\n    }, {\r\n        timestamps: false,\r\n        freezeTableName: true \r\n    }\r\n);\r\n\r\nexport default Jugador_integra_Lista;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142505
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\Jugador_integra_ListaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\Jugador_integra_ListaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\Jugador_integra_ListaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\Jugador_integra_ListaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "Jugador_integra_ListaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Jugador = _interopRequireDefault(require(\"../models/Jugador\"));\n\nvar _Jugador_integra_Lista = _interopRequireDefault(require(\"../models/Jugador_integra_Lista\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"../models/ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Jugador_integra_ListaService =\n/*#__PURE__*/\nfunction () {\n  function Jugador_integra_ListaService() {\n    _classCallCheck(this, Jugador_integra_ListaService);\n  }\n\n  _createClass(Jugador_integra_ListaService, null, [{\n    key: \"agregarJugadoresEnLista\",\n    value: function agregarJugadoresEnLista(id_lista, jugadores) {\n      var jugadores_lista, i, jugador, dni, operacion;\n      return regeneratorRuntime.async(function agregarJugadoresEnLista$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //recibe una lista de jugadores \n              jugadores_lista = [];\n\n              for (i in jugadores) {\n                jugador = jugadores[i];\n                dni = jugador.dni;\n                jugadores_lista.push({\n                  dni_jugador: dni,\n                  id_lista: id_lista\n                }); //creamos las tuplas (dni_jugador, id_lista) \n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].bulkCreate(jugadores_lista, {\n                returning: true\n              }));\n\n            case 5:\n              operacion = _context.sent;\n              return _context.abrupt(\"return\", operacion);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              throw new Error(_context.t0.message + _context.t0.parent.detail);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 9]]);\n    }\n  }, {\n    key: \"eliminarJugadorEnLista\",\n    value: function eliminarJugadorEnLista(id_lista, dni_jugador) {\n      var jugadorEliminado;\n      return regeneratorRuntime.async(function eliminarJugadorEnLista$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].destroy({\n                where: {\n                  id_lista: id_lista,\n                  dni_jugador: dni_jugador\n                }\n              }));\n\n            case 3:\n              jugadorEliminado = _context2.sent;\n\n              if (!jugadorEliminado) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", jugadorEliminado);\n\n            case 8:\n              return _context2.abrupt(\"return\", null);\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n    /*    static async obtenerJugador(dni){\r\n          try {\r\n            const jugador = await Jugador.findByPk(dni);\r\n            return jugador; \r\n          }\r\n           catch (error) {\r\n             throw error;\r\n            }\r\n          }\r\n        \r\n        static async actualizarJugador(dni,jugador){\r\n          try {\r\n            const jugadorExistente = await Jugador.findByPk(dni);\r\n    \r\n            if(jugadorExistente){\r\n              await Jugador.update(jugador,{where:{dni:dni}});\r\n              return jugador; \r\n            }\r\n            else{\r\n              return null;\r\n            }\r\n          }\r\n           catch (error) {\r\n             throw error;\r\n            }\r\n          }\r\n          \r\n        static async eliminarJugador(dni){\r\n          try {\r\n            const jugadorExistente = await Jugador.findByPk(dni);\r\n    \r\n            if(jugadorExistente){\r\n              const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n              return jugadorEliminado; \r\n            }\r\n            else{\r\n              return null;\r\n            }\r\n          }\r\n          catch (error) {\r\n            throw error;\r\n          }\r\n        } */\n\n  }]);\n\n  return Jugador_integra_ListaService;\n}();\n\nvar _default = Jugador_integra_ListaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3JfaW50ZWdyYV9MaXN0YVNlcnZpY2UuanMiXSwibmFtZXMiOlsiSnVnYWRvcl9pbnRlZ3JhX0xpc3RhU2VydmljZSIsImlkX2xpc3RhIiwianVnYWRvcmVzIiwianVnYWRvcmVzX2xpc3RhIiwiaSIsImp1Z2Fkb3IiLCJkbmkiLCJwdXNoIiwiZG5pX2p1Z2Fkb3IiLCJKdWdhZG9yX2ludGVncmFfTGlzdGEiLCJidWxrQ3JlYXRlIiwicmV0dXJuaW5nIiwib3BlcmFjaW9uIiwiRXJyb3IiLCJtZXNzYWdlIiwicGFyZW50IiwiZGV0YWlsIiwiZGVzdHJveSIsIndoZXJlIiwianVnYWRvckVsaW1pbmFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7O0lBRU1BLDRCOzs7Ozs7Ozs7NENBQ21DQyxRLEVBQVNDLFM7Ozs7OztBQUFnQjtBQUN0REMsY0FBQUEsZSxHQUFrQixFOztBQUN6QixtQkFBU0MsQ0FBVCxJQUFjRixTQUFkLEVBQXdCO0FBQ2hCRyxnQkFBQUEsT0FEZ0IsR0FDTkgsU0FBUyxDQUFDRSxDQUFELENBREg7QUFFaEJFLGdCQUFBQSxHQUZnQixHQUVWRCxPQUFPLENBQUNDLEdBRkU7QUFHdEJILGdCQUFBQSxlQUFlLENBQUNJLElBQWhCLENBQXFCO0FBQUNDLGtCQUFBQSxXQUFXLEVBQUNGLEdBQWI7QUFBaUJMLGtCQUFBQSxRQUFRLEVBQUNBO0FBQTFCLGlCQUFyQixFQUhzQixDQUdxQztBQUMzRDs7Ozs4Q0FHdUJRLGtDQUFzQkMsVUFBdEIsQ0FBaUNQLGVBQWpDLEVBQWlEO0FBQUNRLGdCQUFBQSxTQUFTLEVBQUM7QUFBWCxlQUFqRCxDOzs7QUFBbEJDLGNBQUFBLFM7K0NBRUNBLFM7Ozs7O29CQUdELElBQUlDLEtBQUosQ0FBVSxZQUFNQyxPQUFOLEdBQWdCLFlBQU1DLE1BQU4sQ0FBYUMsTUFBdkMsQzs7Ozs7Ozs7Ozs7MkNBSTBCZixRLEVBQVVPLFc7Ozs7Ozs7OzhDQUVYQyxrQ0FBc0JRLE9BQXRCLENBQThCO0FBQUNDLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ2pCLGtCQUFBQSxRQUFRLEVBQUNBLFFBQVY7QUFBbUJPLGtCQUFBQSxXQUFXLEVBQUNBO0FBQS9CO0FBQVAsZUFBOUIsQzs7O0FBQXpCVyxjQUFBQSxnQjs7bUJBQ0hBLGdCOzs7OztnREFDTUEsZ0I7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFZZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQTZDaUJuQiw0QiIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKdWdhZG9yIGZyb20gJy4uL21vZGVscy9KdWdhZG9yJztcclxuaW1wb3J0IEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YSBmcm9tICcuLi9tb2RlbHMvSnVnYWRvcl9pbnRlZ3JhX0xpc3RhJztcclxuaW1wb3J0IExpc3RhSW5zY3JpcGNpb24gZnJvbSAnLi4vbW9kZWxzL0xpc3RhSW5zY3JpcGNpb24nO1xyXG5cclxuY2xhc3MgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhU2VydmljZSB7ICBcclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FySnVnYWRvcmVzRW5MaXN0YShpZF9saXN0YSxqdWdhZG9yZXMpIHsgICAgLy9yZWNpYmUgdW5hIGxpc3RhIGRlIGp1Z2Fkb3JlcyBcclxuICAgICAgY29uc3QganVnYWRvcmVzX2xpc3RhID0gW107XHJcbiAgICAgZm9yICh2YXIgaSBpbiBqdWdhZG9yZXMpe1xyXG4gICAgICAgY29uc3QganVnYWRvciA9IGp1Z2Fkb3Jlc1tpXTtcclxuICAgICAgIGNvbnN0IGRuaSA9IGp1Z2Fkb3IuZG5pO1xyXG4gICAgICAganVnYWRvcmVzX2xpc3RhLnB1c2goe2RuaV9qdWdhZG9yOmRuaSxpZF9saXN0YTppZF9saXN0YX0pOyAvL2NyZWFtb3MgbGFzIHR1cGxhcyAoZG5pX2p1Z2Fkb3IsIGlkX2xpc3RhKSBcclxuICAgICAgfVxyXG5cclxuICAgIHRyeXtcclxuICAgICAgY29uc3Qgb3BlcmFjaW9uID0gYXdhaXQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhLmJ1bGtDcmVhdGUoanVnYWRvcmVzX2xpc3RhLHtyZXR1cm5pbmc6dHJ1ZX0pO1xyXG4gICAgICAvL2FuZHV2byBvayEgZWwgdGVtYSBlcyBzaSBsYXMgdHVwbGFzIGxhIGFybW8gZGUgZXN0ZSBsYWRvIG8gdGllbmUgcXVlIHZlbmlyIGFzw60gZGVsIGZyb250LWVuZFxyXG4gICAgICByZXR1cm4gb3BlcmFjaW9uO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGVycm9yKXtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UgKyBlcnJvci5wYXJlbnQuZGV0YWlsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBlbGltaW5hckp1Z2Fkb3JFbkxpc3RhKGlkX2xpc3RhLCBkbmlfanVnYWRvcil7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBqdWdhZG9yRWxpbWluYWRvID0gYXdhaXQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhLmRlc3Ryb3koe3doZXJlOntpZF9saXN0YTppZF9saXN0YSxkbmlfanVnYWRvcjpkbmlfanVnYWRvcn19KTtcclxuICAgICAgaWYoanVnYWRvckVsaW1pbmFkbyl7XHJcbiAgICAgICAgcmV0dXJuIGp1Z2Fkb3JFbGltaW5hZG87XHJcbiAgICAgIH1cclxuICAgICAgZWxzZXtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxuICBcclxuXHJcbi8qICAgIHN0YXRpYyBhc3luYyBvYnRlbmVySnVnYWRvcihkbmkpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGp1Z2Fkb3IgPSBhd2FpdCBKdWdhZG9yLmZpbmRCeVBrKGRuaSk7XHJcbiAgICAgICAgcmV0dXJuIGp1Z2Fkb3I7IFxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFySnVnYWRvcihkbmksanVnYWRvcil7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QganVnYWRvckV4aXN0ZW50ZSA9IGF3YWl0IEp1Z2Fkb3IuZmluZEJ5UGsoZG5pKTtcclxuXHJcbiAgICAgICAgaWYoanVnYWRvckV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBhd2FpdCBKdWdhZG9yLnVwZGF0ZShqdWdhZG9yLHt3aGVyZTp7ZG5pOmRuaX19KTtcclxuICAgICAgICAgIHJldHVybiBqdWdhZG9yOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBcclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hckp1Z2Fkb3IoZG5pKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBqdWdhZG9yRXhpc3RlbnRlID0gYXdhaXQgSnVnYWRvci5maW5kQnlQayhkbmkpO1xyXG5cclxuICAgICAgICBpZihqdWdhZG9yRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGNvbnN0IGp1Z2Fkb3JFbGltaW5hZG8gPSBhd2FpdCBKdWdhZG9yLmRlc3Ryb3koe3doZXJlOntkbmk6ZG5pfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIGp1Z2Fkb3JFbGltaW5hZG87IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9ICovXHJcbn0gXHJcbiAgXHJcbiAgZXhwb3J0IGRlZmF1bHQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Jugador_integra_ListaService.js"
      ],
      "names": [
        "Jugador_integra_ListaService",
        "id_lista",
        "jugadores",
        "jugadores_lista",
        "i",
        "jugador",
        "dni",
        "push",
        "dni_jugador",
        "Jugador_integra_Lista",
        "bulkCreate",
        "returning",
        "operacion",
        "Error",
        "message",
        "parent",
        "detail",
        "destroy",
        "where",
        "jugadorEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEMA,4B;;;;;;;;;4CACmCC,Q,EAASC,S;;;;;;AAAgB;AACtDC,cAAAA,e,GAAkB,E;;AACzB,mBAASC,CAAT,IAAcF,SAAd,EAAwB;AAChBG,gBAAAA,OADgB,GACNH,SAAS,CAACE,CAAD,CADH;AAEhBE,gBAAAA,GAFgB,GAEVD,OAAO,CAACC,GAFE;AAGtBH,gBAAAA,eAAe,CAACI,IAAhB,CAAqB;AAACC,kBAAAA,WAAW,EAACF,GAAb;AAAiBL,kBAAAA,QAAQ,EAACA;AAA1B,iBAArB,EAHsB,CAGqC;AAC3D;;;;8CAGuBQ,kCAAsBC,UAAtB,CAAiCP,eAAjC,EAAiD;AAACQ,gBAAAA,SAAS,EAAC;AAAX,eAAjD,C;;;AAAlBC,cAAAA,S;+CAECA,S;;;;;oBAGD,IAAIC,KAAJ,CAAU,YAAMC,OAAN,GAAgB,YAAMC,MAAN,CAAaC,MAAvC,C;;;;;;;;;;;2CAI0Bf,Q,EAAUO,W;;;;;;;;8CAEXC,kCAAsBQ,OAAtB,CAA8B;AAACC,gBAAAA,KAAK,EAAC;AAACjB,kBAAAA,QAAQ,EAACA,QAAV;AAAmBO,kBAAAA,WAAW,EAACA;AAA/B;AAAP,eAA9B,C;;;AAAzBW,cAAAA,gB;;mBACHA,gB;;;;;gDACMA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;AAYf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA6CiBnB,4B",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Jugador from '../models/Jugador';\r\nimport Jugador_integra_Lista from '../models/Jugador_integra_Lista';\r\nimport ListaInscripcion from '../models/ListaInscripcion';\r\n\r\nclass Jugador_integra_ListaService {  \r\n    static async agregarJugadoresEnLista(id_lista,jugadores) {    //recibe una lista de jugadores \r\n      const jugadores_lista = [];\r\n     for (var i in jugadores){\r\n       const jugador = jugadores[i];\r\n       const dni = jugador.dni;\r\n       jugadores_lista.push({dni_jugador:dni,id_lista:id_lista}); //creamos las tuplas (dni_jugador, id_lista) \r\n      }\r\n\r\n    try{\r\n      const operacion = await Jugador_integra_Lista.bulkCreate(jugadores_lista,{returning:true});\r\n      //anduvo ok! el tema es si las tuplas la armo de este lado o tiene que venir así del front-end\r\n      return operacion;\r\n    }\r\n    catch (error){\r\n      throw new Error(error.message + error.parent.detail);\r\n    }\r\n  }\r\n\r\n  static async eliminarJugadorEnLista(id_lista, dni_jugador){\r\n    try {\r\n      const jugadorEliminado = await Jugador_integra_Lista.destroy({where:{id_lista:id_lista,dni_jugador:dni_jugador}});\r\n      if(jugadorEliminado){\r\n        return jugadorEliminado;\r\n      }\r\n      else{\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n/*    static async obtenerJugador(dni){\r\n      try {\r\n        const jugador = await Jugador.findByPk(dni);\r\n        return jugador; \r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n    \r\n    static async actualizarJugador(dni,jugador){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          await Jugador.update(jugador,{where:{dni:dni}});\r\n          return jugador; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarJugador(dni){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n          return jugadorEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    } */\r\n} \r\n  \r\n  export default Jugador_integra_ListaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595816935874
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Categoria_contiene_Equipo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Categoria_contiene_Equipo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Categoria_contiene_Equipo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\models\\Categoria_contiene_Equipo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Categoria_contiene_Equipo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Categoria_contiene_Equipo = _database.sequelize.define('Categoria_contiene_Equipo', {\n  id_equipo: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  id_categoria: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Categoria_contiene_Equipo;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpYV9jb250aWVuZV9FcXVpcG8uanMiXSwibmFtZXMiOlsiQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkX2VxdWlwbyIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImlkX2NhdGVnb3JpYSIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQURtQztBQUduQyxJQUFNQSx5QkFBeUIsR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsMkJBQWpCLEVBQThDO0FBQ3hFQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEVDtBQUVQQyxJQUFBQSxVQUFVLEVBQUU7QUFGTCxHQUQ2RDtBQUt4RUMsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZKLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRE47QUFFVkMsSUFBQUEsVUFBVSxFQUFDO0FBRkQ7QUFMMEQsQ0FBOUMsRUFTM0I7QUFDQ0UsRUFBQUEsVUFBVSxFQUFFLEtBRGI7QUFFQ0MsRUFBQUEsZUFBZSxFQUFFO0FBRmxCLENBVDJCLENBQWxDOztlQWVlVix5QiIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHBcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IC8vIGNsYXNlIFNlcXVlbGl6ZVxyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZScgLy9jb25leGlvbiBhIGxhIGJhc2VcclxuXHJcbmNvbnN0IENhdGVnb3JpYV9jb250aWVuZV9FcXVpcG8gPSBzZXF1ZWxpemUuZGVmaW5lKCdDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvJywge1xyXG4gICAgICAgIGlkX2VxdWlwbzoge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkX2NhdGVnb3JpYToge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICAgICAgcHJpbWFyeUtleTp0cnVlXHJcbiAgICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxyXG4gICAgICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSBcclxuICAgIH1cclxuKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhdGVnb3JpYV9jb250aWVuZV9FcXVpcG87Il19",
    "map": {
      "version": 3,
      "sources": [
        "Categoria_contiene_Equipo.js"
      ],
      "names": [
        "Categoria_contiene_Equipo",
        "sequelize",
        "define",
        "id_equipo",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "id_categoria",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,yBAAyB,GAAGC,oBAAUC,MAAV,CAAiB,2BAAjB,EAA8C;AACxEC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAEC,sBAAUC,OADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GAD6D;AAKxEC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,IAAI,EAAEC,sBAAUC,OADN;AAEVC,IAAAA,UAAU,EAAC;AAFD;AAL0D,CAA9C,EAS3B;AACCE,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAT2B,CAAlC;;eAeeV,yB",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Categoria_contiene_Equipo = sequelize.define('Categoria_contiene_Equipo', {\r\n        id_equipo: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey: true\r\n        }, \r\n        id_categoria: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey:true\r\n        }\r\n    }, {\r\n        timestamps: false,\r\n        freezeTableName: true \r\n    }\r\n);\r\n\r\nexport default Categoria_contiene_Equipo;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142504
  },
  "{\"sourceRoot\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\Categoria_contiene_EquipoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp\\htdocs\\api-futsal",
      "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\Categoria_contiene_EquipoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\Categoria_contiene_EquipoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp\\htdocs\\api-futsal\\src\\services\\Categoria_contiene_EquipoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "Categoria_contiene_EquipoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Categoria_contiene_Equipo = _interopRequireDefault(require(\"../models/Categoria_contiene_Equipo\"));\n\nvar _CategoriaService = _interopRequireDefault(require(\"./CategoriaService\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Categoria_contiene_EquipoService =\n/*#__PURE__*/\nfunction () {\n  function Categoria_contiene_EquipoService() {\n    _classCallCheck(this, Categoria_contiene_EquipoService);\n  }\n\n  _createClass(Categoria_contiene_EquipoService, null, [{\n    key: \"agregarEquipos\",\n\n    /* function agregarEquipos2(id_categoria,equipos) {\r\n      return Promise.all(equipos.map(async (equipo) => {\r\n          let id_equipo = equipo.id_equipo;\r\n            await Categoria_contiene_Equipo.create({id_equipo:id_equipo,id_categoria:id_categoria});\r\n      }));\r\n    }\r\n    function createObjects(id_categoria,equipos) {\r\n      return Promise.all(\r\n          equipos.map(({ Categoria_contiene_Equipo }) => agregarEquipos2(id_categoria,equipos))\r\n      );\r\n    } */\n    value: function agregarEquipos(id_categoria, equipos) {\n      var lista, i, equipo, id_equipo;\n      return regeneratorRuntime.async(function agregarEquipos$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log(\"EL json completo\",jugadores.jugadores);\n              lista = equipos.equipos;\n              _context.prev = 1;\n              _context.t0 = regeneratorRuntime.keys(lista);\n\n            case 3:\n              if ((_context.t1 = _context.t0()).done) {\n                _context.next = 11;\n                break;\n              }\n\n              i = _context.t1.value;\n              equipo = lista[i];\n              id_equipo = equipo.id_equipo;\n              _context.next = 9;\n              return regeneratorRuntime.awrap(_Categoria_contiene_Equipo[\"default\"].create({\n                id_equipo: id_equipo,\n                id_categoria: id_categoria\n              }));\n\n            case 9:\n              _context.next = 3;\n              break;\n\n            case 11:\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t2 = _context[\"catch\"](1);\n              throw _context.t2;\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos(id_categoria) {\n      var equipos;\n      return regeneratorRuntime.async(function obtenerEquipos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Categoria_contiene_Equipo[\"default\"].findAll({\n                raw: true,\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 3:\n              equipos = _context2.sent;\n              return _context2.abrupt(\"return\", equipos);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n    /*\r\n    static async actualizarJugador(dni,jugador){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n          if(jugadorExistente){\r\n          await Jugador.update(jugador,{where:{dni:dni}});\r\n          return jugador; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarJugador(dni){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n          if(jugadorExistente){\r\n          const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n          return jugadorEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    } */\n\n  }]);\n\n  return Categoria_contiene_EquipoService;\n}();\n\nvar _default = Categoria_contiene_EquipoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpYV9jb250aWVuZV9FcXVpcG9TZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIkNhdGVnb3JpYV9jb250aWVuZV9FcXVpcG9TZXJ2aWNlIiwiaWRfY2F0ZWdvcmlhIiwiZXF1aXBvcyIsImxpc3RhIiwiaSIsImVxdWlwbyIsImlkX2VxdWlwbyIsIkNhdGVnb3JpYV9jb250aWVuZV9FcXVpcG8iLCJjcmVhdGUiLCJmaW5kQWxsIiwicmF3Iiwid2hlcmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7OztJQUdNQSxnQzs7Ozs7Ozs7OztBQUVKOzs7Ozs7Ozs7OzttQ0FnQjhCQyxZLEVBQWFDLE87Ozs7OztBQUN4QztBQUNLQyxjQUFBQSxLLEdBQVFELE9BQU8sQ0FBQ0EsTzs7b0RBRUpDLEs7Ozs7Ozs7O0FBQUxDLGNBQUFBLEM7QUFDREMsY0FBQUEsTSxHQUFTRixLQUFLLENBQUNDLENBQUQsQztBQUNkRSxjQUFBQSxTLEdBQVlELE1BQU0sQ0FBQ0MsUzs7OENBQ25CQyxzQ0FBMEJDLE1BQTFCLENBQWlDO0FBQUNGLGdCQUFBQSxTQUFTLEVBQUNBLFNBQVg7QUFBcUJMLGdCQUFBQSxZQUFZLEVBQUNBO0FBQWxDLGVBQWpDLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQ0FRZ0JBLFk7Ozs7Ozs7OzhDQUVGTSxzQ0FBMEJFLE9BQTFCLENBQWtDO0FBQUNDLGdCQUFBQSxHQUFHLEVBQUMsSUFBTDtBQUFVQyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNWLGtCQUFBQSxZQUFZLEVBQUNBO0FBQWQ7QUFBaEIsZUFBbEMsQzs7O0FBQWhCQyxjQUFBQSxPO2dEQUVDQSxPOzs7Ozs7Ozs7Ozs7OztBQU1YOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQW9DYUYsZ0MiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyBmcm9tICcuLi9tb2RlbHMvQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyc7XHJcbmltcG9ydCBDYXRlZ29yaWFTZXJ2aWNlIGZyb20gJy4vQ2F0ZWdvcmlhU2VydmljZSc7XHJcblxyXG5cclxuY2xhc3MgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwb1NlcnZpY2Uge1xyXG4gIFxyXG4gIC8qIGZ1bmN0aW9uIGFncmVnYXJFcXVpcG9zMihpZF9jYXRlZ29yaWEsZXF1aXBvcykge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKGVxdWlwb3MubWFwKGFzeW5jIChlcXVpcG8pID0+IHtcclxuICAgICAgICBsZXQgaWRfZXF1aXBvID0gZXF1aXBvLmlkX2VxdWlwbztcclxuXHJcbiAgICAgICAgYXdhaXQgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwby5jcmVhdGUoe2lkX2VxdWlwbzppZF9lcXVpcG8saWRfY2F0ZWdvcmlhOmlkX2NhdGVnb3JpYX0pO1xyXG4gICAgfSkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVPYmplY3RzKGlkX2NhdGVnb3JpYSxlcXVpcG9zKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoXHJcbiAgICAgICAgZXF1aXBvcy5tYXAoKHsgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyB9KSA9PiBhZ3JlZ2FyRXF1aXBvczIoaWRfY2F0ZWdvcmlhLGVxdWlwb3MpKVxyXG4gICAgKTtcclxufSAqL1xyXG5cclxuXHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGFncmVnYXJFcXVpcG9zKGlkX2NhdGVnb3JpYSxlcXVpcG9zKSB7ICAgIFxyXG4gICAgIC8vIGNvbnNvbGUubG9nKFwiRUwganNvbiBjb21wbGV0b1wiLGp1Z2Fkb3Jlcy5qdWdhZG9yZXMpO1xyXG4gICAgICB2YXIgbGlzdGEgPSBlcXVpcG9zLmVxdWlwb3M7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiBsaXN0YSl7XHJcbiAgICAgICAgICBjb25zdCBlcXVpcG8gPSBsaXN0YVtpXTtcclxuICAgICAgICAgIGNvbnN0IGlkX2VxdWlwbyA9IGVxdWlwby5pZF9lcXVpcG87XHJcbiAgICAgICAgICBhd2FpdCBDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvLmNyZWF0ZSh7aWRfZXF1aXBvOmlkX2VxdWlwbyxpZF9jYXRlZ29yaWE6aWRfY2F0ZWdvcmlhfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckVxdWlwb3MoaWRfY2F0ZWdvcmlhKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBlcXVpcG9zID0gYXdhaXQgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwby5maW5kQWxsKHtyYXc6dHJ1ZSx3aGVyZTp7aWRfY2F0ZWdvcmlhOmlkX2NhdGVnb3JpYX19KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGVxdWlwb3M7IFxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAvKlxyXG4gICAgc3RhdGljIGFzeW5jIGFjdHVhbGl6YXJKdWdhZG9yKGRuaSxqdWdhZG9yKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBqdWdhZG9yRXhpc3RlbnRlID0gYXdhaXQgSnVnYWRvci5maW5kQnlQayhkbmkpO1xyXG5cclxuICAgICAgICBpZihqdWdhZG9yRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGF3YWl0IEp1Z2Fkb3IudXBkYXRlKGp1Z2Fkb3Ise3doZXJlOntkbmk6ZG5pfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIGp1Z2Fkb3I7IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgc3RhdGljIGFzeW5jIGVsaW1pbmFySnVnYWRvcihkbmkpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGp1Z2Fkb3JFeGlzdGVudGUgPSBhd2FpdCBKdWdhZG9yLmZpbmRCeVBrKGRuaSk7XHJcblxyXG4gICAgICAgIGlmKGp1Z2Fkb3JFeGlzdGVudGUpe1xyXG4gICAgICAgICAgY29uc3QganVnYWRvckVsaW1pbmFkbyA9IGF3YWl0IEp1Z2Fkb3IuZGVzdHJveSh7d2hlcmU6e2RuaTpkbml9fSk7XHJcbiAgICAgICAgICByZXR1cm4ganVnYWRvckVsaW1pbmFkbzsgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH0gKi9cclxufSBcclxuICBcclxuICBleHBvcnQgZGVmYXVsdCBDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Categoria_contiene_EquipoService.js"
      ],
      "names": [
        "Categoria_contiene_EquipoService",
        "id_categoria",
        "equipos",
        "lista",
        "i",
        "equipo",
        "id_equipo",
        "Categoria_contiene_Equipo",
        "create",
        "findAll",
        "raw",
        "where"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;IAGMA,gC;;;;;;;;;;AAEJ;;;;;;;;;;;mCAgB8BC,Y,EAAaC,O;;;;;;AACxC;AACKC,cAAAA,K,GAAQD,OAAO,CAACA,O;;oDAEJC,K;;;;;;;;AAALC,cAAAA,C;AACDC,cAAAA,M,GAASF,KAAK,CAACC,CAAD,C;AACdE,cAAAA,S,GAAYD,MAAM,CAACC,S;;8CACnBC,sCAA0BC,MAA1B,CAAiC;AAACF,gBAAAA,SAAS,EAACA,SAAX;AAAqBL,gBAAAA,YAAY,EAACA;AAAlC,eAAjC,C;;;;;;;;;;;;;;;;;;;;;;;;mCAQgBA,Y;;;;;;;;8CAEFM,sCAA0BE,OAA1B,CAAkC;AAACC,gBAAAA,GAAG,EAAC,IAAL;AAAUC,gBAAAA,KAAK,EAAC;AAACV,kBAAAA,YAAY,EAACA;AAAd;AAAhB,eAAlC,C;;;AAAhBC,cAAAA,O;gDAECA,O;;;;;;;;;;;;;;AAMX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAoCaF,gC",
      "sourceRoot": "D:\\xampp\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Categoria_contiene_Equipo from '../models/Categoria_contiene_Equipo';\r\nimport CategoriaService from './CategoriaService';\r\n\r\n\r\nclass Categoria_contiene_EquipoService {\r\n  \r\n  /* function agregarEquipos2(id_categoria,equipos) {\r\n    return Promise.all(equipos.map(async (equipo) => {\r\n        let id_equipo = equipo.id_equipo;\r\n\r\n        await Categoria_contiene_Equipo.create({id_equipo:id_equipo,id_categoria:id_categoria});\r\n    }));\r\n}\r\n\r\nfunction createObjects(id_categoria,equipos) {\r\n    return Promise.all(\r\n        equipos.map(({ Categoria_contiene_Equipo }) => agregarEquipos2(id_categoria,equipos))\r\n    );\r\n} */\r\n\r\n\r\n\r\n    static async agregarEquipos(id_categoria,equipos) {    \r\n     // console.log(\"EL json completo\",jugadores.jugadores);\r\n      var lista = equipos.equipos;\r\n      try {\r\n        for (var i in lista){\r\n          const equipo = lista[i];\r\n          const id_equipo = equipo.id_equipo;\r\n          await Categoria_contiene_Equipo.create({id_equipo:id_equipo,id_categoria:id_categoria});\r\n        }\r\n      } \r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n    \r\n    static async obtenerEquipos(id_categoria){\r\n      try {\r\n        const equipos = await Categoria_contiene_Equipo.findAll({raw:true,where:{id_categoria:id_categoria}});\r\n\r\n        return equipos; \r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n    /*\r\n    static async actualizarJugador(dni,jugador){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          await Jugador.update(jugador,{where:{dni:dni}});\r\n          return jugador; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarJugador(dni){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n          return jugadorEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    } */\r\n} \r\n  \r\n  export default Categoria_contiene_EquipoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142511
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction main() {\n  return regeneratorRuntime.async(function main$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return regeneratorRuntime.awrap(_app[\"default\"].listen(4000));\n\n        case 2:\n          console.log('server en puerto 4000');\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsU0FBZUEsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQ0FDVUMsZ0JBQUlDLE1BQUosQ0FBVyxJQUFYLENBRFY7O0FBQUE7QUFFSUMsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7O0FBRko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBS0FKLElBQUkiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwIGZyb20gJy4vYXBwJztcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIG1haW4oKSB7XHJcbiAgICBhd2FpdCBhcHAubGlzdGVuKDQwMDApO1xyXG4gICAgY29uc29sZS5sb2coJ3NlcnZlciBlbiBwdWVydG8gNDAwMCcpXHJcbn1cclxuXHJcbm1haW4oKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "main",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AAEA,SAAeA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACUC,gBAAIC,MAAJ,CAAW,IAAX,CADV;;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAJ,IAAI",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src",
      "sourcesContent": [
        "import app from './app';\r\n\r\nasync function main() {\r\n    await app.listen(4000);\r\n    console.log('server en puerto 4000')\r\n}\r\n\r\nmain();"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142503
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _persona = _interopRequireDefault(require(\"./routes/persona\"));\n\nvar _jugador = _interopRequireDefault(require(\"./routes/jugador\"));\n\nvar _torneo = _interopRequireDefault(require(\"./routes/torneo\"));\n\nvar _categoria = _interopRequireDefault(require(\"./routes/categoria\"));\n\nvar _equipo = _interopRequireDefault(require(\"./routes/equipo\"));\n\nvar _listaInscripcion = _interopRequireDefault(require(\"./routes/listaInscripcion\"));\n\nvar _tabla = _interopRequireDefault(require(\"./routes/tabla\"));\n\nvar _partido = _interopRequireDefault(require(\"./routes/partido\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar app = (0, _express[\"default\"])(); //midelwares\n\napp.use((0, _morgan[\"default\"])('dev')); //muestra por consola lo que va llegando\n\napp.use((0, _express.json)()); //para que el servidor entienda los datos en formato json\n//\n\napp.use('/api/persona', _persona[\"default\"]);\napp.use('/api/jugador', _jugador[\"default\"]);\napp.use('/api/torneo', _torneo[\"default\"]);\napp.use('/api/categoria', _categoria[\"default\"]);\napp.use('/api/equipo', _equipo[\"default\"]);\napp.use('/api/listaInscripcion', _listaInscripcion[\"default\"]);\napp.use('/api/tabla', _tabla[\"default\"]);\napp.use('/api/partido', _partido[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJwZXJzb25hUm91dGVzIiwianVnYWRvclJvdXRlcyIsInRvcm5lb1JvdXRlcyIsImNhdGVnb3JpYVJvdXRlcyIsImVxdWlwb1JvdXRlcyIsImxpc3RhSW5zY3JpcGNpb25Sb3V0ZXMiLCJ0YWJsYVJvdXRlcyIsInBhcnRpZG9Sb3V0ZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUtBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBR0E7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLHdCQUFPLEtBQVAsQ0FBUixFLENBQXdCOztBQUN4QkQsR0FBRyxDQUFDQyxHQUFKLENBQVEsb0JBQVIsRSxDQUFpQjtBQUVqQjs7QUFFQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QkMsbUJBQXhCO0FBQ0FGLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGNBQVIsRUFBd0JFLG1CQUF4QjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCRyxrQkFBdkI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsZ0JBQVIsRUFBMEJJLHFCQUExQjtBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCSyxrQkFBdkI7QUFDQU4sR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVIsRUFBaUNNLDRCQUFqQztBQUNBUCxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCTyxpQkFBdEI7QUFDQVIsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QlEsbUJBQXhCO2VBR2VULEciLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcywgeyBqc29uIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBtb3JnYW4gZnJvbSAnbW9yZ2FuJztcclxuXHJcbmltcG9ydCBwZXJzb25hUm91dGVzIGZyb20gJy4vcm91dGVzL3BlcnNvbmEnO1xyXG5pbXBvcnQganVnYWRvclJvdXRlcyBmcm9tICcuL3JvdXRlcy9qdWdhZG9yJztcclxuaW1wb3J0IHRvcm5lb1JvdXRlcyBmcm9tICcuL3JvdXRlcy90b3JuZW8nO1xyXG5pbXBvcnQgY2F0ZWdvcmlhUm91dGVzIGZyb20gJy4vcm91dGVzL2NhdGVnb3JpYSc7XHJcbmltcG9ydCBlcXVpcG9Sb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvZXF1aXBvJztcclxuaW1wb3J0IGxpc3RhSW5zY3JpcGNpb25Sb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvbGlzdGFJbnNjcmlwY2lvbic7XHJcbmltcG9ydCB0YWJsYVJvdXRlcyBmcm9tICcuL3JvdXRlcy90YWJsYSc7XHJcbmltcG9ydCBwYXJ0aWRvUm91dGVzIGZyb20gJy4vcm91dGVzL3BhcnRpZG8nO1xyXG5cclxuXHJcblxyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuXHJcbi8vbWlkZWx3YXJlc1xyXG5hcHAudXNlKG1vcmdhbignZGV2JykpOyAvL211ZXN0cmEgcG9yIGNvbnNvbGEgbG8gcXVlIHZhIGxsZWdhbmRvXHJcbmFwcC51c2UoanNvbigpKTsgLy9wYXJhIHF1ZSBlbCBzZXJ2aWRvciBlbnRpZW5kYSBsb3MgZGF0b3MgZW4gZm9ybWF0byBqc29uXHJcblxyXG4vL1xyXG5cclxuYXBwLnVzZSgnL2FwaS9wZXJzb25hJywgcGVyc29uYVJvdXRlcyk7XHJcbmFwcC51c2UoJy9hcGkvanVnYWRvcicsIGp1Z2Fkb3JSb3V0ZXMpO1xyXG5hcHAudXNlKCcvYXBpL3Rvcm5lbycsIHRvcm5lb1JvdXRlcyk7XHJcbmFwcC51c2UoJy9hcGkvY2F0ZWdvcmlhJywgY2F0ZWdvcmlhUm91dGVzKTtcclxuYXBwLnVzZSgnL2FwaS9lcXVpcG8nLCBlcXVpcG9Sb3V0ZXMpO1xyXG5hcHAudXNlKCcvYXBpL2xpc3RhSW5zY3JpcGNpb24nLCBsaXN0YUluc2NyaXBjaW9uUm91dGVzKTtcclxuYXBwLnVzZSgnL2FwaS90YWJsYScsIHRhYmxhUm91dGVzKTtcclxuYXBwLnVzZSgnL2FwaS9wYXJ0aWRvJywgcGFydGlkb1JvdXRlcyk7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "personaRoutes",
        "jugadorRoutes",
        "torneoRoutes",
        "categoriaRoutes",
        "equipoRoutes",
        "listaInscripcionRoutes",
        "tablaRoutes",
        "partidoRoutes"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAKA,IAAMA,GAAG,GAAG,0BAAZ,C,CAGA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAAwB;;AACxBD,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CAAiB;AAEjB;;AAEAD,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBC,mBAAxB;AACAF,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBE,mBAAxB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBG,kBAAvB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BI,qBAA1B;AACAL,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBK,kBAAvB;AACAN,GAAG,CAACC,GAAJ,CAAQ,uBAAR,EAAiCM,4BAAjC;AACAP,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBO,iBAAtB;AACAR,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBQ,mBAAxB;eAGeT,G",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src",
      "sourcesContent": [
        "import express, { json } from 'express';\r\nimport morgan from 'morgan';\r\n\r\nimport personaRoutes from './routes/persona';\r\nimport jugadorRoutes from './routes/jugador';\r\nimport torneoRoutes from './routes/torneo';\r\nimport categoriaRoutes from './routes/categoria';\r\nimport equipoRoutes from './routes/equipo';\r\nimport listaInscripcionRoutes from './routes/listaInscripcion';\r\nimport tablaRoutes from './routes/tabla';\r\nimport partidoRoutes from './routes/partido';\r\n\r\n\r\n\r\n\r\nconst app = express();\r\n\r\n\r\n//midelwares\r\napp.use(morgan('dev')); //muestra por consola lo que va llegando\r\napp.use(json()); //para que el servidor entienda los datos en formato json\r\n\r\n//\r\n\r\napp.use('/api/persona', personaRoutes);\r\napp.use('/api/jugador', jugadorRoutes);\r\napp.use('/api/torneo', torneoRoutes);\r\napp.use('/api/categoria', categoriaRoutes);\r\napp.use('/api/equipo', equipoRoutes);\r\napp.use('/api/listaInscripcion', listaInscripcionRoutes);\r\napp.use('/api/tabla', tablaRoutes);\r\napp.use('/api/partido', partidoRoutes);\r\n\r\n\r\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142498
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\persona.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\persona.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\persona.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\persona.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "persona.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _persona = _interopRequireDefault(require(\"../controllers/persona.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _persona[\"default\"].obtenerPersonas); // obtener todas las personas almacenadas hasta el momento\n\nrouter.get('/:dni', _persona[\"default\"].obtenerPersona); //obtener persona por campo: dni\n\nrouter.post('/', _persona[\"default\"].crearPersona); // recibe una persona a insertar en la base\n\nrouter.post('/crearPersonas', _persona[\"default\"].crearPersonas); //recibe un arreglo de personas a insertar en la base\n\nrouter.put('/:dni', _persona[\"default\"].actualizarPersona); //actualizar los datos de la persona con :dni\n\nrouter[\"delete\"]('/:dni', _persona[\"default\"].eliminarPersona); //eliminar la persona de la base \n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmEuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiUGVyc29uYUNvbnRyb2xsZXIiLCJvYnRlbmVyUGVyc29uYXMiLCJvYnRlbmVyUGVyc29uYSIsInBvc3QiLCJjcmVhclBlcnNvbmEiLCJjcmVhclBlcnNvbmFzIiwicHV0IiwiYWN0dWFsaXphclBlcnNvbmEiLCJlbGltaW5hclBlcnNvbmEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUtBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWVDLG9CQUFrQkMsZUFBakMsRSxDQUFtRDs7QUFDbkRILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE9BQVgsRUFBbUJDLG9CQUFrQkUsY0FBckMsRSxDQUFzRDs7QUFFdERKLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLEdBQVosRUFBZ0JILG9CQUFrQkksWUFBbEMsRSxDQUFpRDs7QUFDakROLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLGdCQUFaLEVBQTZCSCxvQkFBa0JLLGFBQS9DLEUsQ0FBK0Q7O0FBRS9EUCxNQUFNLENBQUNRLEdBQVAsQ0FBVyxPQUFYLEVBQW1CTixvQkFBa0JPLGlCQUFyQyxFLENBQXlEOztBQUV6RFQsTUFBTSxVQUFOLENBQWMsT0FBZCxFQUFzQkUsb0JBQWtCUSxlQUF4QyxFLENBQTBEOztlQUUzQ1YsTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuaW1wb3J0IFBlcnNvbmFDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3BlcnNvbmEuY29udHJvbGxlcic7XHJcblxyXG5cclxucm91dGVyLmdldCgnLycsUGVyc29uYUNvbnRyb2xsZXIub2J0ZW5lclBlcnNvbmFzKTsgLy8gb2J0ZW5lciB0b2RhcyBsYXMgcGVyc29uYXMgYWxtYWNlbmFkYXMgaGFzdGEgZWwgbW9tZW50b1xyXG5yb3V0ZXIuZ2V0KCcvOmRuaScsUGVyc29uYUNvbnRyb2xsZXIub2J0ZW5lclBlcnNvbmEpOyAvL29idGVuZXIgcGVyc29uYSBwb3IgY2FtcG86IGRuaVxyXG5cclxucm91dGVyLnBvc3QoJy8nLFBlcnNvbmFDb250cm9sbGVyLmNyZWFyUGVyc29uYSk7IC8vIHJlY2liZSB1bmEgcGVyc29uYSBhIGluc2VydGFyIGVuIGxhIGJhc2Vcclxucm91dGVyLnBvc3QoJy9jcmVhclBlcnNvbmFzJyxQZXJzb25hQ29udHJvbGxlci5jcmVhclBlcnNvbmFzKTsgLy9yZWNpYmUgdW4gYXJyZWdsbyBkZSBwZXJzb25hcyBhIGluc2VydGFyIGVuIGxhIGJhc2VcclxuXHJcbnJvdXRlci5wdXQoJy86ZG5pJyxQZXJzb25hQ29udHJvbGxlci5hY3R1YWxpemFyUGVyc29uYSk7IC8vYWN0dWFsaXphciBsb3MgZGF0b3MgZGUgbGEgcGVyc29uYSBjb24gOmRuaVxyXG5cclxucm91dGVyLmRlbGV0ZSgnLzpkbmknLFBlcnNvbmFDb250cm9sbGVyLmVsaW1pbmFyUGVyc29uYSk7IC8vZWxpbWluYXIgbGEgcGVyc29uYSBkZSBsYSBiYXNlIFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "persona.js"
      ],
      "names": [
        "router",
        "get",
        "PersonaController",
        "obtenerPersonas",
        "obtenerPersona",
        "post",
        "crearPersona",
        "crearPersonas",
        "put",
        "actualizarPersona",
        "eliminarPersona"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAKAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,oBAAkBC,eAAjC,E,CAAmD;;AACnDH,MAAM,CAACC,GAAP,CAAW,OAAX,EAAmBC,oBAAkBE,cAArC,E,CAAsD;;AAEtDJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAgBH,oBAAkBI,YAAlC,E,CAAiD;;AACjDN,MAAM,CAACK,IAAP,CAAY,gBAAZ,EAA6BH,oBAAkBK,aAA/C,E,CAA+D;;AAE/DP,MAAM,CAACQ,GAAP,CAAW,OAAX,EAAmBN,oBAAkBO,iBAArC,E,CAAyD;;AAEzDT,MAAM,UAAN,CAAc,OAAd,EAAsBE,oBAAkBQ,eAAxC,E,CAA0D;;eAE3CV,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport PersonaController from '../controllers/persona.controller';\r\n\r\n\r\nrouter.get('/',PersonaController.obtenerPersonas); // obtener todas las personas almacenadas hasta el momento\r\nrouter.get('/:dni',PersonaController.obtenerPersona); //obtener persona por campo: dni\r\n\r\nrouter.post('/',PersonaController.crearPersona); // recibe una persona a insertar en la base\r\nrouter.post('/crearPersonas',PersonaController.crearPersonas); //recibe un arreglo de personas a insertar en la base\r\n\r\nrouter.put('/:dni',PersonaController.actualizarPersona); //actualizar los datos de la persona con :dni\r\n\r\nrouter.delete('/:dni',PersonaController.eliminarPersona); //eliminar la persona de la base \r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1619014392858
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\persona.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\persona.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\persona.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\persona.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "persona.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _PersonaService = _interopRequireDefault(require(\"../services/PersonaService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar PersonaController =\n/*#__PURE__*/\nfunction () {\n  function PersonaController() {\n    _classCallCheck(this, PersonaController);\n  }\n\n  _createClass(PersonaController, null, [{\n    key: \"crearPersona\",\n    value: function crearPersona(req, res) {\n      var nuevaPersona, personaCreada;\n      return regeneratorRuntime.async(function crearPersona$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaPersona = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].agregarPersona(nuevaPersona));\n\n            case 4:\n              personaCreada = _context.sent;\n              util.setSuccess(201, 'Persona añadida', personaCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"crearPersonas\",\n    value: function crearPersonas(req, res) {\n      var nuevasPersonas, personasCreadas;\n      return regeneratorRuntime.async(function crearPersonas$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              nuevasPersonas = req.body;\n              _context2.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].agregarPersonas(nuevasPersonas));\n\n            case 4:\n              personasCreadas = _context2.sent;\n              util.setSuccess(201, 'Personas añadidas', personasCreadas);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, \"No se añadieron las personas: \" + _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerPersonas\",\n    value: function obtenerPersonas(req, res) {\n      var personas;\n      return regeneratorRuntime.async(function obtenerPersonas$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].obtenerPersonas());\n\n            case 3:\n              personas = _context3.sent;\n\n              if (personas && personas.length > 0) {\n                util.setSuccess(200, 'Personas obtenidas', personas);\n              } else {\n                util.setSuccess(200, 'No se encuentran Personas');\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(400, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerPersona\",\n    value: function obtenerPersona(req, res) {\n      var dni, persona;\n      return regeneratorRuntime.async(function obtenerPersona$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dni = req.params.dni;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].obtenerPersona(dni));\n\n            case 4:\n              persona = _context4.sent;\n\n              if (persona) {\n                util.setSuccess(200, 'Persona obtenida', persona);\n              } else {\n                util.setError(404, \"Persona con dni: \".concat(dni, \" no encontrada \"));\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarPersona\",\n    value: function actualizarPersona(req, res) {\n      var dni, persona, personaActualizada;\n      return regeneratorRuntime.async(function actualizarPersona$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dni = req.params.dni;\n              persona = req.body;\n              _context5.next = 5;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].actualizarPersona(dni, persona));\n\n            case 5:\n              personaActualizada = _context5.sent;\n\n              if (personaActualizada) {\n                util.setSuccess(200, 'Persona actualizada', personaActualizada);\n              } else {\n                util.setError(404, \"Persona con dni: \".concat(dni, \" no encontrada \"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarPersona\",\n    value: function eliminarPersona(req, res) {\n      var dni, personaEliminada;\n      return regeneratorRuntime.async(function eliminarPersona$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dni = req.params.dni;\n              _context6.next = 4;\n              return regeneratorRuntime.awrap(_PersonaService[\"default\"].eliminarPersona(dni));\n\n            case 4:\n              personaEliminada = _context6.sent;\n\n              if (personaEliminada) {\n                util.setSuccess(200, 'Persona eliminada');\n              } else {\n                util.setError(404, \"Persona con dni: \".concat(dni, \" no encontrada \"));\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return PersonaController;\n}();\n\nvar _default = PersonaController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "persona.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "PersonaController",
        "req",
        "res",
        "nuevaPersona",
        "body",
        "PersonaService",
        "agregarPersona",
        "personaCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "nuevasPersonas",
        "agregarPersonas",
        "personasCreadas",
        "obtenerPersonas",
        "personas",
        "length",
        "dni",
        "params",
        "obtenerPersona",
        "persona",
        "actualizarPersona",
        "personaActualizada",
        "eliminarPersona",
        "personaEliminada"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,iB;;;;;;;;;iCACwBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,Y,GAAeF,GAAG,CAACG,I;;8CACGC,2BAAeC,cAAf,CAA8BH,YAA9B,C;;;AAAtBI,cAAAA,a;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCD,aAAtC;+CAEOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAGlBU,cAAAA,c,GAAiBX,GAAG,CAACG,I;;8CACGC,2BAAeQ,eAAf,CAA+BD,cAA/B,C;;;AAAxBE,cAAAA,e;AACNhB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCM,eAAxC;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,mCAAiC,aAAMC,OAAzD;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;;8CAEHG,2BAAeU,eAAf,E;;;AAAjBC,cAAAA,Q;;AAEN,kBAAGA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAjC,EAAmC;AAC/BnB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCQ,QAAzC;AACH,eAFD,MAGI;AACAlB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,2BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBgB,cAAAA,G,GAAMjB,GAAG,CAACkB,MAAJ,CAAWD,G;;8CACDb,2BAAee,cAAf,CAA8BF,GAA9B,C;;;AAAhBG,cAAAA,O;;AAEN,kBAAGA,OAAH,EAAW;AACPvB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCa,OAAvC;AACH,eAFD,MAGI;AACAvB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCQ,GAAtC;AACH;;gDACMpB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAGtBgB,cAAAA,G,GAAMjB,GAAG,CAACkB,MAAJ,CAAWD,G;AACjBG,cAAAA,O,GAAUpB,GAAG,CAACG,I;;8CAEaC,2BAAeiB,iBAAf,CAAiCJ,GAAjC,EAAqCG,OAArC,C;;;AAA3BE,cAAAA,kB;;AAEN,kBAAGA,kBAAH,EAAsB;AAClBzB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0Ce,kBAA1C;AACH,eAFD,MAGI;AACAzB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCQ,GAAtC;AACH;;gDAEMpB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBgB,cAAAA,G,GAAMjB,GAAG,CAACkB,MAAJ,CAAWD,G;;8CACQb,2BAAemB,eAAf,CAA+BN,GAA/B,C;;;AAAzBO,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAoB;AAChB3B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCQ,GAAtC;AACH;;gDAEMpB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAMJF,iB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import PersonaService from '../services/PersonaService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass PersonaController {\r\n    static async crearPersona(req, res) {    \r\n        try {    \r\n            const nuevaPersona = req.body;\r\n            const personaCreada = await PersonaService.agregarPersona(nuevaPersona);\r\n            \r\n            util.setSuccess(201,'Persona añadida',personaCreada);            \r\n            \r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async crearPersonas(req, res) {    \r\n        //Recibe un arreglo objetos Persona para ser creadas, se insertan todas (si no hay error), o ninguna (si hay error)\r\n        try {    \r\n            const nuevasPersonas = req.body;\r\n            const personasCreadas = await PersonaService.agregarPersonas(nuevasPersonas);\r\n            util.setSuccess(201,'Personas añadidas',personasCreadas);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,\"No se añadieron las personas: \"+error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerPersonas(req, res){\r\n        try {\r\n            const personas = await PersonaService.obtenerPersonas();\r\n            \r\n            if(personas && personas.length > 0){\r\n                util.setSuccess(200,'Personas obtenidas',personas);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Personas'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerPersona(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const persona = await PersonaService.obtenerPersona(dni);\r\n            \r\n            if(persona){\r\n                util.setSuccess(200,'Persona obtenida',persona);\r\n            }\r\n            else{\r\n                util.setError(404,`Persona con dni: ${dni} no encontrada `);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async actualizarPersona(req, res){\r\n        //preguntar por cambios de dni ? \r\n        try {\r\n            const dni = req.params.dni;\r\n            const persona = req.body;\r\n\r\n            const personaActualizada = await PersonaService.actualizarPersona(dni,persona);\r\n\r\n            if(personaActualizada){\r\n                util.setSuccess(200,'Persona actualizada',personaActualizada);\r\n            }\r\n            else{\r\n                util.setError(404,`Persona con dni: ${dni} no encontrada `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarPersona(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const personaEliminada = await PersonaService.eliminarPersona(dni);\r\n\r\n            if(personaEliminada){\r\n                util.setSuccess(200,'Persona eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Persona con dni: ${dni} no encontrada `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default PersonaController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595619004817
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\PersonaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\PersonaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\PersonaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\PersonaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "PersonaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Persona = _interopRequireDefault(require(\"../models/Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PersonaService =\n/*#__PURE__*/\nfunction () {\n  function PersonaService() {\n    _classCallCheck(this, PersonaService);\n  }\n\n  _createClass(PersonaService, null, [{\n    key: \"agregarPersona\",\n    value: function agregarPersona(nuevaPersona) {\n      return regeneratorRuntime.async(function agregarPersona$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].create(nuevaPersona));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"agregarPersonas\",\n    value: function agregarPersonas(nuevasPersonas) {\n      return regeneratorRuntime.async(function agregarPersonas$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].bulkCreate(nuevasPersonas, {\n                returning: true\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw new Error(_context2.t0.parent.detail);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerPersonas\",\n    value: function obtenerPersonas() {\n      return regeneratorRuntime.async(function obtenerPersonas$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findAll());\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerPersona\",\n    value: function obtenerPersona(dni) {\n      var persona;\n      return regeneratorRuntime.async(function obtenerPersona$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findByPk(dni));\n\n            case 3:\n              persona = _context4.sent;\n              return _context4.abrupt(\"return\", persona);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarPersona\",\n    value: function actualizarPersona(dni, persona) {\n      var personaExistente;\n      return regeneratorRuntime.async(function actualizarPersona$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findByPk(dni));\n\n            case 3:\n              personaExistente = _context5.sent;\n\n              if (!personaExistente) {\n                _context5.next = 10;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].update(persona, {\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              return _context5.abrupt(\"return\", persona);\n\n            case 10:\n              return _context5.abrupt(\"return\", null);\n\n            case 11:\n              _context5.next = 16;\n              break;\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarPersona\",\n    value: function eliminarPersona(dni) {\n      var personaExistente, personaEliminada;\n      return regeneratorRuntime.async(function eliminarPersona$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].findByPk(dni));\n\n            case 3:\n              personaExistente = _context6.sent;\n\n              if (!personaExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Persona[\"default\"].destroy({\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              personaEliminada = _context6.sent;\n              return _context6.abrupt(\"return\", personaEliminada);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return PersonaService;\n}();\n\nvar _default = PersonaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbmFTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIlBlcnNvbmFTZXJ2aWNlIiwibnVldmFQZXJzb25hIiwiUGVyc29uYSIsImNyZWF0ZSIsIm51ZXZhc1BlcnNvbmFzIiwiYnVsa0NyZWF0ZSIsInJldHVybmluZyIsIkVycm9yIiwicGFyZW50IiwiZGV0YWlsIiwiZmluZEFsbCIsImRuaSIsImZpbmRCeVBrIiwicGVyc29uYSIsInBlcnNvbmFFeGlzdGVudGUiLCJ1cGRhdGUiLCJ3aGVyZSIsImRlc3Ryb3kiLCJwZXJzb25hRWxpbWluYWRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7SUFFTUEsYzs7Ozs7Ozs7O21DQUMwQkMsWTs7Ozs7Ozs4Q0FFWEMsb0JBQVFDLE1BQVIsQ0FBZUYsWUFBZixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O29DQU1ZRyxjOzs7Ozs7OzhDQUVYRixvQkFBUUcsVUFBUixDQUFtQkQsY0FBbkIsRUFBa0M7QUFBQ0UsZ0JBQUFBLFNBQVMsRUFBQztBQUFYLGVBQWxDLEM7Ozs7Ozs7O29CQUVSLElBQUlDLEtBQUosQ0FBVyxhQUFNQyxNQUFOLENBQWFDLE1BQXhCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4Q0FNT1Asb0JBQVFRLE9BQVIsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQ0FPV0MsRzs7Ozs7Ozs7OENBRUZULG9CQUFRVSxRQUFSLENBQWlCRCxHQUFqQixDOzs7QUFBaEJFLGNBQUFBLE87Z0RBQ0NBLE87Ozs7Ozs7Ozs7Ozs7Ozs7c0NBT29CRixHLEVBQUlFLE87Ozs7Ozs7OzhDQUVBWCxvQkFBUVUsUUFBUixDQUFpQkQsR0FBakIsQzs7O0FBQXpCRyxjQUFBQSxnQjs7bUJBRUhBLGdCOzs7Ozs7OENBQ0taLG9CQUFRYSxNQUFSLENBQWVGLE9BQWYsRUFBdUI7QUFBQ0csZ0JBQUFBLEtBQUssRUFBQztBQUFDTCxrQkFBQUEsR0FBRyxFQUFDQTtBQUFMO0FBQVAsZUFBdkIsQzs7O2dEQUNDRSxPOzs7Z0RBR0EsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBUWdCRixHOzs7Ozs7Ozs4Q0FFTVQsb0JBQVFVLFFBQVIsQ0FBaUJELEdBQWpCLEM7OztBQUF6QkcsY0FBQUEsZ0I7O21CQUVIQSxnQjs7Ozs7OzhDQUM4Qlosb0JBQVFlLE9BQVIsQ0FBZ0I7QUFBQ0QsZ0JBQUFBLEtBQUssRUFBQztBQUFDTCxrQkFBQUEsR0FBRyxFQUFDQTtBQUFMO0FBQVAsZUFBaEIsQzs7O0FBQXpCTyxjQUFBQSxnQjtnREFDQ0EsZ0I7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQVNBbEIsYyIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGVyc29uYSBmcm9tICcuLi9tb2RlbHMvUGVyc29uYSc7XHJcblxyXG5jbGFzcyBQZXJzb25hU2VydmljZSB7ICBcclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyUGVyc29uYShudWV2YVBlcnNvbmEpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgUGVyc29uYS5jcmVhdGUobnVldmFQZXJzb25hKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyUGVyc29uYXMobnVldmFzUGVyc29uYXMpe1xyXG4gICAgICB0cnl7XHJcbiAgICAgICAgcmV0dXJuICBhd2FpdCBQZXJzb25hLmJ1bGtDcmVhdGUobnVldmFzUGVyc29uYXMse3JldHVybmluZzp0cnVlfSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7IFxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvciAoZXJyb3IucGFyZW50LmRldGFpbCk7IC8vZWwgb2JqZXRvIHF1ZSBwcm92b2PDsyBlbCBlcnJvci4gTm8gc2UgaW5zZXJ0YSBuaW5nw7puIG9iamV0by5cclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclBlcnNvbmFzKCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFBlcnNvbmEuZmluZEFsbCgpO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjsgICBcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyUGVyc29uYShkbmkpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHBlcnNvbmEgPSBhd2FpdCBQZXJzb25hLmZpbmRCeVBrKGRuaSk7XHJcbiAgICAgICAgcmV0dXJuIHBlcnNvbmE7XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIFxyXG4gICAgc3RhdGljIGFzeW5jIGFjdHVhbGl6YXJQZXJzb25hKGRuaSxwZXJzb25hKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBwZXJzb25hRXhpc3RlbnRlID0gYXdhaXQgUGVyc29uYS5maW5kQnlQayhkbmkpO1xyXG5cclxuICAgICAgICBpZihwZXJzb25hRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGF3YWl0IFBlcnNvbmEudXBkYXRlKHBlcnNvbmEse3doZXJlOntkbmk6ZG5pfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIHBlcnNvbmE7IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgc3RhdGljIGFzeW5jIGVsaW1pbmFyUGVyc29uYShkbmkpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHBlcnNvbmFFeGlzdGVudGUgPSBhd2FpdCBQZXJzb25hLmZpbmRCeVBrKGRuaSk7XHJcblxyXG4gICAgICAgIGlmKHBlcnNvbmFFeGlzdGVudGUpe1xyXG4gICAgICAgICAgY29uc3QgcGVyc29uYUVsaW1pbmFkYSA9IGF3YWl0IFBlcnNvbmEuZGVzdHJveSh7d2hlcmU6e2RuaTpkbml9fSk7XHJcbiAgICAgICAgICByZXR1cm4gcGVyc29uYUVsaW1pbmFkYTsgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxufSBcclxuICBcclxuICBleHBvcnQgZGVmYXVsdCBQZXJzb25hU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "PersonaService.js"
      ],
      "names": [
        "PersonaService",
        "nuevaPersona",
        "Persona",
        "create",
        "nuevasPersonas",
        "bulkCreate",
        "returning",
        "Error",
        "parent",
        "detail",
        "findAll",
        "dni",
        "findByPk",
        "persona",
        "personaExistente",
        "update",
        "where",
        "destroy",
        "personaEliminada"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,c;;;;;;;;;mCAC0BC,Y;;;;;;;8CAEXC,oBAAQC,MAAR,CAAeF,YAAf,C;;;;;;;;;;;;;;;;;;;oCAMYG,c;;;;;;;8CAEXF,oBAAQG,UAAR,CAAmBD,cAAnB,EAAkC;AAACE,gBAAAA,SAAS,EAAC;AAAX,eAAlC,C;;;;;;;;oBAER,IAAIC,KAAJ,CAAW,aAAMC,MAAN,CAAaC,MAAxB,C;;;;;;;;;;;;;;;;;;8CAMOP,oBAAQQ,OAAR,E;;;;;;;;;;;;;;;;;;;mCAOWC,G;;;;;;;;8CAEFT,oBAAQU,QAAR,CAAiBD,GAAjB,C;;;AAAhBE,cAAAA,O;gDACCA,O;;;;;;;;;;;;;;;;sCAOoBF,G,EAAIE,O;;;;;;;;8CAEAX,oBAAQU,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CACKZ,oBAAQa,MAAR,CAAeF,OAAf,EAAuB;AAACG,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAvB,C;;;gDACCE,O;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBF,G;;;;;;;;8CAEMT,oBAAQU,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CAC8BZ,oBAAQe,OAAR,CAAgB;AAACD,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAhB,C;;;AAAzBO,cAAAA,gB;gDACCA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASAlB,c",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Persona from '../models/Persona';\r\n\r\nclass PersonaService {  \r\n    static async agregarPersona(nuevaPersona) {\r\n      try {\r\n        return await Persona.create(nuevaPersona);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async agregarPersonas(nuevasPersonas){\r\n      try{\r\n        return  await Persona.bulkCreate(nuevasPersonas,{returning:true});\r\n      } catch (error) { \r\n        throw new Error (error.parent.detail); //el objeto que provocó el error. No se inserta ningún objeto.\r\n      }\r\n  }\r\n\r\n    static async obtenerPersonas(){\r\n      try {\r\n        return await Persona.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerPersona(dni){\r\n      try {\r\n        const persona = await Persona.findByPk(dni);\r\n        return persona;\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n    \r\n    static async actualizarPersona(dni,persona){\r\n      try {\r\n        const personaExistente = await Persona.findByPk(dni);\r\n\r\n        if(personaExistente){\r\n          await Persona.update(persona,{where:{dni:dni}});\r\n          return persona; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarPersona(dni){\r\n      try {\r\n        const personaExistente = await Persona.findByPk(dni);\r\n\r\n        if(personaExistente){\r\n          const personaEliminada = await Persona.destroy({where:{dni:dni}});\r\n          return personaEliminada; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n} \r\n  \r\n  export default PersonaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616778329905
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Persona.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Persona.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Persona.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Persona.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Persona.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Persona = _database.sequelize.define('Persona', {\n  dni: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  apellido: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  fecha_nacimiento: {\n    type: _sequelize[\"default\"].DATE\n  },\n  telefono: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  correo: {\n    type: _sequelize[\"default\"].TEXT\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Persona;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbmEuanMiXSwibmFtZXMiOlsiUGVyc29uYSIsInNlcXVlbGl6ZSIsImRlZmluZSIsImRuaSIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsIm5vbWJyZSIsIlRFWFQiLCJhcGVsbGlkbyIsImZlY2hhX25hY2ltaWVudG8iLCJEQVRFIiwidGVsZWZvbm8iLCJjb3JyZW8iLCJ0aW1lc3RhbXBzIiwiZnJlZXplVGFibGVOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQ3hDQyxFQUFBQSxHQUFHLEVBQUU7QUFDREMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEZjtBQUVEQyxJQUFBQSxVQUFVLEVBQUU7QUFGWCxHQURtQztBQUt4Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FMZ0M7QUFReENDLEVBQUFBLFFBQVEsRUFBRTtBQUNOTixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURWLEdBUjhCO0FBV3hDRSxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNkUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVTztBQURGLEdBWHNCO0FBY3hDQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEVixHQWQ4QjtBQWlCeENLLEVBQUFBLE1BQU0sRUFBRTtBQUNKVixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaO0FBakJnQyxDQUE1QixFQW9CYjtBQUNDTSxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FwQmEsQ0FBaEI7O2VBeUJlaEIsTyIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XHJcblxyXG5jb25zdCBQZXJzb25hID0gc2VxdWVsaXplLmRlZmluZSgnUGVyc29uYScsIHtcclxuICAgIGRuaToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICBub21icmU6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGFwZWxsaWRvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBmZWNoYV9uYWNpbWllbnRvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLkRBVEVcclxuICAgIH0sXHJcbiAgICB0ZWxlZm9ubzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgY29ycmVvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH1cclxufSwge1xyXG4gICAgdGltZXN0YW1wczogZmFsc2UsXHJcbiAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUsXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGVyc29uYTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Persona.js"
      ],
      "names": [
        "Persona",
        "sequelize",
        "define",
        "dni",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "apellido",
        "fecha_nacimiento",
        "DATE",
        "telefono",
        "correo",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,OADf;AAEDC,IAAAA,UAAU,EAAE;AAFX,GADmC;AAKxCC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GALgC;AAQxCC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAR8B;AAWxCE,EAAAA,gBAAgB,EAAE;AACdP,IAAAA,IAAI,EAAEC,sBAAUO;AADF,GAXsB;AAcxCC,EAAAA,QAAQ,EAAE;AACNT,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAd8B;AAiBxCK,EAAAA,MAAM,EAAE;AACJV,IAAAA,IAAI,EAAEC,sBAAUI;AADZ;AAjBgC,CAA5B,EAoBb;AACCM,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CApBa,CAAhB;;eAyBehB,O",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport { sequelize } from '../database/database';\r\n\r\nconst Persona = sequelize.define('Persona', {\r\n    dni: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    apellido: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    fecha_nacimiento: {\r\n        type: Sequelize.DATE\r\n    },\r\n    telefono: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    correo: {\r\n        type: Sequelize.TEXT\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nexport default Persona;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142506
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\database\\\\database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\database\\database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\database\\database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\database\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\database",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sequelize = new _sequelize[\"default\"]( //'Futsal',\n'postgres', 'postgres', //user\n//'postgres', //pass\n'matias18', {\n  //host: '170.210.81.246',\n  host: 'localhost',\n  //port: '30432',\n  port: '5432',\n  dialect: 'postgres',\n  pool: {\n    max: 3,\n    min: 0,\n    require: 30000,\n    idle: 10000\n  },\n  logging: true\n});\nexports.sequelize = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJwb3J0IiwiZGlhbGVjdCIsInBvb2wiLCJtYXgiLCJtaW4iLCJyZXF1aXJlIiwiaWRsZSIsImxvZ2dpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVPLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxxQkFBSixFQUNyQjtBQUNBLFVBRnFCLEVBR3JCLFVBSHFCLEVBR1Q7QUFDWjtBQUNBLFVBTHFCLEVBT3JCO0FBQ0k7QUFDQUMsRUFBQUEsSUFBSSxFQUFFLFdBRlY7QUFHSTtBQUNBQyxFQUFBQSxJQUFJLEVBQUUsTUFKVjtBQUtJQyxFQUFBQSxPQUFPLEVBQUUsVUFMYjtBQU1JQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsR0FBRyxFQUFFLENBREg7QUFFRkMsSUFBQUEsR0FBRyxFQUFFLENBRkg7QUFHRkMsSUFBQUEsT0FBTyxFQUFFLEtBSFA7QUFJRkMsSUFBQUEsSUFBSSxFQUFFO0FBSkosR0FOVjtBQVlJQyxFQUFBQSxPQUFPLEVBQUU7QUFaYixDQVBxQixDQUFsQiIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcZGF0YWJhc2UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcblxyXG5leHBvcnQgY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShcclxuICAgIC8vJ0Z1dHNhbCcsXHJcbiAgICAncG9zdGdyZXMnLFxyXG4gICAgJ3Bvc3RncmVzJywgLy91c2VyXHJcbiAgICAvLydwb3N0Z3JlcycsIC8vcGFzc1xyXG4gICAgJ21hdGlhczE4JyxcclxuXHJcbiAgICB7XHJcbiAgICAgICAgLy9ob3N0OiAnMTcwLjIxMC44MS4yNDYnLFxyXG4gICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxyXG4gICAgICAgIC8vcG9ydDogJzMwNDMyJyxcclxuICAgICAgICBwb3J0OiAnNTQzMicsXHJcbiAgICAgICAgZGlhbGVjdDogJ3Bvc3RncmVzJyxcclxuICAgICAgICBwb29sOiB7XHJcbiAgICAgICAgICAgIG1heDogMyxcclxuICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICByZXF1aXJlOiAzMDAwMCxcclxuICAgICAgICAgICAgaWRsZTogMTAwMDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGxvZ2dpbmc6IHRydWVcclxuICAgIH1cclxuKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "port",
        "dialect",
        "pool",
        "max",
        "min",
        "require",
        "idle",
        "logging"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,EACrB;AACA,UAFqB,EAGrB,UAHqB,EAGT;AACZ;AACA,UALqB,EAOrB;AACI;AACAC,EAAAA,IAAI,EAAE,WAFV;AAGI;AACAC,EAAAA,IAAI,EAAE,MAJV;AAKIC,EAAAA,OAAO,EAAE,UALb;AAMIC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AAEFC,IAAAA,GAAG,EAAE,CAFH;AAGFC,IAAAA,OAAO,EAAE,KAHP;AAIFC,IAAAA,IAAI,EAAE;AAJJ,GANV;AAYIC,EAAAA,OAAO,EAAE;AAZb,CAPqB,CAAlB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\database",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\n\r\nexport const sequelize = new Sequelize(\r\n    //'Futsal',\r\n    'postgres',\r\n    'postgres', //user\r\n    //'postgres', //pass\r\n    'matias18',\r\n\r\n    {\r\n        //host: '170.210.81.246',\r\n        host: 'localhost',\r\n        //port: '30432',\r\n        port: '5432',\r\n        dialect: 'postgres',\r\n        pool: {\r\n            max: 3,\r\n            min: 0,\r\n            require: 30000,\r\n            idle: 10000\r\n        },\r\n        logging: true\r\n    }\r\n)"
      ]
    },
    "sourceType": "script",
    "mtime": 1617627063653
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\utils\\\\Utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\utils\\Utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\utils\\Utils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\utils\\Utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\utils",
        "sourceFileName": "Utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//Este archivo contiene todas las respuestas, en caso de operaciones OK o con errores. \nvar Util =\n/*#__PURE__*/\nfunction () {\n  function Util() {\n    _classCallCheck(this, Util);\n\n    this.statusCode = null;\n    this.type = null;\n    this.data = null;\n    this.message = null;\n  }\n\n  _createClass(Util, [{\n    key: \"setSuccess\",\n    value: function setSuccess(statusCode, message, data) {\n      this.statusCode = statusCode;\n      this.message = message;\n      this.data = data;\n      this.type = 'success';\n    }\n  }, {\n    key: \"setError\",\n    value: function setError(statusCode, message) {\n      this.statusCode = statusCode;\n      this.message = message;\n      this.type = 'error';\n    }\n  }, {\n    key: \"send\",\n    value: function send(res) {\n      var result = {\n        status: this.type,\n        message: this.message,\n        data: this.data\n      };\n\n      if (this.type === 'success') {\n        return res.status(this.statusCode).json(result);\n      }\n\n      return res.status(this.statusCode).json({\n        status: this.type,\n        message: this.message\n      });\n    }\n  }]);\n\n  return Util;\n}();\n\nexports[\"default\"] = Util;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlV0aWxzLmpzIl0sIm5hbWVzIjpbIlV0aWwiLCJzdGF0dXNDb2RlIiwidHlwZSIsImRhdGEiLCJtZXNzYWdlIiwicmVzIiwicmVzdWx0Iiwic3RhdHVzIiwianNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0lBRXFCQSxJOzs7QUFDakIsa0JBQWM7QUFBQTs7QUFDWixTQUFLQyxVQUFMLEdBQWtCLElBQWxCO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDQSxTQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNBLFNBQUtDLE9BQUwsR0FBZSxJQUFmO0FBQ0Q7Ozs7K0JBRVVILFUsRUFBWUcsTyxFQUFTRCxJLEVBQU07QUFDcEMsV0FBS0YsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxXQUFLRyxPQUFMLEdBQWVBLE9BQWY7QUFDQSxXQUFLRCxJQUFMLEdBQVlBLElBQVo7QUFDQSxXQUFLRCxJQUFMLEdBQVksU0FBWjtBQUNEOzs7NkJBRVFELFUsRUFBWUcsTyxFQUFTO0FBQzVCLFdBQUtILFVBQUwsR0FBa0JBLFVBQWxCO0FBQ0EsV0FBS0csT0FBTCxHQUFlQSxPQUFmO0FBQ0EsV0FBS0YsSUFBTCxHQUFZLE9BQVo7QUFDRDs7O3lCQUVJRyxHLEVBQUs7QUFDUixVQUFNQyxNQUFNLEdBQUc7QUFDYkMsUUFBQUEsTUFBTSxFQUFFLEtBQUtMLElBREE7QUFFYkUsUUFBQUEsT0FBTyxFQUFFLEtBQUtBLE9BRkQ7QUFHYkQsUUFBQUEsSUFBSSxFQUFFLEtBQUtBO0FBSEUsT0FBZjs7QUFNQSxVQUFJLEtBQUtELElBQUwsS0FBYyxTQUFsQixFQUE2QjtBQUMzQixlQUFPRyxHQUFHLENBQUNFLE1BQUosQ0FBVyxLQUFLTixVQUFoQixFQUE0Qk8sSUFBNUIsQ0FBaUNGLE1BQWpDLENBQVA7QUFDRDs7QUFDRCxhQUFPRCxHQUFHLENBQUNFLE1BQUosQ0FBVyxLQUFLTixVQUFoQixFQUE0Qk8sSUFBNUIsQ0FBaUM7QUFDdENELFFBQUFBLE1BQU0sRUFBRSxLQUFLTCxJQUR5QjtBQUV0Q0UsUUFBQUEsT0FBTyxFQUFFLEtBQUtBO0FBRndCLE9BQWpDLENBQVA7QUFJRCIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyIvL0VzdGUgYXJjaGl2byBjb250aWVuZSB0b2RhcyBsYXMgcmVzcHVlc3RhcywgZW4gY2FzbyBkZSBvcGVyYWNpb25lcyBPSyBvIGNvbiBlcnJvcmVzLiBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFV0aWwge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IG51bGw7XHJcbiAgICAgIHRoaXMudHlwZSA9IG51bGw7XHJcbiAgICAgIHRoaXMuZGF0YSA9IG51bGw7XHJcbiAgICAgIHRoaXMubWVzc2FnZSA9IG51bGw7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBzZXRTdWNjZXNzKHN0YXR1c0NvZGUsIG1lc3NhZ2UsIGRhdGEpIHtcclxuICAgICAgdGhpcy5zdGF0dXNDb2RlID0gc3RhdHVzQ29kZTtcclxuICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcclxuICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgdGhpcy50eXBlID0gJ3N1Y2Nlc3MnO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgc2V0RXJyb3Ioc3RhdHVzQ29kZSwgbWVzc2FnZSkge1xyXG4gICAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xyXG4gICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xyXG4gICAgICB0aGlzLnR5cGUgPSAnZXJyb3InO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgc2VuZChyZXMpIHtcclxuICAgICAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgICAgIHN0YXR1czogdGhpcy50eXBlLFxyXG4gICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcclxuICAgICAgICBkYXRhOiB0aGlzLmRhdGEsXHJcbiAgICAgIH07XHJcbiAgXHJcbiAgICAgIGlmICh0aGlzLnR5cGUgPT09ICdzdWNjZXNzJykge1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKHRoaXMuc3RhdHVzQ29kZSkuanNvbihyZXN1bHQpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHRoaXMuc3RhdHVzQ29kZSkuanNvbih7XHJcbiAgICAgICAgc3RhdHVzOiB0aGlzLnR5cGUsXHJcbiAgICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9Il19",
    "map": {
      "version": 3,
      "sources": [
        "Utils.js"
      ],
      "names": [
        "Util",
        "statusCode",
        "type",
        "data",
        "message",
        "res",
        "result",
        "status",
        "json"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;IAEqBA,I;;;AACjB,kBAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;;;;+BAEUH,U,EAAYG,O,EAASD,I,EAAM;AACpC,WAAKF,UAAL,GAAkBA,UAAlB;AACA,WAAKG,OAAL,GAAeA,OAAf;AACA,WAAKD,IAAL,GAAYA,IAAZ;AACA,WAAKD,IAAL,GAAY,SAAZ;AACD;;;6BAEQD,U,EAAYG,O,EAAS;AAC5B,WAAKH,UAAL,GAAkBA,UAAlB;AACA,WAAKG,OAAL,GAAeA,OAAf;AACA,WAAKF,IAAL,GAAY,OAAZ;AACD;;;yBAEIG,G,EAAK;AACR,UAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,KAAKL,IADA;AAEbE,QAAAA,OAAO,EAAE,KAAKA,OAFD;AAGbD,QAAAA,IAAI,EAAE,KAAKA;AAHE,OAAf;;AAMA,UAAI,KAAKD,IAAL,KAAc,SAAlB,EAA6B;AAC3B,eAAOG,GAAG,CAACE,MAAJ,CAAW,KAAKN,UAAhB,EAA4BO,IAA5B,CAAiCF,MAAjC,CAAP;AACD;;AACD,aAAOD,GAAG,CAACE,MAAJ,CAAW,KAAKN,UAAhB,EAA4BO,IAA5B,CAAiC;AACtCD,QAAAA,MAAM,EAAE,KAAKL,IADyB;AAEtCE,QAAAA,OAAO,EAAE,KAAKA;AAFwB,OAAjC,CAAP;AAID",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\utils",
      "sourcesContent": [
        "//Este archivo contiene todas las respuestas, en caso de operaciones OK o con errores. \r\n\r\nexport default class Util {\r\n    constructor() {\r\n      this.statusCode = null;\r\n      this.type = null;\r\n      this.data = null;\r\n      this.message = null;\r\n    }\r\n  \r\n    setSuccess(statusCode, message, data) {\r\n      this.statusCode = statusCode;\r\n      this.message = message;\r\n      this.data = data;\r\n      this.type = 'success';\r\n    }\r\n  \r\n    setError(statusCode, message) {\r\n      this.statusCode = statusCode;\r\n      this.message = message;\r\n      this.type = 'error';\r\n    }\r\n  \r\n    send(res) {\r\n      const result = {\r\n        status: this.type,\r\n        message: this.message,\r\n        data: this.data,\r\n      };\r\n  \r\n      if (this.type === 'success') {\r\n        return res.status(this.statusCode).json(result);\r\n      }\r\n      return res.status(this.statusCode).json({\r\n        status: this.type,\r\n        message: this.message,\r\n      });\r\n    }\r\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142517
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\jugador.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\jugador.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\jugador.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\jugador.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "jugador.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _jugador = _interopRequireDefault(require(\"../controllers/jugador.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _jugador[\"default\"].obtenerJugadores); //obtener todos los jugadores almacenados en la base\n\nrouter.get('/:dni', _jugador[\"default\"].obtenerJugador); //obtener jugador por :dni\n\nrouter.post('/', _jugador[\"default\"].crearJugador); // crea un jugador, de acuerdo a los parámetros pasados en el body\n\nrouter.post('/crearJugadores', _jugador[\"default\"].crearJugadores); // crea un jugador, de acuerdo a los parámetros pasados en el body\n\nrouter.put('/:dni', _jugador[\"default\"].actualizarJugador); //actualizar los datos del jugador con :dni\n\nrouter[\"delete\"]('/:dni', _jugador[\"default\"].eliminarJugador); //elimina el jugador de la base\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp1Z2Fkb3IuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiSnVnYWRvckNvbnRyb2xsZXIiLCJvYnRlbmVySnVnYWRvcmVzIiwib2J0ZW5lckp1Z2Fkb3IiLCJwb3N0IiwiY3JlYXJKdWdhZG9yIiwiY3JlYXJKdWdhZG9yZXMiLCJwdXQiLCJhY3R1YWxpemFySnVnYWRvciIsImVsaW1pbmFySnVnYWRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOzs7O0FBRkEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZUMsb0JBQWtCQyxnQkFBakMsRSxDQUFvRDs7QUFDcERILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE9BQVgsRUFBbUJDLG9CQUFrQkUsY0FBckMsRSxDQUFzRDs7QUFFdERKLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLEdBQVosRUFBZ0JILG9CQUFrQkksWUFBbEMsRSxDQUFpRDs7QUFDakROLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLGlCQUFaLEVBQThCSCxvQkFBa0JLLGNBQWhELEUsQ0FBaUU7O0FBRWpFUCxNQUFNLENBQUNRLEdBQVAsQ0FBVyxPQUFYLEVBQW1CTixvQkFBa0JPLGlCQUFyQyxFLENBQTBEOztBQUUxRFQsTUFBTSxVQUFOLENBQWMsT0FBZCxFQUFzQkUsb0JBQWtCUSxlQUF4QyxFLENBQTBEOztlQUczQ1YsTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuaW1wb3J0IEp1Z2Fkb3JDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL2p1Z2Fkb3IuY29udHJvbGxlcic7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvJyxKdWdhZG9yQ29udHJvbGxlci5vYnRlbmVySnVnYWRvcmVzKTsgLy9vYnRlbmVyIHRvZG9zIGxvcyBqdWdhZG9yZXMgYWxtYWNlbmFkb3MgZW4gbGEgYmFzZVxyXG5yb3V0ZXIuZ2V0KCcvOmRuaScsSnVnYWRvckNvbnRyb2xsZXIub2J0ZW5lckp1Z2Fkb3IpOyAvL29idGVuZXIganVnYWRvciBwb3IgOmRuaVxyXG5cclxucm91dGVyLnBvc3QoJy8nLEp1Z2Fkb3JDb250cm9sbGVyLmNyZWFySnVnYWRvcik7IC8vIGNyZWEgdW4ganVnYWRvciwgZGUgYWN1ZXJkbyBhIGxvcyBwYXLDoW1ldHJvcyBwYXNhZG9zIGVuIGVsIGJvZHlcclxucm91dGVyLnBvc3QoJy9jcmVhckp1Z2Fkb3JlcycsSnVnYWRvckNvbnRyb2xsZXIuY3JlYXJKdWdhZG9yZXMpOyAvLyBjcmVhIHVuIGp1Z2Fkb3IsIGRlIGFjdWVyZG8gYSBsb3MgcGFyw6FtZXRyb3MgcGFzYWRvcyBlbiBlbCBib2R5XHJcblxyXG5yb3V0ZXIucHV0KCcvOmRuaScsSnVnYWRvckNvbnRyb2xsZXIuYWN0dWFsaXphckp1Z2Fkb3IpOyAgLy9hY3R1YWxpemFyIGxvcyBkYXRvcyBkZWwganVnYWRvciBjb24gOmRuaVxyXG5cclxucm91dGVyLmRlbGV0ZSgnLzpkbmknLEp1Z2Fkb3JDb250cm9sbGVyLmVsaW1pbmFySnVnYWRvcik7IC8vZWxpbWluYSBlbCBqdWdhZG9yIGRlIGxhIGJhc2VcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "jugador.js"
      ],
      "names": [
        "router",
        "get",
        "JugadorController",
        "obtenerJugadores",
        "obtenerJugador",
        "post",
        "crearJugador",
        "crearJugadores",
        "put",
        "actualizarJugador",
        "eliminarJugador"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,oBAAkBC,gBAAjC,E,CAAoD;;AACpDH,MAAM,CAACC,GAAP,CAAW,OAAX,EAAmBC,oBAAkBE,cAArC,E,CAAsD;;AAEtDJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAgBH,oBAAkBI,YAAlC,E,CAAiD;;AACjDN,MAAM,CAACK,IAAP,CAAY,iBAAZ,EAA8BH,oBAAkBK,cAAhD,E,CAAiE;;AAEjEP,MAAM,CAACQ,GAAP,CAAW,OAAX,EAAmBN,oBAAkBO,iBAArC,E,CAA0D;;AAE1DT,MAAM,UAAN,CAAc,OAAd,EAAsBE,oBAAkBQ,eAAxC,E,CAA0D;;eAG3CV,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport JugadorController from '../controllers/jugador.controller';\r\n\r\nrouter.get('/',JugadorController.obtenerJugadores); //obtener todos los jugadores almacenados en la base\r\nrouter.get('/:dni',JugadorController.obtenerJugador); //obtener jugador por :dni\r\n\r\nrouter.post('/',JugadorController.crearJugador); // crea un jugador, de acuerdo a los parámetros pasados en el body\r\nrouter.post('/crearJugadores',JugadorController.crearJugadores); // crea un jugador, de acuerdo a los parámetros pasados en el body\r\n\r\nrouter.put('/:dni',JugadorController.actualizarJugador);  //actualizar los datos del jugador con :dni\r\n\r\nrouter.delete('/:dni',JugadorController.eliminarJugador); //elimina el jugador de la base\r\n\r\n\r\nexport default router;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619017821901
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\jugador.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\jugador.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\jugador.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\jugador.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "jugador.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _JugadorService = _interopRequireDefault(require(\"../services/JugadorService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Jugador = _interopRequireDefault(require(\"../models/Jugador\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar JugadorController =\n/*#__PURE__*/\nfunction () {\n  function JugadorController() {\n    _classCallCheck(this, JugadorController);\n  }\n\n  _createClass(JugadorController, null, [{\n    key: \"crearJugador\",\n    value: function crearJugador(req, res) {\n      var nuevoJugador, jugadorCreado;\n      return regeneratorRuntime.async(function crearJugador$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoJugador = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].agregarJugador(nuevoJugador));\n\n            case 4:\n              jugadorCreado = _context.sent;\n              util.setSuccess(201, 'Jugador añadido', jugadorCreado);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"crearJugadores\",\n    value: function crearJugadores(req, res) {\n      var nuevosJugadores, jugadoresCreados;\n      return regeneratorRuntime.async(function crearJugadores$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              nuevosJugadores = req.body;\n              _context2.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].agregarJugadores(nuevosJugadores));\n\n            case 4:\n              jugadoresCreados = _context2.sent;\n              util.setSuccess(201, 'Jugadores añadidos', jugadoresCreados);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, \"No se añadieron los jugadores: \" + _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerJugador\",\n    value: function obtenerJugador(req, res) {\n      var dni, jugador;\n      return regeneratorRuntime.async(function obtenerJugador$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dni = req.params.dni;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].obtenerJugador(dni));\n\n            case 4:\n              jugador = _context3.sent;\n\n              if (jugador) {\n                util.setSuccess(200, 'Jugador obtenido', jugador);\n              } else {\n                util.setError(404, \"Jugador con dni: \".concat(dni, \" no encontrado\"));\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerJugadorPersona\",\n    value: function obtenerJugadorPersona(req, res) {\n      var dni, jugador, persona;\n      return regeneratorRuntime.async(function obtenerJugadorPersona$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dni = req.params.dni;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].obtenerJugador(dni));\n\n            case 4:\n              jugador = _context4.sent;\n\n              if (!jugador) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.next = 8;\n              return regeneratorRuntime.awrap(jugador.getPersona());\n\n            case 8:\n              persona = _context4.sent;\n              //console.log(\"persona obtenida:\",persona.dataValues);\n              util.setSuccess(200, 'Datos completos del jugador');\n\n            case 10:\n              _context4.next = 14;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores(req, res) {\n      var jugadores;\n      return regeneratorRuntime.async(function obtenerJugadores$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].obtenerJugadores());\n\n            case 3:\n              jugadores = _context5.sent;\n\n              if (jugadores && jugadores.length > 0) {\n                util.setSuccess(200, 'Jugadores obtenidos', jugadores);\n              } else {\n                util.setSuccess(200, 'No se encuentran Jugadores');\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(400, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"actualizarJugador\",\n    value: function actualizarJugador(req, res) {\n      var dni, jugador, jugadorActualizado;\n      return regeneratorRuntime.async(function actualizarJugador$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dni = req.params.dni;\n              jugador = req.body;\n              _context6.next = 5;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].actualizarJugador(dni, jugador));\n\n            case 5:\n              jugadorActualizado = _context6.sent;\n\n              if (jugadorActualizado) {\n                util.setSuccess(200, 'Jugador actualizado', jugadorActualizado);\n              } else {\n                util.setError(404, \"Jugador con dni: \".concat(dni, \" no encontrado \"));\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context6.prev = 10;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarJugador\",\n    value: function eliminarJugador(req, res) {\n      var dni, jugadorEliminado;\n      return regeneratorRuntime.async(function eliminarJugador$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              dni = req.params.dni;\n              _context7.next = 4;\n              return regeneratorRuntime.awrap(_JugadorService[\"default\"].eliminarJugador(dni));\n\n            case 4:\n              jugadorEliminado = _context7.sent;\n\n              if (jugadorEliminado) {\n                util.setSuccess(200, 'Jugador eliminada');\n              } else {\n                util.setError(404, \"Jugador con dni: \".concat(dni, \" no encontrado \"));\n              }\n\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](0);\n              util.setError(404, _context7.t0.message);\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return JugadorController;\n}();\n\nvar _default = JugadorController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp1Z2Fkb3IuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJ1dGlsIiwiVXRpbCIsIkp1Z2Fkb3JDb250cm9sbGVyIiwicmVxIiwicmVzIiwibnVldm9KdWdhZG9yIiwiYm9keSIsIkp1Z2Fkb3JTZXJ2aWNlIiwiYWdyZWdhckp1Z2Fkb3IiLCJqdWdhZG9yQ3JlYWRvIiwic2V0U3VjY2VzcyIsInNlbmQiLCJzZXRFcnJvciIsIm1lc3NhZ2UiLCJudWV2b3NKdWdhZG9yZXMiLCJhZ3JlZ2FySnVnYWRvcmVzIiwianVnYWRvcmVzQ3JlYWRvcyIsImRuaSIsInBhcmFtcyIsIm9idGVuZXJKdWdhZG9yIiwianVnYWRvciIsImdldFBlcnNvbmEiLCJwZXJzb25hIiwib2J0ZW5lckp1Z2Fkb3JlcyIsImp1Z2Fkb3JlcyIsImxlbmd0aCIsImFjdHVhbGl6YXJKdWdhZG9yIiwianVnYWRvckFjdHVhbGl6YWRvIiwiZWxpbWluYXJKdWdhZG9yIiwianVnYWRvckVsaW1pbmFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHLElBQUlDLGlCQUFKLEVBQWI7O0lBRU1DLGlCOzs7Ozs7Ozs7aUNBQ3dCQyxHLEVBQUtDLEc7Ozs7Ozs7QUFFakJDLGNBQUFBLFksR0FBZUYsR0FBRyxDQUFDRyxJOzs4Q0FDR0MsMkJBQWVDLGNBQWYsQ0FBOEJILFlBQTlCLEM7OztBQUF0QkksY0FBQUEsYTtBQUVOVCxjQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsaUJBQXBCLEVBQXNDRCxhQUF0QzsrQ0FDT1QsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixZQUFNQyxPQUF4QjsrQ0FDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7bUNBSWFELEcsRUFBS0MsRzs7Ozs7OztBQUduQlUsY0FBQUEsZSxHQUFrQlgsR0FBRyxDQUFDRyxJOzs4Q0FDR0MsMkJBQWVRLGdCQUFmLENBQWdDRCxlQUFoQyxDOzs7QUFBekJFLGNBQUFBLGdCO0FBQ05oQixjQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0Isb0JBQXBCLEVBQXlDTSxnQkFBekM7Z0RBQ09oQixJQUFJLENBQUNXLElBQUwsQ0FBVVAsR0FBVixDOzs7OztBQUdQSixjQUFBQSxJQUFJLENBQUNZLFFBQUwsQ0FBYyxHQUFkLEVBQWtCLG9DQUFrQyxhQUFNQyxPQUExRDtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7bUNBSWFELEcsRUFBS0MsRzs7Ozs7OztBQUVuQmEsY0FBQUEsRyxHQUFNZCxHQUFHLENBQUNlLE1BQUosQ0FBV0QsRzs7OENBQ0RWLDJCQUFlWSxjQUFmLENBQThCRixHQUE5QixDOzs7QUFBaEJHLGNBQUFBLE87O0FBRU4sa0JBQUdBLE9BQUgsRUFBVztBQUNQcEIsZ0JBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQixFQUFvQixrQkFBcEIsRUFBdUNVLE9BQXZDO0FBQ0gsZUFGRCxNQUdJO0FBQ0FwQixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCw2QkFBc0NLLEdBQXRDO0FBQ0g7O2dEQUNNakIsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7MENBSW9CRCxHLEVBQUlDLEc7Ozs7Ozs7QUFFekJhLGNBQUFBLEcsR0FBTWQsR0FBRyxDQUFDZSxNQUFKLENBQVdELEc7OzhDQUNEViwyQkFBZVksY0FBZixDQUE4QkYsR0FBOUIsQzs7O0FBQWhCRyxjQUFBQSxPOzttQkFDRkEsTzs7Ozs7OzhDQUNzQkEsT0FBTyxDQUFDQyxVQUFSLEU7OztBQUFoQkMsY0FBQUEsTztBQUNOO0FBQ0F0QixjQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IsNkJBQXBCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FDQVNrQlAsRyxFQUFLQyxHOzs7Ozs7Ozs4Q0FFSEcsMkJBQWVnQixnQkFBZixFOzs7QUFBbEJDLGNBQUFBLFM7O0FBRU4sa0JBQUdBLFNBQVMsSUFBSUEsU0FBUyxDQUFDQyxNQUFWLEdBQW1CLENBQW5DLEVBQXFDO0FBQ2pDekIsZ0JBQUFBLElBQUksQ0FBQ1UsVUFBTCxDQUFnQixHQUFoQixFQUFvQixxQkFBcEIsRUFBMENjLFNBQTFDO0FBQ0gsZUFGRCxNQUdJO0FBQ0F4QixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLDRCQUFwQjtBQUNIOztnREFDTVYsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7c0NBSWdCRCxHLEVBQUtDLEc7Ozs7Ozs7QUFHdEJhLGNBQUFBLEcsR0FBTWQsR0FBRyxDQUFDZSxNQUFKLENBQVdELEc7QUFDakJHLGNBQUFBLE8sR0FBVWpCLEdBQUcsQ0FBQ0csSTs7OENBRWFDLDJCQUFlbUIsaUJBQWYsQ0FBaUNULEdBQWpDLEVBQXFDRyxPQUFyQyxDOzs7QUFBM0JPLGNBQUFBLGtCOztBQUVOLGtCQUFHQSxrQkFBSCxFQUFzQjtBQUNsQjNCLGdCQUFBQSxJQUFJLENBQUNVLFVBQUwsQ0FBZ0IsR0FBaEIsRUFBb0IscUJBQXBCLEVBQTBDaUIsa0JBQTFDO0FBQ0gsZUFGRCxNQUdJO0FBQ0EzQixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCw2QkFBc0NLLEdBQXRDO0FBQ0g7O2dEQUVNakIsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7b0NBSWNELEcsRUFBS0MsRzs7Ozs7OztBQUVwQmEsY0FBQUEsRyxHQUFNZCxHQUFHLENBQUNlLE1BQUosQ0FBV0QsRzs7OENBQ1FWLDJCQUFlcUIsZUFBZixDQUErQlgsR0FBL0IsQzs7O0FBQXpCWSxjQUFBQSxnQjs7QUFFTixrQkFBR0EsZ0JBQUgsRUFBb0I7QUFDaEI3QixnQkFBQUEsSUFBSSxDQUFDVSxVQUFMLENBQWdCLEdBQWhCLEVBQW9CLG1CQUFwQjtBQUNILGVBRkQsTUFHSTtBQUNBVixnQkFBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCw2QkFBc0NLLEdBQXRDO0FBQ0g7O2dEQUVNakIsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7QUFHUEosY0FBQUEsSUFBSSxDQUFDWSxRQUFMLENBQWMsR0FBZCxFQUFrQixhQUFNQyxPQUF4QjtnREFDT2IsSUFBSSxDQUFDVyxJQUFMLENBQVVQLEdBQVYsQzs7Ozs7Ozs7Ozs7Ozs7ZUFNSkYsaUIiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEp1Z2Fkb3JTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL0p1Z2Fkb3JTZXJ2aWNlJztcclxuaW1wb3J0IFV0aWwgZnJvbSAnLi4vdXRpbHMvVXRpbHMnO1xyXG5pbXBvcnQgSnVnYWRvciBmcm9tICcuLi9tb2RlbHMvSnVnYWRvcic7XHJcblxyXG5jb25zdCB1dGlsID0gbmV3IFV0aWwoKTtcclxuXHJcbmNsYXNzIEp1Z2Fkb3JDb250cm9sbGVyIHtcclxuICAgIHN0YXRpYyBhc3luYyBjcmVhckp1Z2Fkb3IocmVxLCByZXMpIHsgICAgXHJcbiAgICAgICAgdHJ5IHsgICAgXHJcbiAgICAgICAgICAgIGNvbnN0IG51ZXZvSnVnYWRvciA9IHJlcS5ib2R5O1xyXG4gICAgICAgICAgICBjb25zdCBqdWdhZG9yQ3JlYWRvID0gYXdhaXQgSnVnYWRvclNlcnZpY2UuYWdyZWdhckp1Z2Fkb3IobnVldm9KdWdhZG9yKTtcclxuXHJcbiAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDEsJ0p1Z2Fkb3IgYcOxYWRpZG8nLGp1Z2Fkb3JDcmVhZG8pO1xyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlcnJvcil7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDAwLGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBjcmVhckp1Z2Fkb3JlcyhyZXEsIHJlcykgeyAgICBcclxuICAgICAgICAvL1JlY2liZSB1biBhcnJlZ2xvIG9iamV0b3MgSlVHQURPUiBwYXJhIHNlciBjcmVhZG9zLCBzZSBpbnNlcnRhbiB0b2RhcyAoc2kgbm8gaGF5IGVycm9yKSwgbyBuaW5ndW5vIChzaSBoYXkgZXJyb3IpXHJcbiAgICAgICAgdHJ5IHsgICAgXHJcbiAgICAgICAgICAgIGNvbnN0IG51ZXZvc0p1Z2Fkb3JlcyA9IHJlcS5ib2R5O1xyXG4gICAgICAgICAgICBjb25zdCBqdWdhZG9yZXNDcmVhZG9zID0gYXdhaXQgSnVnYWRvclNlcnZpY2UuYWdyZWdhckp1Z2Fkb3JlcyhudWV2b3NKdWdhZG9yZXMpO1xyXG4gICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAxLCdKdWdhZG9yZXMgYcOxYWRpZG9zJyxqdWdhZG9yZXNDcmVhZG9zKTtcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3Ipe1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwMCxcIk5vIHNlIGHDsWFkaWVyb24gbG9zIGp1Z2Fkb3JlczogXCIrZXJyb3IubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJKdWdhZG9yKHJlcSwgcmVzKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBkbmkgPSByZXEucGFyYW1zLmRuaTtcclxuICAgICAgICAgICAgY29uc3QganVnYWRvciA9IGF3YWl0IEp1Z2Fkb3JTZXJ2aWNlLm9idGVuZXJKdWdhZG9yKGRuaSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZihqdWdhZG9yKXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDAsJ0p1Z2Fkb3Igb2J0ZW5pZG8nLGp1Z2Fkb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxgSnVnYWRvciBjb24gZG5pOiAke2RuaX0gbm8gZW5jb250cmFkb2ApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICB1dGlsLnNldEVycm9yKDQwNCxlcnJvci5tZXNzYWdlKTsgICBcclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckp1Z2Fkb3JQZXJzb25hKHJlcSxyZXMpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRuaSA9IHJlcS5wYXJhbXMuZG5pO1xyXG4gICAgICAgICAgICBjb25zdCBqdWdhZG9yID0gYXdhaXQgSnVnYWRvclNlcnZpY2Uub2J0ZW5lckp1Z2Fkb3IoZG5pKTtcclxuICAgICAgICAgICAgaWYgKGp1Z2Fkb3Ipe1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcGVyc29uYSA9IGF3YWl0IGp1Z2Fkb3IuZ2V0UGVyc29uYSgpO1xyXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcInBlcnNvbmEgb2J0ZW5pZGE6XCIscGVyc29uYS5kYXRhVmFsdWVzKTtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDAsJ0RhdG9zIGNvbXBsZXRvcyBkZWwganVnYWRvcicsKVxyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJKdWdhZG9yZXMocmVxLCByZXMpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGp1Z2Fkb3JlcyA9IGF3YWl0IEp1Z2Fkb3JTZXJ2aWNlLm9idGVuZXJKdWdhZG9yZXMoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKGp1Z2Fkb3JlcyAmJiBqdWdhZG9yZXMubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdKdWdhZG9yZXMgb2J0ZW5pZG9zJyxqdWdhZG9yZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB1dGlsLnNldFN1Y2Nlc3MoMjAwLCdObyBzZSBlbmN1ZW50cmFuIEp1Z2Fkb3JlcycpOyBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdXRpbC5zZXRFcnJvcig0MDAsZXJyb3IubWVzc2FnZSk7ICAgXHJcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnNlbmQocmVzKTsgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGFjdHVhbGl6YXJKdWdhZG9yKHJlcSwgcmVzKXtcclxuICAgICAgICAvL3ByZWd1bnRhciBwb3IgY2FtYmlvcyBkZSBkbmkgPyBcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBkbmkgPSByZXEucGFyYW1zLmRuaTtcclxuICAgICAgICAgICAgY29uc3QganVnYWRvciA9IHJlcS5ib2R5O1xyXG5cclxuICAgICAgICAgICAgY29uc3QganVnYWRvckFjdHVhbGl6YWRvID0gYXdhaXQgSnVnYWRvclNlcnZpY2UuYWN0dWFsaXphckp1Z2Fkb3IoZG5pLGp1Z2Fkb3IpO1xyXG5cclxuICAgICAgICAgICAgaWYoanVnYWRvckFjdHVhbGl6YWRvKXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDAsJ0p1Z2Fkb3IgYWN0dWFsaXphZG8nLGp1Z2Fkb3JBY3R1YWxpemFkbyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBKdWdhZG9yIGNvbiBkbmk6ICR7ZG5pfSBubyBlbmNvbnRyYWRvIGApO1xyXG4gICAgICAgICAgICB9IFxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGVycm9yLm1lc3NhZ2UpOyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hckp1Z2Fkb3IocmVxLCByZXMpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRuaSA9IHJlcS5wYXJhbXMuZG5pO1xyXG4gICAgICAgICAgICBjb25zdCBqdWdhZG9yRWxpbWluYWRvID0gYXdhaXQgSnVnYWRvclNlcnZpY2UuZWxpbWluYXJKdWdhZG9yKGRuaSk7XHJcblxyXG4gICAgICAgICAgICBpZihqdWdhZG9yRWxpbWluYWRvKXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0U3VjY2VzcygyMDAsJ0p1Z2Fkb3IgZWxpbWluYWRhJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGBKdWdhZG9yIGNvbiBkbmk6ICR7ZG5pfSBubyBlbmNvbnRyYWRvIGApO1xyXG4gICAgICAgICAgICB9IFxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuc2VuZChyZXMpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHV0aWwuc2V0RXJyb3IoNDA0LGVycm9yLm1lc3NhZ2UpOyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zZW5kKHJlcyk7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSnVnYWRvckNvbnRyb2xsZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "jugador.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "JugadorController",
        "req",
        "res",
        "nuevoJugador",
        "body",
        "JugadorService",
        "agregarJugador",
        "jugadorCreado",
        "setSuccess",
        "send",
        "setError",
        "message",
        "nuevosJugadores",
        "agregarJugadores",
        "jugadoresCreados",
        "dni",
        "params",
        "obtenerJugador",
        "jugador",
        "getPersona",
        "persona",
        "obtenerJugadores",
        "jugadores",
        "length",
        "actualizarJugador",
        "jugadorActualizado",
        "eliminarJugador",
        "jugadorEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,iB;;;;;;;;;iCACwBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,Y,GAAeF,GAAG,CAACG,I;;8CACGC,2BAAeC,cAAf,CAA8BH,YAA9B,C;;;AAAtBI,cAAAA,a;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCD,aAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAGnBU,cAAAA,e,GAAkBX,GAAG,CAACG,I;;8CACGC,2BAAeQ,gBAAf,CAAgCD,eAAhC,C;;;AAAzBE,cAAAA,gB;AACNhB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCM,gBAAzC;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,oCAAkC,aAAMC,OAA1D;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBa,cAAAA,G,GAAMd,GAAG,CAACe,MAAJ,CAAWD,G;;8CACDV,2BAAeY,cAAf,CAA8BF,GAA9B,C;;;AAAhBG,cAAAA,O;;AAEN,kBAAGA,OAAH,EAAW;AACPpB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCU,OAAvC;AACH,eAFD,MAGI;AACApB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCK,GAAtC;AACH;;gDACMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;0CAIoBD,G,EAAIC,G;;;;;;;AAEzBa,cAAAA,G,GAAMd,GAAG,CAACe,MAAJ,CAAWD,G;;8CACDV,2BAAeY,cAAf,CAA8BF,GAA9B,C;;;AAAhBG,cAAAA,O;;mBACFA,O;;;;;;8CACsBA,OAAO,CAACC,UAAR,E;;;AAAhBC,cAAAA,O;AACN;AACAtB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,6BAApB;;;;;;;;;;;;;;;;;;;qCASkBP,G,EAAKC,G;;;;;;;;8CAEHG,2BAAegB,gBAAf,E;;;AAAlBC,cAAAA,S;;AAEN,kBAAGA,SAAS,IAAIA,SAAS,CAACC,MAAV,GAAmB,CAAnC,EAAqC;AACjCzB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0Cc,SAA1C;AACH,eAFD,MAGI;AACAxB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,4BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAGtBa,cAAAA,G,GAAMd,GAAG,CAACe,MAAJ,CAAWD,G;AACjBG,cAAAA,O,GAAUjB,GAAG,CAACG,I;;8CAEaC,2BAAemB,iBAAf,CAAiCT,GAAjC,EAAqCG,OAArC,C;;;AAA3BO,cAAAA,kB;;AAEN,kBAAGA,kBAAH,EAAsB;AAClB3B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0CiB,kBAA1C;AACH,eAFD,MAGI;AACA3B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCK,GAAtC;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBa,cAAAA,G,GAAMd,GAAG,CAACe,MAAJ,CAAWD,G;;8CACQV,2BAAeqB,eAAf,CAA+BX,GAA/B,C;;;AAAzBY,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAoB;AAChB7B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAsCK,GAAtC;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAMJF,iB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import JugadorService from '../services/JugadorService';\r\nimport Util from '../utils/Utils';\r\nimport Jugador from '../models/Jugador';\r\n\r\nconst util = new Util();\r\n\r\nclass JugadorController {\r\n    static async crearJugador(req, res) {    \r\n        try {    \r\n            const nuevoJugador = req.body;\r\n            const jugadorCreado = await JugadorService.agregarJugador(nuevoJugador);\r\n\r\n            util.setSuccess(201,'Jugador añadido',jugadorCreado);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async crearJugadores(req, res) {    \r\n        //Recibe un arreglo objetos JUGADOR para ser creados, se insertan todas (si no hay error), o ninguno (si hay error)\r\n        try {    \r\n            const nuevosJugadores = req.body;\r\n            const jugadoresCreados = await JugadorService.agregarJugadores(nuevosJugadores);\r\n            util.setSuccess(201,'Jugadores añadidos',jugadoresCreados);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,\"No se añadieron los jugadores: \"+error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerJugador(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugador = await JugadorService.obtenerJugador(dni);\r\n            \r\n            if(jugador){\r\n                util.setSuccess(200,'Jugador obtenido',jugador);\r\n            }\r\n            else{\r\n                util.setError(404,`Jugador con dni: ${dni} no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerJugadorPersona(req,res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugador = await JugadorService.obtenerJugador(dni);\r\n            if (jugador){\r\n                const persona = await jugador.getPersona();\r\n                //console.log(\"persona obtenida:\",persona.dataValues);\r\n                util.setSuccess(200,'Datos completos del jugador',)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    static async obtenerJugadores(req, res){\r\n        try {\r\n            const jugadores = await JugadorService.obtenerJugadores();\r\n            \r\n            if(jugadores && jugadores.length > 0){\r\n                util.setSuccess(200,'Jugadores obtenidos',jugadores);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Jugadores'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async actualizarJugador(req, res){\r\n        //preguntar por cambios de dni ? \r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugador = req.body;\r\n\r\n            const jugadorActualizado = await JugadorService.actualizarJugador(dni,jugador);\r\n\r\n            if(jugadorActualizado){\r\n                util.setSuccess(200,'Jugador actualizado',jugadorActualizado);\r\n            }\r\n            else{\r\n                util.setError(404,`Jugador con dni: ${dni} no encontrado `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarJugador(req, res){\r\n        try {\r\n            const dni = req.params.dni;\r\n            const jugadorEliminado = await JugadorService.eliminarJugador(dni);\r\n\r\n            if(jugadorEliminado){\r\n                util.setSuccess(200,'Jugador eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Jugador con dni: ${dni} no encontrado `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default JugadorController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619017277816
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\JugadorService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\JugadorService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\JugadorService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\JugadorService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "JugadorService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Jugador = _interopRequireDefault(require(\"../models/Jugador\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar JugadorService =\n/*#__PURE__*/\nfunction () {\n  function JugadorService() {\n    _classCallCheck(this, JugadorService);\n  }\n\n  _createClass(JugadorService, null, [{\n    key: \"agregarJugador\",\n    value: function agregarJugador(nuevoJugador) {\n      return regeneratorRuntime.async(function agregarJugador$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].create(nuevoJugador));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"agregarJugadores\",\n    value: function agregarJugadores(nuevosJugadores) {\n      return regeneratorRuntime.async(function agregarJugadores$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].bulkCreate(nuevosJugadores, {\n                returning: true\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw new Error(_context2.t0.parent.detail);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores() {\n      return regeneratorRuntime.async(function obtenerJugadores$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findAll({\n                attributes: ['dni', 'legajo', 'facultad']\n              }));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerJugador\",\n    value: function obtenerJugador(dni) {\n      var jugador;\n      return regeneratorRuntime.async(function obtenerJugador$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findByPk(dni));\n\n            case 3:\n              jugador = _context4.sent;\n              return _context4.abrupt(\"return\", jugador);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarJugador\",\n    value: function actualizarJugador(dni, jugador) {\n      var jugadorExistente;\n      return regeneratorRuntime.async(function actualizarJugador$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findByPk(dni));\n\n            case 3:\n              jugadorExistente = _context5.sent;\n\n              if (!jugadorExistente) {\n                _context5.next = 10;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].update(jugador, {\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              return _context5.abrupt(\"return\", jugador);\n\n            case 10:\n              return _context5.abrupt(\"return\", null);\n\n            case 11:\n              _context5.next = 16;\n              break;\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarJugador\",\n    value: function eliminarJugador(dni) {\n      var jugadorExistente, jugadorEliminado;\n      return regeneratorRuntime.async(function eliminarJugador$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].findByPk(dni));\n\n            case 3:\n              jugadorExistente = _context6.sent;\n\n              if (!jugadorExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Jugador[\"default\"].destroy({\n                where: {\n                  dni: dni\n                }\n              }));\n\n            case 7:\n              jugadorEliminado = _context6.sent;\n              return _context6.abrupt(\"return\", jugadorEliminado);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return JugadorService;\n}();\n\nvar _default = JugadorService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3JTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIkp1Z2Fkb3JTZXJ2aWNlIiwibnVldm9KdWdhZG9yIiwiSnVnYWRvciIsImNyZWF0ZSIsIm51ZXZvc0p1Z2Fkb3JlcyIsImJ1bGtDcmVhdGUiLCJyZXR1cm5pbmciLCJFcnJvciIsInBhcmVudCIsImRldGFpbCIsImZpbmRBbGwiLCJhdHRyaWJ1dGVzIiwiZG5pIiwiZmluZEJ5UGsiLCJqdWdhZG9yIiwianVnYWRvckV4aXN0ZW50ZSIsInVwZGF0ZSIsIndoZXJlIiwiZGVzdHJveSIsImp1Z2Fkb3JFbGltaW5hZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVNQSxjOzs7Ozs7Ozs7bUNBQzBCQyxZOzs7Ozs7OzhDQUVYQyxvQkFBUUMsTUFBUixDQUFlRixZQUFmLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cUNBT1dHLGU7Ozs7Ozs7OENBRVhGLG9CQUFRRyxVQUFSLENBQW1CRCxlQUFuQixFQUFtQztBQUFDRSxnQkFBQUEsU0FBUyxFQUFDO0FBQVgsZUFBbkMsQzs7Ozs7Ozs7b0JBRVAsSUFBSUMsS0FBSixDQUFXLGFBQU1DLE1BQU4sQ0FBYUMsTUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQU1PUCxvQkFBUVEsT0FBUixDQUFnQjtBQUMzQkMsZ0JBQUFBLFVBQVUsRUFBQyxDQUFDLEtBQUQsRUFBTyxRQUFQLEVBQWdCLFVBQWhCO0FBRGdCLGVBQWhCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBU1dDLEc7Ozs7Ozs7OzhDQUVGVixvQkFBUVcsUUFBUixDQUFpQkQsR0FBakIsQzs7O0FBQWhCRSxjQUFBQSxPO2dEQUNDQSxPOzs7Ozs7Ozs7Ozs7Ozs7O3NDQU9vQkYsRyxFQUFJRSxPOzs7Ozs7Ozs4Q0FFQVosb0JBQVFXLFFBQVIsQ0FBaUJELEdBQWpCLEM7OztBQUF6QkcsY0FBQUEsZ0I7O21CQUVIQSxnQjs7Ozs7OzhDQUNLYixvQkFBUWMsTUFBUixDQUFlRixPQUFmLEVBQXVCO0FBQUNHLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLEdBQUcsRUFBQ0E7QUFBTDtBQUFQLGVBQXZCLEM7OztnREFDQ0UsTzs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29DQVFnQkYsRzs7Ozs7Ozs7OENBRU1WLG9CQUFRVyxRQUFSLENBQWlCRCxHQUFqQixDOzs7QUFBekJHLGNBQUFBLGdCOzttQkFFSEEsZ0I7Ozs7Ozs4Q0FDOEJiLG9CQUFRZ0IsT0FBUixDQUFnQjtBQUFDRCxnQkFBQUEsS0FBSyxFQUFDO0FBQUNMLGtCQUFBQSxHQUFHLEVBQUNBO0FBQUw7QUFBUCxlQUFoQixDOzs7QUFBekJPLGNBQUFBLGdCO2dEQUNDQSxnQjs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBU0FuQixjIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKdWdhZG9yIGZyb20gJy4uL21vZGVscy9KdWdhZG9yJztcclxuXHJcbmNsYXNzIEp1Z2Fkb3JTZXJ2aWNlIHsgIFxyXG4gICAgc3RhdGljIGFzeW5jIGFncmVnYXJKdWdhZG9yKG51ZXZvSnVnYWRvcikge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBKdWdhZG9yLmNyZWF0ZShudWV2b0p1Z2Fkb3IpO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgYWdyZWdhckp1Z2Fkb3JlcyhudWV2b3NKdWdhZG9yZXMpe1xyXG4gICAgICB0cnl7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IEp1Z2Fkb3IuYnVsa0NyZWF0ZShudWV2b3NKdWdhZG9yZXMse3JldHVybmluZzp0cnVlfSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7IFxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvciAoZXJyb3IucGFyZW50LmRldGFpbCk7IC8vZWwgb2JqZXRvIHF1ZSBwcm92b2PDsyBlbCBlcnJvci4gTm8gc2UgaW5zZXJ0YSBuaW5nw7puIG9iamV0by5cclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckp1Z2Fkb3Jlcygpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBKdWdhZG9yLmZpbmRBbGwoe1xyXG4gICAgICAgICAgYXR0cmlidXRlczpbJ2RuaScsJ2xlZ2FqbycsJ2ZhY3VsdGFkJ119XHJcbiAgICAgICAgKTtcclxuICAgICAgfSBcclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7ICAgXHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckp1Z2Fkb3IoZG5pKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBqdWdhZG9yID0gYXdhaXQgSnVnYWRvci5maW5kQnlQayhkbmkpO1xyXG4gICAgICAgIHJldHVybiBqdWdhZG9yOyBcclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgXHJcbiAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphckp1Z2Fkb3IoZG5pLGp1Z2Fkb3Ipe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGp1Z2Fkb3JFeGlzdGVudGUgPSBhd2FpdCBKdWdhZG9yLmZpbmRCeVBrKGRuaSk7XHJcblxyXG4gICAgICAgIGlmKGp1Z2Fkb3JFeGlzdGVudGUpe1xyXG4gICAgICAgICAgYXdhaXQgSnVnYWRvci51cGRhdGUoanVnYWRvcix7d2hlcmU6e2RuaTpkbml9fSk7XHJcbiAgICAgICAgICByZXR1cm4ganVnYWRvcjsgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICBzdGF0aWMgYXN5bmMgZWxpbWluYXJKdWdhZG9yKGRuaSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QganVnYWRvckV4aXN0ZW50ZSA9IGF3YWl0IEp1Z2Fkb3IuZmluZEJ5UGsoZG5pKTtcclxuXHJcbiAgICAgICAgaWYoanVnYWRvckV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBjb25zdCBqdWdhZG9yRWxpbWluYWRvID0gYXdhaXQgSnVnYWRvci5kZXN0cm95KHt3aGVyZTp7ZG5pOmRuaX19KTtcclxuICAgICAgICAgIHJldHVybiBqdWdhZG9yRWxpbWluYWRvOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG59IFxyXG4gIFxyXG4gIGV4cG9ydCBkZWZhdWx0IEp1Z2Fkb3JTZXJ2aWNlO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "JugadorService.js"
      ],
      "names": [
        "JugadorService",
        "nuevoJugador",
        "Jugador",
        "create",
        "nuevosJugadores",
        "bulkCreate",
        "returning",
        "Error",
        "parent",
        "detail",
        "findAll",
        "attributes",
        "dni",
        "findByPk",
        "jugador",
        "jugadorExistente",
        "update",
        "where",
        "destroy",
        "jugadorEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,c;;;;;;;;;mCAC0BC,Y;;;;;;;8CAEXC,oBAAQC,MAAR,CAAeF,YAAf,C;;;;;;;;;;;;;;;;;;;qCAOWG,e;;;;;;;8CAEXF,oBAAQG,UAAR,CAAmBD,eAAnB,EAAmC;AAACE,gBAAAA,SAAS,EAAC;AAAX,eAAnC,C;;;;;;;;oBAEP,IAAIC,KAAJ,CAAW,aAAMC,MAAN,CAAaC,MAAxB,C;;;;;;;;;;;;;;;;;;8CAMOP,oBAAQQ,OAAR,CAAgB;AAC3BC,gBAAAA,UAAU,EAAC,CAAC,KAAD,EAAO,QAAP,EAAgB,UAAhB;AADgB,eAAhB,C;;;;;;;;;;;;;;;;;;;mCASWC,G;;;;;;;;8CAEFV,oBAAQW,QAAR,CAAiBD,GAAjB,C;;;AAAhBE,cAAAA,O;gDACCA,O;;;;;;;;;;;;;;;;sCAOoBF,G,EAAIE,O;;;;;;;;8CAEAZ,oBAAQW,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CACKb,oBAAQc,MAAR,CAAeF,OAAf,EAAuB;AAACG,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAvB,C;;;gDACCE,O;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBF,G;;;;;;;;8CAEMV,oBAAQW,QAAR,CAAiBD,GAAjB,C;;;AAAzBG,cAAAA,gB;;mBAEHA,gB;;;;;;8CAC8Bb,oBAAQgB,OAAR,CAAgB;AAACD,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,GAAG,EAACA;AAAL;AAAP,eAAhB,C;;;AAAzBO,cAAAA,gB;gDACCA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASAnB,c",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Jugador from '../models/Jugador';\r\n\r\nclass JugadorService {  \r\n    static async agregarJugador(nuevoJugador) {\r\n      try {\r\n        return await Jugador.create(nuevoJugador);\r\n      } \r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n  static async agregarJugadores(nuevosJugadores){\r\n      try{\r\n        return await Jugador.bulkCreate(nuevosJugadores,{returning:true});\r\n      } catch (error) { \r\n        throw new Error (error.parent.detail); //el objeto que provocó el error. No se inserta ningún objeto.\r\n      }\r\n  }\r\n\r\n    static async obtenerJugadores(){\r\n      try {\r\n        return await Jugador.findAll({\r\n          attributes:['dni','legajo','facultad']}\r\n        );\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerJugador(dni){\r\n      try {\r\n        const jugador = await Jugador.findByPk(dni);\r\n        return jugador; \r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n    \r\n    static async actualizarJugador(dni,jugador){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          await Jugador.update(jugador,{where:{dni:dni}});\r\n          return jugador; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarJugador(dni){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n          return jugadorEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n} \r\n  \r\n  export default JugadorService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619018786637
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Jugador.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Jugador.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Jugador.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Jugador.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Jugador.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Persona = _interopRequireDefault(require(\"./Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Jugador = _database.sequelize.define('Jugador', {\n  dni: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  legajo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  facultad: {\n    type: _sequelize[\"default\"].TEXT\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n}); //Jugador.belongsTo(Persona, {foreingKey: 'dni', sourceKey: 'dni' });  //no agregué como clave foránea porque agrega un atributo Persondni (eso lo tiene la base)\n//Jugador.belongsTo(Persona, { foreingKey: 'dni', targetKey:'dni'});\n\n\nJugador.belongsTo(_Persona[\"default\"], {\n  foreignKey: 'dni',\n  as: 'persona'\n});\n/*Jugador.buscarJugador = async function (dni){\r\n    return await this.findOne({\r\n        where: {dni},\r\n      });\r\n    }; */\n\nvar _default = Jugador;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3IuanMiXSwibmFtZXMiOlsiSnVnYWRvciIsInNlcXVlbGl6ZSIsImRlZmluZSIsImRuaSIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImxlZ2FqbyIsIlRFWFQiLCJmYWN1bHRhZCIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiLCJiZWxvbmdzVG8iLCJQZXJzb25hIiwiZm9yZWlnbktleSIsImFzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFGbUM7QUFJbkMsSUFBTUEsT0FBTyxHQUFHQyxvQkFBVUMsTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUNwQ0MsRUFBQUEsR0FBRyxFQUFFO0FBQ0RDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRGY7QUFFREMsSUFBQUEsVUFBVSxFQUFFO0FBRlgsR0FEK0I7QUFLcENDLEVBQUFBLE1BQU0sRUFBRTtBQUNKSixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaLEdBTDRCO0FBUXBDQyxFQUFBQSxRQUFRLEVBQUU7QUFDTk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEVjtBQVIwQixDQUE1QixFQVdUO0FBQ0NFLEVBQUFBLFVBQVUsRUFBRSxLQURiO0FBRUNDLEVBQUFBLGVBQWUsRUFBRTtBQUZsQixDQVhTLENBQWhCLEMsQ0FrQkE7QUFDQTs7O0FBRUFaLE9BQU8sQ0FBQ2EsU0FBUixDQUFrQkMsbUJBQWxCLEVBQTBCO0FBQUNDLEVBQUFBLFVBQVUsRUFBRSxLQUFiO0FBQW9CQyxFQUFBQSxFQUFFLEVBQUM7QUFBdkIsQ0FBMUI7QUFFQTs7Ozs7O2VBTWVoQixPIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IC8vIGNsYXNlIFNlcXVlbGl6ZVxyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZScgLy9jb25leGlvbiBhIGxhIGJhc2VcclxuaW1wb3J0IFBlcnNvbmEgZnJvbSAnLi9QZXJzb25hJ1xyXG5cclxuY29uc3QgSnVnYWRvciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0p1Z2Fkb3InLCB7XHJcbiAgICAgICAgZG5pOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICAgICAgfSwgXHJcbiAgICAgICAgbGVnYWpvOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICAgICAgfSxcclxuICAgICAgICBmYWN1bHRhZDoge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgICAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUgXHJcbiAgICB9XHJcblxyXG4pO1xyXG5cclxuLy9KdWdhZG9yLmJlbG9uZ3NUbyhQZXJzb25hLCB7Zm9yZWluZ0tleTogJ2RuaScsIHNvdXJjZUtleTogJ2RuaScgfSk7ICAvL25vIGFncmVndcOpIGNvbW8gY2xhdmUgZm9yw6FuZWEgcG9ycXVlIGFncmVnYSB1biBhdHJpYnV0byBQZXJzb25kbmkgKGVzbyBsbyB0aWVuZSBsYSBiYXNlKVxyXG4vL0p1Z2Fkb3IuYmVsb25nc1RvKFBlcnNvbmEsIHsgZm9yZWluZ0tleTogJ2RuaScsIHRhcmdldEtleTonZG5pJ30pO1xyXG5cclxuSnVnYWRvci5iZWxvbmdzVG8oUGVyc29uYSx7Zm9yZWlnbktleTogJ2RuaScsIGFzOidwZXJzb25hJ30pO1xyXG5cclxuLypKdWdhZG9yLmJ1c2Nhckp1Z2Fkb3IgPSBhc3luYyBmdW5jdGlvbiAoZG5pKXtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLmZpbmRPbmUoe1xyXG4gICAgICAgIHdoZXJlOiB7ZG5pfSxcclxuICAgICAgfSk7XHJcbiAgICB9OyAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSnVnYWRvcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Jugador.js"
      ],
      "names": [
        "Jugador",
        "sequelize",
        "define",
        "dni",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "legajo",
        "TEXT",
        "facultad",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Persona",
        "foreignKey",
        "as"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAFmC;AAInC,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AACpCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,OADf;AAEDC,IAAAA,UAAU,EAAE;AAFX,GAD+B;AAKpCC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAL4B;AAQpCC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAUI;AADV;AAR0B,CAA5B,EAWT;AACCE,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAXS,CAAhB,C,CAkBA;AACA;;;AAEAZ,OAAO,CAACa,SAAR,CAAkBC,mBAAlB,EAA0B;AAACC,EAAAA,UAAU,EAAE,KAAb;AAAoBC,EAAAA,EAAE,EAAC;AAAvB,CAA1B;AAEA;;;;;;eAMehB,O",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\nimport Persona from './Persona'\r\n\r\nconst Jugador = sequelize.define('Jugador', {\r\n        dni: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey: true\r\n        }, \r\n        legajo: {\r\n            type: Sequelize.TEXT\r\n        },\r\n        facultad: {\r\n            type: Sequelize.TEXT\r\n        }\r\n    }, {\r\n        timestamps: false,\r\n        freezeTableName: true \r\n    }\r\n\r\n);\r\n\r\n//Jugador.belongsTo(Persona, {foreingKey: 'dni', sourceKey: 'dni' });  //no agregué como clave foránea porque agrega un atributo Persondni (eso lo tiene la base)\r\n//Jugador.belongsTo(Persona, { foreingKey: 'dni', targetKey:'dni'});\r\n\r\nJugador.belongsTo(Persona,{foreignKey: 'dni', as:'persona'});\r\n\r\n/*Jugador.buscarJugador = async function (dni){\r\n    return await this.findOne({\r\n        where: {dni},\r\n      });\r\n    }; */\r\n\r\nexport default Jugador;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595619021601
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\torneo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\torneo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\torneo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\torneo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "torneo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _torneo = _interopRequireDefault(require(\"../controllers/torneo.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/:anio&:tipo', _torneo[\"default\"].obtenerTorneo);\nrouter.get('/', _torneo[\"default\"].obtenerTorneos);\nrouter.get('/listas/:anio&:tipo', _torneo[\"default\"].obtenerListas);\nrouter.post('/', _torneo[\"default\"].crearTorneo); //recibe un Torneo a insertar en la base\n\nrouter.put('/:anio&:tipo', _torneo[\"default\"].actualizarTorneo);\nrouter[\"delete\"]('/:anio&:tipo', _torneo[\"default\"].eliminarTorneo);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvcm5lby5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJUb3JuZW9Db250cm9sbGVyIiwib2J0ZW5lclRvcm5lbyIsIm9idGVuZXJUb3JuZW9zIiwib2J0ZW5lckxpc3RhcyIsInBvc3QiLCJjcmVhclRvcm5lbyIsInB1dCIsImFjdHVhbGl6YXJUb3JuZW8iLCJlbGltaW5hclRvcm5lbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOzs7O0FBRkEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGNBQVgsRUFBMEJDLG1CQUFpQkMsYUFBM0M7QUFDQUgsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFlQyxtQkFBaUJFLGNBQWhDO0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLHFCQUFYLEVBQWlDQyxtQkFBaUJHLGFBQWxEO0FBRUFMLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLEdBQVosRUFBaUJKLG1CQUFpQkssV0FBbEMsRSxDQUFpRDs7QUFFakRQLE1BQU0sQ0FBQ1EsR0FBUCxDQUFXLGNBQVgsRUFBMEJOLG1CQUFpQk8sZ0JBQTNDO0FBRUFULE1BQU0sVUFBTixDQUFjLGNBQWQsRUFBNkJFLG1CQUFpQlEsY0FBOUM7ZUFFZVYsTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuaW1wb3J0IFRvcm5lb0NvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvdG9ybmVvLmNvbnRyb2xsZXInO1xyXG5cclxucm91dGVyLmdldCgnLzphbmlvJjp0aXBvJyxUb3JuZW9Db250cm9sbGVyLm9idGVuZXJUb3JuZW8pO1xyXG5yb3V0ZXIuZ2V0KCcvJyxUb3JuZW9Db250cm9sbGVyLm9idGVuZXJUb3JuZW9zKTtcclxucm91dGVyLmdldCgnL2xpc3Rhcy86YW5pbyY6dGlwbycsVG9ybmVvQ29udHJvbGxlci5vYnRlbmVyTGlzdGFzKTtcclxuXHJcbnJvdXRlci5wb3N0KCcvJywgVG9ybmVvQ29udHJvbGxlci5jcmVhclRvcm5lbyk7ICAvL3JlY2liZSB1biBUb3JuZW8gYSBpbnNlcnRhciBlbiBsYSBiYXNlXHJcblxyXG5yb3V0ZXIucHV0KCcvOmFuaW8mOnRpcG8nLFRvcm5lb0NvbnRyb2xsZXIuYWN0dWFsaXphclRvcm5lbyk7XHJcblxyXG5yb3V0ZXIuZGVsZXRlKCcvOmFuaW8mOnRpcG8nLFRvcm5lb0NvbnRyb2xsZXIuZWxpbWluYXJUb3JuZW8pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "torneo.js"
      ],
      "names": [
        "router",
        "get",
        "TorneoController",
        "obtenerTorneo",
        "obtenerTorneos",
        "obtenerListas",
        "post",
        "crearTorneo",
        "put",
        "actualizarTorneo",
        "eliminarTorneo"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,GAAP,CAAW,cAAX,EAA0BC,mBAAiBC,aAA3C;AACAH,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,mBAAiBE,cAAhC;AACAJ,MAAM,CAACC,GAAP,CAAW,qBAAX,EAAiCC,mBAAiBG,aAAlD;AAEAL,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiBJ,mBAAiBK,WAAlC,E,CAAiD;;AAEjDP,MAAM,CAACQ,GAAP,CAAW,cAAX,EAA0BN,mBAAiBO,gBAA3C;AAEAT,MAAM,UAAN,CAAc,cAAd,EAA6BE,mBAAiBQ,cAA9C;eAEeV,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport TorneoController from '../controllers/torneo.controller';\r\n\r\nrouter.get('/:anio&:tipo',TorneoController.obtenerTorneo);\r\nrouter.get('/',TorneoController.obtenerTorneos);\r\nrouter.get('/listas/:anio&:tipo',TorneoController.obtenerListas);\r\n\r\nrouter.post('/', TorneoController.crearTorneo);  //recibe un Torneo a insertar en la base\r\n\r\nrouter.put('/:anio&:tipo',TorneoController.actualizarTorneo);\r\n\r\nrouter.delete('/:anio&:tipo',TorneoController.eliminarTorneo);\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1619028057262
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\torneo.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\torneo.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\torneo.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\torneo.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "torneo.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _TorneoService = _interopRequireDefault(require(\"../services/TorneoService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar TorneoController =\n/*#__PURE__*/\nfunction () {\n  function TorneoController() {\n    _classCallCheck(this, TorneoController);\n  }\n\n  _createClass(TorneoController, null, [{\n    key: \"crearTorneo\",\n    value: function crearTorneo(req, res) {\n      var nuevoTorneo, torneoCreado;\n      return regeneratorRuntime.async(function crearTorneo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoTorneo = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].agregarTorneo(nuevoTorneo));\n\n            case 4:\n              torneoCreado = _context.sent;\n              util.setSuccess(201, 'Torneo añadido', torneoCreado);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTorneos\",\n    value: function obtenerTorneos(req, res) {\n      var torneos;\n      return regeneratorRuntime.async(function obtenerTorneos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerTorneos());\n\n            case 3:\n              torneos = _context2.sent;\n\n              if (torneos && torneos.length > 0) {\n                util.setSuccess(200, 'Torneos obtenidos', torneos);\n              } else {\n                util.setSuccess(200, 'No se encuentran Torneos');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(req, res) {\n      var anio, tipo, torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              anio = parseInt(req.params.anio);\n              tipo = req.params.tipo;\n              _context3.next = 5;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerTorneo(anio, tipo));\n\n            case 5:\n              torneo = _context3.sent;\n\n              if (torneo) {\n                util.setSuccess(200, 'Torneo obtenido', torneo);\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo, \"\\\" del a\\xF1o: \\\"\").concat(anio, \"\\\" no encontrado\"));\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarTorneo\",\n    value: function eliminarTorneo(req, res) {\n      var tipo, anio, torneoEliminado;\n      return regeneratorRuntime.async(function eliminarTorneo$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              tipo = req.params.tipo;\n              anio = parseInt(req.params.anio);\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].eliminarTorneo(anio, tipo));\n\n            case 5:\n              torneoEliminado = _context4.sent;\n\n              if (torneoEliminado) {\n                util.setSuccess(200, 'Torneo eliminado');\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo, \"\\\" del a\\xF1o: \\\"\").concat(anio, \"\\\" no encontrado\"));\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"actualizarTorneo\",\n    value: function actualizarTorneo(req, res) {\n      var anio, tipo, torneo, torneoActualizado;\n      return regeneratorRuntime.async(function actualizarTorneo$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              anio = parseInt(req.params.anio);\n              tipo = req.params.tipo;\n              torneo = req.body;\n              _context5.next = 6;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].actualizarTorneo(anio, tipo, torneo));\n\n            case 6:\n              torneoActualizado = _context5.sent;\n\n              if (torneoActualizado) {\n                util.setSuccess(200, 'Torneo actualizado', torneoActualizado);\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo, \"\\\" del a\\xF1o: \\\"\").concat(anio, \"\\\" no encontrado\"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias(anio_torneo, tipo_torneo) {\n      var categorias;\n      return regeneratorRuntime.async(function obtenerCategorias$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerCategorias(anio_torneo, tipo_torneo));\n\n            case 2:\n              categorias = _context6.sent;\n              return _context6.abrupt(\"return\", categorias);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"obtenerListas\",\n    value: function obtenerListas(req, res) {\n      var anio_torneo, tipo_torneo, listas;\n      return regeneratorRuntime.async(function obtenerListas$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              anio_torneo = req.params.anio;\n              tipo_torneo = req.params.tipo;\n              _context7.next = 5;\n              return regeneratorRuntime.awrap(_TorneoService[\"default\"].obtenerListas(anio_torneo, tipo_torneo));\n\n            case 5:\n              listas = _context7.sent;\n\n              //console.log(\"Las lista obtenidas son \", listas);\n              if (listas) {\n                util.setSuccess(200, \"Listas del torneo: \\\"\".concat(tipo_torneo, \"\\\" del a\\xF1o: \\\"\").concat(anio_torneo, \"\\\"\"), listas);\n              } else {\n                util.setError(404, \"Torneo: \\\"\".concat(tipo_torneo, \"\\\" del a\\xF1o: \\\"\").concat(anio_torneo, \"\\\" no encontrado\"));\n              }\n\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](0);\n              util.setError(404, _context7.t0.message);\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }]);\n\n  return TorneoController;\n}();\n\nvar _default = TorneoController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "torneo.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "TorneoController",
        "req",
        "res",
        "nuevoTorneo",
        "body",
        "TorneoService",
        "agregarTorneo",
        "torneoCreado",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerTorneos",
        "torneos",
        "length",
        "anio",
        "parseInt",
        "params",
        "tipo",
        "obtenerTorneo",
        "torneo",
        "eliminarTorneo",
        "torneoEliminado",
        "actualizarTorneo",
        "torneoActualizado",
        "anio_torneo",
        "tipo_torneo",
        "obtenerCategorias",
        "categorias",
        "obtenerListas",
        "listas"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,gB;;;;;;;;;gCACuBC,G,EAAKC,G;;;;;;;AAEhBC,cAAAA,W,GAAcF,GAAG,CAACG,I;;8CACGC,0BAAcC,aAAd,CAA4BH,WAA5B,C;;;AAArBI,cAAAA,Y;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,gBAApB,EAAsCD,YAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;;8CAEHG,0BAAcO,cAAd,E;;;AAAhBC,cAAAA,O;;AAEN,kBAAGA,OAAO,IAAIA,OAAO,CAACC,MAAR,GAAiB,CAA/B,EAAiC;AAC7BhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCK,OAAxC;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,0BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAElBa,cAAAA,I,GAAOC,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWF,IAAZ,C;AACfG,cAAAA,I,GAAOjB,GAAG,CAACgB,MAAJ,CAAWC,I;;8CACHb,0BAAcc,aAAd,CAA4BJ,IAA5B,EAAiCG,IAAjC,C;;;AAAfE,cAAAA,M;;AAEN,kBAAGA,MAAH,EAAU;AACNtB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCY,MAAtC;AACH,eAFD,MAGI;AACAtB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BQ,IAA9B,8BAAiDH,IAAjD;AACH;;gDACMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBgB,cAAAA,I,GAAOjB,GAAG,CAACgB,MAAJ,CAAWC,I;AAClBH,cAAAA,I,GAAOC,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWF,IAAZ,C;;8CACSV,0BAAcgB,cAAd,CAA6BN,IAA7B,EAAkCG,IAAlC,C;;;AAAxBI,cAAAA,e;;AAEN,kBAAGA,eAAH,EAAmB;AACfxB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BQ,IAA9B,8BAAiDH,IAAjD;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;qCAIeD,G,EAAKC,G;;;;;;;AAErBa,cAAAA,I,GAAOC,QAAQ,CAACf,GAAG,CAACgB,MAAJ,CAAWF,IAAZ,C;AACfG,cAAAA,I,GAAOjB,GAAG,CAACgB,MAAJ,CAAWC,I;AAClBE,cAAAA,M,GAASnB,GAAG,CAACG,I;;8CAEaC,0BAAckB,gBAAd,CAA+BR,IAA/B,EAAoCG,IAApC,EAAyCE,MAAzC,C;;;AAA1BI,cAAAA,iB;;AAEN,kBAAGA,iBAAH,EAAqB;AACjB1B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCgB,iBAAzC;AACH,eAFD,MAGI;AACA1B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BQ,IAA9B,8BAAiDH,IAAjD;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBuB,W,EAAaC,W;;;;;;;8CAEfrB,0BAAcsB,iBAAd,CAAgCF,WAAhC,EAA4CC,WAA5C,C;;;AAAnBE,cAAAA,U;gDACCA,U;;;;;;;;;;;kCAGgB3B,G,EAAIC,G;;;;;;;AAEjBuB,cAAAA,W,GAAcxB,GAAG,CAACgB,MAAJ,CAAWF,I;AACzBW,cAAAA,W,GAAczB,GAAG,CAACgB,MAAJ,CAAWC,I;;8CAEVb,0BAAcwB,aAAd,CAA4BJ,WAA5B,EAAwCC,WAAxC,C;;;AAAfI,cAAAA,M;;AACV;AAEI,kBAAGA,MAAH,EAAU;AACNhC,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,iCAA2CkB,WAA3C,8BAAqED,WAArE,SAAoFK,MAApF;AACH,eAFD,MAGI;AACAhC,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,sBAA8BgB,WAA9B,8BAAwDD,WAAxD;AACH;;gDACM3B,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,gB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import TorneoService from '../services/TorneoService';\r\nimport Util from '../utils/Utils';\r\nimport Torneo from '../models/Torneo';\r\n\r\nconst util = new Util();\r\n\r\nclass TorneoController {\r\n    static async crearTorneo(req, res) {    \r\n        try {    \r\n            const nuevoTorneo = req.body;\r\n            const torneoCreado = await TorneoService.agregarTorneo(nuevoTorneo);\r\n\r\n            util.setSuccess(201,'Torneo añadido', torneoCreado);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerTorneos(req, res){\r\n        try {\r\n            const torneos = await TorneoService.obtenerTorneos();\r\n            \r\n            if(torneos && torneos.length > 0){\r\n                util.setSuccess(200,'Torneos obtenidos',torneos);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Torneos'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerTorneo(req, res){\r\n        try {\r\n            const anio = parseInt(req.params.anio);\r\n            const tipo = req.params.tipo;\r\n            const torneo = await TorneoService.obtenerTorneo(anio,tipo);\r\n            \r\n            if(torneo){\r\n                util.setSuccess(200,'Torneo obtenido',torneo);\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo}\" del año: \"${anio}\" no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarTorneo(req, res){\r\n        try {\r\n            const tipo = req.params.tipo;\r\n            const anio = parseInt(req.params.anio);\r\n            const torneoEliminado = await TorneoService.eliminarTorneo(anio,tipo);\r\n\r\n            if(torneoEliminado){\r\n                util.setSuccess(200,'Torneo eliminado');\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo}\" del año: \"${anio}\" no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    } \r\n\r\n    static async actualizarTorneo(req, res){\r\n        try {\r\n            const anio = parseInt(req.params.anio);\r\n            const tipo = req.params.tipo;\r\n            const torneo = req.body;\r\n\r\n            const torneoActualizado = await TorneoService.actualizarTorneo(anio,tipo,torneo);\r\n\r\n            if(torneoActualizado){\r\n                util.setSuccess(200,'Torneo actualizado',torneoActualizado);\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo}\" del año: \"${anio}\" no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n    \r\n    static async obtenerCategorias(anio_torneo, tipo_torneo){\r\n\r\n        const categorias = await TorneoService.obtenerCategorias(anio_torneo,tipo_torneo);\r\n        return categorias;\r\n    }\r\n\r\n    static async obtenerListas(req,res){\r\n        try {\r\n            const anio_torneo = req.params.anio;\r\n            const tipo_torneo = req.params.tipo;\r\n\r\n            const listas = await TorneoService.obtenerListas(anio_torneo,tipo_torneo);\r\n        //console.log(\"Las lista obtenidas son \", listas);\r\n           \r\n            if(listas){\r\n                util.setSuccess(200,`Listas del torneo: \"${tipo_torneo}\" del año: \"${anio_torneo}\"`,listas);\r\n            }\r\n            else{\r\n                util.setError(404,`Torneo: \"${tipo_torneo}\" del año: \"${anio_torneo}\" no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\nexport default TorneoController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142502
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\TorneoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\TorneoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\TorneoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\TorneoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "TorneoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nvar _Categoria = _interopRequireDefault(require(\"../models/Categoria\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"../models/ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TorneoService =\n/*#__PURE__*/\nfunction () {\n  function TorneoService() {\n    _classCallCheck(this, TorneoService);\n  }\n\n  _createClass(TorneoService, null, [{\n    key: \"agregarTorneo\",\n    value: function agregarTorneo(nuevoTorneo) {\n      return regeneratorRuntime.async(function agregarTorneo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].create(nuevoTorneo));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerTorneos\",\n    value: function obtenerTorneos() {\n      return regeneratorRuntime.async(function obtenerTorneos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(anio, tipo) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 3:\n              torneo = _context3.sent;\n              TorneoService.obtenerCategorias(anio, tipo);\n              return _context3.abrupt(\"return\", torneo);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias(anio, tipo) {\n      var categorias;\n      return regeneratorRuntime.async(function obtenerCategorias$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findAll({\n                raw: true,\n                where: {\n                  anio_torneo: anio,\n                  tipo_torneo: tipo\n                }\n              }));\n\n            case 3:\n              categorias = _context4.sent;\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerListas\",\n    value: function obtenerListas(anio_torneo, tipo_torneo) {\n      var listas;\n      return regeneratorRuntime.async(function obtenerListas$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findAll({\n                raw: true,\n                where: {\n                  anio_torneo: anio_torneo,\n                  tipo_torneo: tipo_torneo\n                }\n              }));\n\n            case 3:\n              listas = _context5.sent;\n              return _context5.abrupt(\"return\", listas);\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"eliminarTorneo\",\n    value: function eliminarTorneo(anio, tipo) {\n      var torneoExistente, torneoEliminado;\n      return regeneratorRuntime.async(function eliminarTorneo$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 3:\n              torneoExistente = _context6.sent;\n\n              if (!torneoExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].destroy({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 7:\n              torneoEliminado = _context6.sent;\n              return _context6.abrupt(\"return\", torneoEliminado);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"actualizarTorneo\",\n    value: function actualizarTorneo(anio, tipo, torneo) {\n      var torneoExistente;\n      return regeneratorRuntime.async(function actualizarTorneo$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 3:\n              torneoExistente = _context7.sent;\n\n              if (!torneoExistente) {\n                _context7.next = 10;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].update(torneo, {\n                where: {\n                  anio: anio,\n                  tipo: tipo\n                }\n              }));\n\n            case 7:\n              return _context7.abrupt(\"return\", torneo);\n\n            case 10:\n              return _context7.abrupt(\"return\", null);\n\n            case 11:\n              _context7.next = 16;\n              break;\n\n            case 13:\n              _context7.prev = 13;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 16:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }]);\n\n  return TorneoService;\n}();\n\nvar _default = TorneoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvcm5lb1NlcnZpY2UuanMiXSwibmFtZXMiOlsiVG9ybmVvU2VydmljZSIsIm51ZXZvVG9ybmVvIiwiVG9ybmVvIiwiY3JlYXRlIiwiZmluZEFsbCIsImFuaW8iLCJ0aXBvIiwiZmluZE9uZSIsIndoZXJlIiwidG9ybmVvIiwib2J0ZW5lckNhdGVnb3JpYXMiLCJDYXRlZ29yaWEiLCJyYXciLCJhbmlvX3Rvcm5lbyIsInRpcG9fdG9ybmVvIiwiY2F0ZWdvcmlhcyIsIkxpc3RhSW5zY3JpcGNpb24iLCJsaXN0YXMiLCJ0b3JuZW9FeGlzdGVudGUiLCJkZXN0cm95IiwidG9ybmVvRWxpbWluYWRvIiwidXBkYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7SUFFTUEsYTs7Ozs7Ozs7O2tDQUN5QkMsVzs7Ozs7Ozs4Q0FFVkMsbUJBQU9DLE1BQVAsQ0FBY0YsV0FBZCxDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4Q0FRQUMsbUJBQU9FLE9BQVAsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQ0FPVUMsSSxFQUFLQyxJOzs7Ozs7Ozs4Q0FFUEosbUJBQU9LLE9BQVAsQ0FBZTtBQUFDQyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNILGtCQUFBQSxJQUFJLEVBQUNBLElBQU47QUFBV0Msa0JBQUFBLElBQUksRUFBQ0E7QUFBaEI7QUFBUCxlQUFmLEM7OztBQUFmRyxjQUFBQSxNO0FBRU5ULGNBQUFBLGFBQWEsQ0FBQ1UsaUJBQWQsQ0FBZ0NMLElBQWhDLEVBQXFDQyxJQUFyQztnREFDT0csTTs7Ozs7Ozs7Ozs7Ozs7OztzQ0FPb0JKLEksRUFBTUMsSTs7Ozs7Ozs7OENBRVJLLHNCQUFVUCxPQUFWLENBQWtCO0FBQUNRLGdCQUFBQSxHQUFHLEVBQUUsSUFBTjtBQUFXSixnQkFBQUEsS0FBSyxFQUFDO0FBQUNLLGtCQUFBQSxXQUFXLEVBQUNSLElBQWI7QUFBa0JTLGtCQUFBQSxXQUFXLEVBQUNSO0FBQTlCO0FBQWpCLGVBQWxCLEM7OztBQUFuQlMsY0FBQUEsVTs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQVFpQkYsVyxFQUFhQyxXOzs7Ozs7Ozs4Q0FFZkUsNkJBQWlCWixPQUFqQixDQUF5QjtBQUFDUSxnQkFBQUEsR0FBRyxFQUFFLElBQU47QUFBV0osZ0JBQUFBLEtBQUssRUFBQztBQUFDSyxrQkFBQUEsV0FBVyxFQUFDQSxXQUFiO0FBQXlCQyxrQkFBQUEsV0FBVyxFQUFDQTtBQUFyQztBQUFqQixlQUF6QixDOzs7QUFBZkcsY0FBQUEsTTtnREFDQ0EsTTs7Ozs7Ozs7Ozs7Ozs7OzttQ0FNaUJaLEksRUFBS0MsSTs7Ozs7Ozs7OENBRUNKLG1CQUFPSyxPQUFQLENBQWU7QUFBQ0MsZ0JBQUFBLEtBQUssRUFBQztBQUFDSCxrQkFBQUEsSUFBSSxFQUFDQSxJQUFOO0FBQVdDLGtCQUFBQSxJQUFJLEVBQUNBO0FBQWhCO0FBQVAsZUFBZixDOzs7QUFBeEJZLGNBQUFBLGU7O21CQUNIQSxlOzs7Ozs7OENBQzZCaEIsbUJBQU9pQixPQUFQLENBQWU7QUFBQ1gsZ0JBQUFBLEtBQUssRUFBQztBQUFDSCxrQkFBQUEsSUFBSSxFQUFDQSxJQUFOO0FBQVdDLGtCQUFBQSxJQUFJLEVBQUNBO0FBQWhCO0FBQVAsZUFBZixDOzs7QUFBeEJjLGNBQUFBLGU7Z0RBQ0NBLGU7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxQ0FRaUJmLEksRUFBS0MsSSxFQUFLRyxNOzs7Ozs7Ozs4Q0FFTlAsbUJBQU9LLE9BQVAsQ0FBZTtBQUFDQyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNILGtCQUFBQSxJQUFJLEVBQUNBLElBQU47QUFBV0Msa0JBQUFBLElBQUksRUFBQ0E7QUFBaEI7QUFBUCxlQUFmLEM7OztBQUF4QlksY0FBQUEsZTs7bUJBRUhBLGU7Ozs7Ozs4Q0FDS2hCLG1CQUFPbUIsTUFBUCxDQUFjWixNQUFkLEVBQXFCO0FBQUNELGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0gsa0JBQUFBLElBQUksRUFBQ0EsSUFBTjtBQUFXQyxrQkFBQUEsSUFBSSxFQUFDQTtBQUFoQjtBQUFQLGVBQXJCLEM7OztnREFDQ0csTTs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBU0FULGEiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHNlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRvcm5lbyBmcm9tICcuLi9tb2RlbHMvVG9ybmVvJztcclxuaW1wb3J0IENhdGVnb3JpYSBmcm9tICcuLi9tb2RlbHMvQ2F0ZWdvcmlhJztcclxuaW1wb3J0IExpc3RhSW5zY3JpcGNpb24gZnJvbSAnLi4vbW9kZWxzL0xpc3RhSW5zY3JpcGNpb24nO1xyXG5cclxuY2xhc3MgVG9ybmVvU2VydmljZSB7ICBcclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyVG9ybmVvKG51ZXZvVG9ybmVvKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFRvcm5lby5jcmVhdGUobnVldm9Ub3JuZW8pO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJUb3JuZW9zKCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFRvcm5lby5maW5kQWxsKCk7XHJcbiAgICAgIH0gXHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yOyAgIFxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJUb3JuZW8oYW5pbyx0aXBvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB0b3JuZW8gPSBhd2FpdCBUb3JuZW8uZmluZE9uZSh7d2hlcmU6e2FuaW86YW5pbyx0aXBvOnRpcG99fSk7XHJcblxyXG4gICAgICAgIFRvcm5lb1NlcnZpY2Uub2J0ZW5lckNhdGVnb3JpYXMoYW5pbyx0aXBvKTsgICAgICAgIFxyXG4gICAgICAgIHJldHVybiB0b3JuZW87XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckNhdGVnb3JpYXMoYW5pbywgdGlwbyl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2F0ZWdvcmlhcyA9IGF3YWl0IENhdGVnb3JpYS5maW5kQWxsKHtyYXc6IHRydWUsd2hlcmU6e2FuaW9fdG9ybmVvOmFuaW8sdGlwb190b3JuZW86dGlwb319KTtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKFwiQ2F0ZWdvcmlhcyBhc29jaWFkYXMgYWwgdG9ybmVvXCIsYW5pbyx0aXBvLFwiIHNvbiBcIixjYXRlZ29yaWFzKTsgXHJcblxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9idGVuZXJMaXN0YXMoYW5pb190b3JuZW8sIHRpcG9fdG9ybmVvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBsaXN0YXMgPSBhd2FpdCBMaXN0YUluc2NyaXBjaW9uLmZpbmRBbGwoe3JhdzogdHJ1ZSx3aGVyZTp7YW5pb190b3JuZW86YW5pb190b3JuZW8sdGlwb190b3JuZW86dGlwb190b3JuZW99fSk7XHJcbiAgICAgICAgcmV0dXJuIGxpc3RhcztcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hclRvcm5lbyhhbmlvLHRpcG8pe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHRvcm5lb0V4aXN0ZW50ZSA9IGF3YWl0IFRvcm5lby5maW5kT25lKHt3aGVyZTp7YW5pbzphbmlvLHRpcG86dGlwb319KTtcclxuICAgICAgICBpZih0b3JuZW9FeGlzdGVudGUpe1xyXG4gICAgICAgICAgY29uc3QgdG9ybmVvRWxpbWluYWRvID0gYXdhaXQgVG9ybmVvLmRlc3Ryb3koe3doZXJlOnthbmlvOmFuaW8sdGlwbzp0aXBvfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIHRvcm5lb0VsaW1pbmFkbzsgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphclRvcm5lbyhhbmlvLHRpcG8sdG9ybmVvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB0b3JuZW9FeGlzdGVudGUgPSBhd2FpdCBUb3JuZW8uZmluZE9uZSh7d2hlcmU6e2FuaW86YW5pbyx0aXBvOnRpcG99fSk7XHJcblxyXG4gICAgICAgIGlmKHRvcm5lb0V4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBhd2FpdCBUb3JuZW8udXBkYXRlKHRvcm5lbyx7d2hlcmU6e2FuaW86YW5pbyx0aXBvOnRpcG99fSk7XHJcbiAgICAgICAgICByZXR1cm4gdG9ybmVvOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG59IFxyXG5cclxuICBleHBvcnQgZGVmYXVsdCBUb3JuZW9TZXJ2aWNlO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "TorneoService.js"
      ],
      "names": [
        "TorneoService",
        "nuevoTorneo",
        "Torneo",
        "create",
        "findAll",
        "anio",
        "tipo",
        "findOne",
        "where",
        "torneo",
        "obtenerCategorias",
        "Categoria",
        "raw",
        "anio_torneo",
        "tipo_torneo",
        "categorias",
        "ListaInscripcion",
        "listas",
        "torneoExistente",
        "destroy",
        "torneoEliminado",
        "update"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEMA,a;;;;;;;;;kCACyBC,W;;;;;;;8CAEVC,mBAAOC,MAAP,CAAcF,WAAd,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,mBAAOE,OAAP,E;;;;;;;;;;;;;;;;;;;kCAOUC,I,EAAKC,I;;;;;;;;8CAEPJ,mBAAOK,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAfG,cAAAA,M;AAENT,cAAAA,aAAa,CAACU,iBAAd,CAAgCL,IAAhC,EAAqCC,IAArC;gDACOG,M;;;;;;;;;;;;;;;;sCAOoBJ,I,EAAMC,I;;;;;;;;8CAERK,sBAAUP,OAAV,CAAkB;AAACQ,gBAAAA,GAAG,EAAE,IAAN;AAAWJ,gBAAAA,KAAK,EAAC;AAACK,kBAAAA,WAAW,EAACR,IAAb;AAAkBS,kBAAAA,WAAW,EAACR;AAA9B;AAAjB,eAAlB,C;;;AAAnBS,cAAAA,U;;;;;;;;;;;;;;;;;;kCAQiBF,W,EAAaC,W;;;;;;;;8CAEfE,6BAAiBZ,OAAjB,CAAyB;AAACQ,gBAAAA,GAAG,EAAE,IAAN;AAAWJ,gBAAAA,KAAK,EAAC;AAACK,kBAAAA,WAAW,EAACA,WAAb;AAAyBC,kBAAAA,WAAW,EAACA;AAArC;AAAjB,eAAzB,C;;;AAAfG,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;mCAMiBZ,I,EAAKC,I;;;;;;;;8CAECJ,mBAAOK,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAxBY,cAAAA,e;;mBACHA,e;;;;;;8CAC6BhB,mBAAOiB,OAAP,CAAe;AAACX,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAxBc,cAAAA,e;gDACCA,e;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;qCAQiBf,I,EAAKC,I,EAAKG,M;;;;;;;;8CAENP,mBAAOK,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAAf,C;;;AAAxBY,cAAAA,e;;mBAEHA,e;;;;;;8CACKhB,mBAAOmB,MAAP,CAAcZ,MAAd,EAAqB;AAACD,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,IAAI,EAACA,IAAN;AAAWC,kBAAAA,IAAI,EAACA;AAAhB;AAAP,eAArB,C;;;gDACCG,M;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASAT,a",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Torneo from '../models/Torneo';\r\nimport Categoria from '../models/Categoria';\r\nimport ListaInscripcion from '../models/ListaInscripcion';\r\n\r\nclass TorneoService {  \r\n    static async agregarTorneo(nuevoTorneo) {\r\n      try {\r\n        return await Torneo.create(nuevoTorneo);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerTorneos(){\r\n      try {\r\n        return await Torneo.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerTorneo(anio,tipo){\r\n      try {\r\n        const torneo = await Torneo.findOne({where:{anio:anio,tipo:tipo}});\r\n\r\n        TorneoService.obtenerCategorias(anio,tipo);        \r\n        return torneo;\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n    static async obtenerCategorias(anio, tipo){\r\n      try {\r\n        const categorias = await Categoria.findAll({raw: true,where:{anio_torneo:anio,tipo_torneo:tipo}});\r\n        //console.log(\"Categorias asociadas al torneo\",anio,tipo,\" son \",categorias); \r\n\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerListas(anio_torneo, tipo_torneo){\r\n      try {\r\n        const listas = await ListaInscripcion.findAll({raw: true,where:{anio_torneo:anio_torneo,tipo_torneo:tipo_torneo}});\r\n        return listas;\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async eliminarTorneo(anio,tipo){\r\n      try {\r\n        const torneoExistente = await Torneo.findOne({where:{anio:anio,tipo:tipo}});\r\n        if(torneoExistente){\r\n          const torneoEliminado = await Torneo.destroy({where:{anio:anio,tipo:tipo}});\r\n          return torneoEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async actualizarTorneo(anio,tipo,torneo){\r\n      try {\r\n        const torneoExistente = await Torneo.findOne({where:{anio:anio,tipo:tipo}});\r\n\r\n        if(torneoExistente){\r\n          await Torneo.update(torneo,{where:{anio:anio,tipo:tipo}});\r\n          return torneo; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n} \r\n\r\n  export default TorneoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584456516027
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Torneo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Torneo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Torneo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Torneo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Torneo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Categoria = _interopRequireDefault(require(\"./Categoria\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"./ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Torneo = _database.sequelize.define('Torneo', {\n  anio: {\n    type: _sequelize[\"default\"].INTEGER,\n    allowNull: false,\n    primaryKey: true\n  },\n  tipo: {\n    type: _sequelize[\"default\"].TEXT,\n    allowNull: false,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  abierto: {\n    type: _sequelize[\"default\"].BOOLEAN,\n    defaultValue: false\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n}); //Torneo.hasMany(ListaInscripcion,{foreignKey:'id_lista', as:\"listas\"});  //Chequear si esta bien eso después \n//Torneo.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});\n//Torneo.hasMany(ListaInscripcion, {as:'listas'});\n\n\nvar _default = Torneo;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvcm5lby5qcyJdLCJuYW1lcyI6WyJUb3JuZW8iLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJhbmlvIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGlwbyIsIlRFWFQiLCJub21icmUiLCJhYmllcnRvIiwiQk9PTEVBTiIsImRlZmF1bHRWYWx1ZSIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUhtQztBQUtuQyxJQUFNQSxNQUFNLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFFBQWpCLEVBQTJCO0FBQ3RDQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEZDtBQUVGQyxJQUFBQSxTQUFTLEVBQUUsS0FGVDtBQUdGQyxJQUFBQSxVQUFVLEVBQUU7QUFIVixHQURnQztBQU10Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZMLElBQUFBLElBQUksRUFBRUMsc0JBQVVLLElBRGQ7QUFFRkgsSUFBQUEsU0FBUyxFQUFFLEtBRlQ7QUFHRkMsSUFBQUEsVUFBVSxFQUFFO0FBSFYsR0FOZ0M7QUFXdENHLEVBQUFBLE1BQU0sRUFBRTtBQUNKUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSztBQURaLEdBWDhCO0FBY3RDRSxFQUFBQSxPQUFPLEVBQUU7QUFDTFIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVVEsT0FEWDtBQUVMQyxJQUFBQSxZQUFZLEVBQUU7QUFGVDtBQWQ2QixDQUEzQixFQW1CWjtBQUNDQyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FuQlksQ0FBZixDLENBd0JBO0FBRUE7QUFDQTs7O2VBRWVoQixNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IC8vIGNsYXNlIFNlcXVlbGl6ZVxyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZScgLy9jb25leGlvbiBhIGxhIGJhc2VcclxuaW1wb3J0IENhdGVnb3JpYSBmcm9tICcuL0NhdGVnb3JpYSc7XHJcbmltcG9ydCBMaXN0YUluc2NyaXBjaW9uIGZyb20gJy4vTGlzdGFJbnNjcmlwY2lvbic7XHJcblxyXG5jb25zdCBUb3JuZW8gPSBzZXF1ZWxpemUuZGVmaW5lKCdUb3JuZW8nLCB7XHJcbiAgICBhbmlvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgdGlwbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhULFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5vbWJyZToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhULFxyXG4gICAgfSxcclxuICAgIGFiaWVydG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuQk9PTEVBTixcclxuICAgICAgICBkZWZhdWx0VmFsdWU6IGZhbHNlXHJcbiAgICB9XHJcblxyXG59LCB7XHJcbiAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxufSk7XHJcblxyXG4vL1Rvcm5lby5oYXNNYW55KExpc3RhSW5zY3JpcGNpb24se2ZvcmVpZ25LZXk6J2lkX2xpc3RhJywgYXM6XCJsaXN0YXNcIn0pOyAgLy9DaGVxdWVhciBzaSBlc3RhIGJpZW4gZXNvIGRlc3B1w6lzIFxyXG5cclxuLy9Ub3JuZW8uaGFzTWFueShMaXN0YUluc2NyaXBjaW9uLCB7Zm9yZWlnbktleTogJ2lkX2NhdGVnb3JpYScsIGFzOidsaXN0YXMnfSk7XHJcbi8vVG9ybmVvLmhhc01hbnkoTGlzdGFJbnNjcmlwY2lvbiwge2FzOidsaXN0YXMnfSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb3JuZW87Il19",
    "map": {
      "version": 3,
      "sources": [
        "Torneo.js"
      ],
      "names": [
        "Torneo",
        "sequelize",
        "define",
        "anio",
        "type",
        "Sequelize",
        "INTEGER",
        "allowNull",
        "primaryKey",
        "tipo",
        "TEXT",
        "nombre",
        "abierto",
        "BOOLEAN",
        "defaultValue",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAHmC;AAKnC,IAAMA,MAAM,GAAGC,oBAAUC,MAAV,CAAiB,QAAjB,EAA2B;AACtCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,sBAAUC,OADd;AAEFC,IAAAA,SAAS,EAAE,KAFT;AAGFC,IAAAA,UAAU,EAAE;AAHV,GADgC;AAMtCC,EAAAA,IAAI,EAAE;AACFL,IAAAA,IAAI,EAAEC,sBAAUK,IADd;AAEFH,IAAAA,SAAS,EAAE,KAFT;AAGFC,IAAAA,UAAU,EAAE;AAHV,GANgC;AAWtCG,EAAAA,MAAM,EAAE;AACJP,IAAAA,IAAI,EAAEC,sBAAUK;AADZ,GAX8B;AActCE,EAAAA,OAAO,EAAE;AACLR,IAAAA,IAAI,EAAEC,sBAAUQ,OADX;AAELC,IAAAA,YAAY,EAAE;AAFT;AAd6B,CAA3B,EAmBZ;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAnBY,CAAf,C,CAwBA;AAEA;AACA;;;eAEehB,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\nimport Categoria from './Categoria';\r\nimport ListaInscripcion from './ListaInscripcion';\r\n\r\nconst Torneo = sequelize.define('Torneo', {\r\n    anio: {\r\n        type: Sequelize.INTEGER,\r\n        allowNull: false,\r\n        primaryKey: true\r\n    },\r\n    tipo: {\r\n        type: Sequelize.TEXT,\r\n        allowNull: false,\r\n        primaryKey: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT,\r\n    },\r\n    abierto: {\r\n        type: Sequelize.BOOLEAN,\r\n        defaultValue: false\r\n    }\r\n\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\n//Torneo.hasMany(ListaInscripcion,{foreignKey:'id_lista', as:\"listas\"});  //Chequear si esta bien eso después \r\n\r\n//Torneo.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});\r\n//Torneo.hasMany(ListaInscripcion, {as:'listas'});\r\n\r\nexport default Torneo;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595873007453
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Categoria.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Categoria.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Categoria.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Categoria.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Categoria.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Tabla = _interopRequireDefault(require(\"./Tabla\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"./ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Categoria = _database.sequelize.define('Categoria', {\n  id_categoria: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  tipo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  anio_torneo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  tipo_torneo: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  id_tabla: {\n    type: _sequelize[\"default\"].INTEGER,\n    unique: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nCategoria.belongsTo(_Tabla[\"default\"], {\n  foreignKey: 'id_tabla',\n  as: 'tabla'\n}); // funciona bien! COn torneo no puedo hacer lo mismo (por ahora), porque tiene dos claves primarias.\n//Categoria.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});    //está bien (en 'as' poner nombres simples y en minuscula)\n//Lo que hace es llevar id_categoria a ListaInscripción . \n// When you have a 1:N relation between models you only need to refer the id from the \"1\" model, on our case the User model, on the \"N\" model, Photos. So doing:\n//https://stackoverflow.com/questions/44070808/hasmany-called-with-something-thats-not-an-instance-of-sequelize-model\n\nvar _default = Categoria;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpYS5qcyJdLCJuYW1lcyI6WyJDYXRlZ29yaWEiLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJpZF9jYXRlZ29yaWEiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50Iiwibm9tYnJlIiwiVEVYVCIsInRpcG8iLCJhbmlvX3Rvcm5lbyIsInRpcG9fdG9ybmVvIiwiaWRfdGFibGEiLCJ1bmlxdWUiLCJ0aW1lc3RhbXBzIiwiZnJlZXplVGFibGVOYW1lIiwiYmVsb25nc1RvIiwiVGFibGEiLCJmb3JlaWduS2V5IiwiYXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDNUNDLEVBQUFBLFlBQVksRUFBRTtBQUNWQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQUROO0FBRVZDLElBQUFBLFVBQVUsRUFBRSxJQUZGO0FBR1ZDLElBQUFBLGFBQWEsRUFBRTtBQUhMLEdBRDhCO0FBTTVDQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkwsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEWixHQU5vQztBQVM1Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZQLElBQUFBLElBQUksRUFBRUMsc0JBQVVLO0FBRGQsR0FUc0M7QUFZNUNFLEVBQUFBLFdBQVcsRUFBRTtBQUNUUixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURQLEdBWitCO0FBZTVDTyxFQUFBQSxXQUFXLEVBQUU7QUFDVFQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEUCxHQWYrQjtBQWtCNUNJLEVBQUFBLFFBQVEsRUFBQztBQUNMVixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURYO0FBRUxTLElBQUFBLE1BQU0sRUFBQztBQUZGO0FBbEJtQyxDQUE5QixFQXNCZjtBQUNDQyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0F0QmUsQ0FBbEI7O0FBMkJBakIsU0FBUyxDQUFDa0IsU0FBVixDQUFvQkMsaUJBQXBCLEVBQTBCO0FBQUNDLEVBQUFBLFVBQVUsRUFBRSxVQUFiO0FBQXlCQyxFQUFBQSxFQUFFLEVBQUM7QUFBNUIsQ0FBMUIsRSxDQUFpRTtBQUdqRTtBQUNBO0FBTUE7QUFDQTs7ZUFFZXJCLFMiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XHJcblxyXG5pbXBvcnQgVGFibGEgZnJvbSAnLi9UYWJsYSc7XHJcbmltcG9ydCBMaXN0YUluc2NyaXBjaW9uIGZyb20gJy4vTGlzdGFJbnNjcmlwY2lvbic7XHJcblxyXG5jb25zdCBDYXRlZ29yaWEgPSBzZXF1ZWxpemUuZGVmaW5lKCdDYXRlZ29yaWEnLCB7XHJcbiAgICBpZF9jYXRlZ29yaWE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlLFxyXG4gICAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuICAgIH0sXHJcbiAgICBub21icmU6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHRpcG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIGFuaW9fdG9ybmVvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICB0aXBvX3Rvcm5lbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgaWRfdGFibGE6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHVuaXF1ZTp0cnVlXHJcbiAgICB9XHJcbn0sIHtcclxuICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxyXG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlLFxyXG59KTtcclxuXHJcbkNhdGVnb3JpYS5iZWxvbmdzVG8oVGFibGEse2ZvcmVpZ25LZXk6ICdpZF90YWJsYScsIGFzOid0YWJsYSd9KTsgLy8gZnVuY2lvbmEgYmllbiEgQ09uIHRvcm5lbyBubyBwdWVkbyBoYWNlciBsbyBtaXNtbyAocG9yIGFob3JhKSwgcG9ycXVlIHRpZW5lIGRvcyBjbGF2ZXMgcHJpbWFyaWFzLlxyXG5cclxuXHJcbi8vQ2F0ZWdvcmlhLmhhc01hbnkoTGlzdGFJbnNjcmlwY2lvbiwge2ZvcmVpZ25LZXk6ICdpZF9jYXRlZ29yaWEnLCBhczonbGlzdGFzJ30pOyAgICAvL2VzdMOhIGJpZW4gKGVuICdhcycgcG9uZXIgbm9tYnJlcyBzaW1wbGVzIHkgZW4gbWludXNjdWxhKVxyXG4vL0xvIHF1ZSBoYWNlIGVzIGxsZXZhciBpZF9jYXRlZ29yaWEgYSBMaXN0YUluc2NyaXBjacOzbiAuIFxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIFdoZW4geW91IGhhdmUgYSAxOk4gcmVsYXRpb24gYmV0d2VlbiBtb2RlbHMgeW91IG9ubHkgbmVlZCB0byByZWZlciB0aGUgaWQgZnJvbSB0aGUgXCIxXCIgbW9kZWwsIG9uIG91ciBjYXNlIHRoZSBVc2VyIG1vZGVsLCBvbiB0aGUgXCJOXCIgbW9kZWwsIFBob3Rvcy4gU28gZG9pbmc6XHJcbi8vaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDQwNzA4MDgvaGFzbWFueS1jYWxsZWQtd2l0aC1zb21ldGhpbmctdGhhdHMtbm90LWFuLWluc3RhbmNlLW9mLXNlcXVlbGl6ZS1tb2RlbFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcmlhOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Categoria.js"
      ],
      "names": [
        "Categoria",
        "sequelize",
        "define",
        "id_categoria",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "nombre",
        "TEXT",
        "tipo",
        "anio_torneo",
        "tipo_torneo",
        "id_tabla",
        "unique",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Tabla",
        "foreignKey",
        "as"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,SAAS,GAAGC,oBAAUC,MAAV,CAAiB,WAAjB,EAA8B;AAC5CC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAEC,sBAAUC,OADN;AAEVC,IAAAA,UAAU,EAAE,IAFF;AAGVC,IAAAA,aAAa,EAAE;AAHL,GAD8B;AAM5CC,EAAAA,MAAM,EAAE;AACJL,IAAAA,IAAI,EAAEC,sBAAUK;AADZ,GANoC;AAS5CC,EAAAA,IAAI,EAAE;AACFP,IAAAA,IAAI,EAAEC,sBAAUK;AADd,GATsC;AAY5CE,EAAAA,WAAW,EAAE;AACTR,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GAZ+B;AAe5CO,EAAAA,WAAW,EAAE;AACTT,IAAAA,IAAI,EAAEC,sBAAUK;AADP,GAf+B;AAkB5CI,EAAAA,QAAQ,EAAC;AACLV,IAAAA,IAAI,EAAEC,sBAAUC,OADX;AAELS,IAAAA,MAAM,EAAC;AAFF;AAlBmC,CAA9B,EAsBf;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAtBe,CAAlB;;AA2BAjB,SAAS,CAACkB,SAAV,CAAoBC,iBAApB,EAA0B;AAACC,EAAAA,UAAU,EAAE,UAAb;AAAyBC,EAAAA,EAAE,EAAC;AAA5B,CAA1B,E,CAAiE;AAGjE;AACA;AAMA;AACA;;eAEerB,S",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize } from '../database/database';\r\n\r\nimport Tabla from './Tabla';\r\nimport ListaInscripcion from './ListaInscripcion';\r\n\r\nconst Categoria = sequelize.define('Categoria', {\r\n    id_categoria: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    tipo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    anio_torneo: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    tipo_torneo: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    id_tabla:{\r\n        type: Sequelize.INTEGER,\r\n        unique:true\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nCategoria.belongsTo(Tabla,{foreignKey: 'id_tabla', as:'tabla'}); // funciona bien! COn torneo no puedo hacer lo mismo (por ahora), porque tiene dos claves primarias.\r\n\r\n\r\n//Categoria.hasMany(ListaInscripcion, {foreignKey: 'id_categoria', as:'listas'});    //está bien (en 'as' poner nombres simples y en minuscula)\r\n//Lo que hace es llevar id_categoria a ListaInscripción . \r\n\r\n\r\n\r\n\r\n\r\n// When you have a 1:N relation between models you only need to refer the id from the \"1\" model, on our case the User model, on the \"N\" model, Photos. So doing:\r\n//https://stackoverflow.com/questions/44070808/hasmany-called-with-something-thats-not-an-instance-of-sequelize-model\r\n\r\nexport default Categoria;"
      ]
    },
    "sourceType": "script",
    "mtime": 1616562334754
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Tabla.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Tabla.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Tabla.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Tabla.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Tabla.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Tabla = _database.sequelize.define('Tabla', {\n  id_tabla: {\n    type: _sequelize[\"default\"].INTEGER,\n    autoIncrement: true,\n    primaryKey: true\n  },\n  tabla: {\n    type: _sequelize[\"default\"].JSON\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Tabla;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYmxhLmpzIl0sIm5hbWVzIjpbIlRhYmxhIiwic2VxdWVsaXplIiwiZGVmaW5lIiwiaWRfdGFibGEiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidGFibGEiLCJKU09OIiwidGltZXN0YW1wcyIsImZyZWV6ZVRhYmxlTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRG1DO0FBR25DLElBQU1BLEtBQUssR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsT0FBakIsRUFBMEI7QUFDcENDLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURWO0FBRU5DLElBQUFBLGFBQWEsRUFBRSxJQUZUO0FBR05DLElBQUFBLFVBQVUsRUFBRTtBQUhOLEdBRDBCO0FBTXBDQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEwsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEYjtBQU42QixDQUExQixFQVNYO0FBQ0NDLEVBQUFBLFVBQVUsRUFBRSxLQURiO0FBRUNDLEVBQUFBLGVBQWUsRUFBRTtBQUZsQixDQVRXLENBQWQ7O2VBY2VaLEsiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJzsgLy8gY2xhc2UgU2VxdWVsaXplXHJcbmltcG9ydCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJyAvL2NvbmV4aW9uIGEgbGEgYmFzZVxyXG5cclxuY29uc3QgVGFibGEgPSBzZXF1ZWxpemUuZGVmaW5lKCdUYWJsYScsIHtcclxuICAgIGlkX3RhYmxhOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgdGFibGE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSlNPTlxyXG4gICAgfVxyXG59LCB7XHJcbiAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUYWJsYTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Tabla.js"
      ],
      "names": [
        "Tabla",
        "sequelize",
        "define",
        "id_tabla",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "tabla",
        "JSON",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,KAAK,GAAGC,oBAAUC,MAAV,CAAiB,OAAjB,EAA0B;AACpCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEC,sBAAUC,OADV;AAENC,IAAAA,aAAa,EAAE,IAFT;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAD0B;AAMpCC,EAAAA,KAAK,EAAE;AACHL,IAAAA,IAAI,EAAEC,sBAAUK;AADb;AAN6B,CAA1B,EASX;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CATW,CAAd;;eAceZ,K",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Tabla = sequelize.define('Tabla', {\r\n    id_tabla: {\r\n        type: Sequelize.INTEGER,\r\n        autoIncrement: true,\r\n        primaryKey: true\r\n    },\r\n    tabla: {\r\n        type: Sequelize.JSON\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nexport default Tabla;"
      ]
    },
    "sourceType": "script",
    "mtime": 1595361824545
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\ListaInscripcion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\ListaInscripcion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\ListaInscripcion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\ListaInscripcion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "ListaInscripcion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Jugador = _interopRequireDefault(require(\"./Jugador\"));\n\nvar _Equipo = _interopRequireDefault(require(\"./Equipo\"));\n\nvar _Torneo = _interopRequireDefault(require(\"./Torneo\"));\n\nvar _Jugador_integra_Lista = _interopRequireDefault(require(\"./Jugador_integra_Lista\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar ListaInscripcion = _database.sequelize.define('ListaInscripcion', {\n  id_lista: {\n    type: _sequelize[\"default\"].INTEGER,\n    autoIncrement: true,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  id_equipo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  anio_torneo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  tipo_torneo: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_capitan: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_delegado: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_subdelegado: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nListaInscripcion.belongsTo(_Equipo[\"default\"], {\n  foreignKey: 'id_equipo',\n  as: 'equipo'\n});\nListaInscripcion.belongsTo(_Jugador[\"default\"], {\n  foreignKey: 'dni_capitan',\n  as: 'capitan'\n});\nListaInscripcion.belongsTo(_Jugador[\"default\"], {\n  foreignKey: 'dni_delegado',\n  as: 'delegado'\n});\nListaInscripcion.belongsTo(_Jugador[\"default\"], {\n  foreignKey: 'dni_subdelegado',\n  as: 'subDelegado'\n});\n/*ListaInscripcion.belongsTo(Torneo,{foreignKey: 'anio_torneo',as:'anioTorneo'});\r\nListaInscripcion.belongsTo(Torneo,{foreignKey: 'tipo_torneo',as:'tipoTorneo'});  */\n\nvar _default = ListaInscripcion;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RhSW5zY3JpcGNpb24uanMiXSwibmFtZXMiOlsiTGlzdGFJbnNjcmlwY2lvbiIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkX2xpc3RhIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5vbWJyZSIsIlRFWFQiLCJkZXNjcmlwY2lvbiIsImlkX2VxdWlwbyIsImFuaW9fdG9ybmVvIiwidGlwb190b3JuZW8iLCJkbmlfY2FwaXRhbiIsImRuaV9kZWxlZ2FkbyIsImRuaV9zdWJkZWxlZ2FkbyIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiLCJiZWxvbmdzVG8iLCJFcXVpcG8iLCJmb3JlaWduS2V5IiwiYXMiLCJKdWdhZG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7QUFQbUM7QUFTbkMsSUFBTUEsZ0JBQWdCLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLGtCQUFqQixFQUFxQztBQUMxREMsRUFBQUEsUUFBUSxFQUFFO0FBQ05DLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRFY7QUFFTkMsSUFBQUEsYUFBYSxFQUFFLElBRlQ7QUFHTkMsSUFBQUEsVUFBVSxFQUFFO0FBSE4sR0FEZ0Q7QUFNMURDLEVBQUFBLE1BQU0sRUFBQztBQUNITCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSztBQURiLEdBTm1EO0FBUzFEQyxFQUFBQSxXQUFXLEVBQUM7QUFDUlAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFEUixHQVQ4QztBQVkxREUsRUFBQUEsU0FBUyxFQUFDO0FBQ05SLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFYsR0FaZ0Q7QUFlMURPLEVBQUFBLFdBQVcsRUFBQztBQUNSVCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURSLEdBZjhDO0FBa0IxRFEsRUFBQUEsV0FBVyxFQUFDO0FBQ1JWLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFIsR0FsQjhDO0FBcUIxRFMsRUFBQUEsV0FBVyxFQUFDO0FBQ1JYLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFIsR0FyQjhDO0FBd0IxRFUsRUFBQUEsWUFBWSxFQUFDO0FBQ1RaLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFAsR0F4QjZDO0FBMkIxRFcsRUFBQUEsZUFBZSxFQUFDO0FBQ1piLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREo7QUEzQjBDLENBQXJDLEVBK0J0QjtBQUNDWSxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0EvQnNCLENBQXpCOztBQW9DQW5CLGdCQUFnQixDQUFDb0IsU0FBakIsQ0FBMkJDLGtCQUEzQixFQUFrQztBQUFDQyxFQUFBQSxVQUFVLEVBQUUsV0FBYjtBQUEwQkMsRUFBQUEsRUFBRSxFQUFDO0FBQTdCLENBQWxDO0FBQ0F2QixnQkFBZ0IsQ0FBQ29CLFNBQWpCLENBQTJCSSxtQkFBM0IsRUFBbUM7QUFBQ0YsRUFBQUEsVUFBVSxFQUFFLGFBQWI7QUFBMkJDLEVBQUFBLEVBQUUsRUFBQztBQUE5QixDQUFuQztBQUNBdkIsZ0JBQWdCLENBQUNvQixTQUFqQixDQUEyQkksbUJBQTNCLEVBQW1DO0FBQUNGLEVBQUFBLFVBQVUsRUFBRSxjQUFiO0FBQTRCQyxFQUFBQSxFQUFFLEVBQUM7QUFBL0IsQ0FBbkM7QUFDQXZCLGdCQUFnQixDQUFDb0IsU0FBakIsQ0FBMkJJLG1CQUEzQixFQUFtQztBQUFDRixFQUFBQSxVQUFVLEVBQUUsaUJBQWI7QUFBK0JDLEVBQUFBLEVBQUUsRUFBQztBQUFsQyxDQUFuQztBQUdBOzs7ZUFJZXZCLGdCIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IC8vIGNsYXNlIFNlcXVlbGl6ZVxyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZScgLy9jb25leGlvbiBhIGxhIGJhc2VcclxuXHJcbmltcG9ydCBKdWdhZG9yIGZyb20gJy4vSnVnYWRvcic7XHJcbmltcG9ydCBFcXVpcG8gZnJvbSAnLi9FcXVpcG8nO1xyXG5cclxuaW1wb3J0IFRvcm5lbyBmcm9tICcuL1Rvcm5lbyc7XHJcbmltcG9ydCBKdWdhZG9yX2ludGVncmFfTGlzdGEgZnJvbSAnLi9KdWdhZG9yX2ludGVncmFfTGlzdGEnO1xyXG5cclxuY29uc3QgTGlzdGFJbnNjcmlwY2lvbiA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0xpc3RhSW5zY3JpcGNpb24nLCB7XHJcbiAgICBpZF9saXN0YToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWUsXHJcbiAgICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5vbWJyZTp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBkZXNjcmlwY2lvbjp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBpZF9lcXVpcG86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgYW5pb190b3JuZW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgdGlwb190b3JuZW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgZG5pX2NhcGl0YW46e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgZG5pX2RlbGVnYWRvOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGRuaV9zdWJkZWxlZ2Fkbzp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH1cclxuXHJcbn0sIHtcclxuICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxyXG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlLFxyXG59KTtcclxuXHJcbkxpc3RhSW5zY3JpcGNpb24uYmVsb25nc1RvKEVxdWlwbyx7Zm9yZWlnbktleTogJ2lkX2VxdWlwbycsIGFzOidlcXVpcG8nfSk7XHJcbkxpc3RhSW5zY3JpcGNpb24uYmVsb25nc1RvKEp1Z2Fkb3Ise2ZvcmVpZ25LZXk6ICdkbmlfY2FwaXRhbicsYXM6J2NhcGl0YW4nfSk7XHJcbkxpc3RhSW5zY3JpcGNpb24uYmVsb25nc1RvKEp1Z2Fkb3Ise2ZvcmVpZ25LZXk6ICdkbmlfZGVsZWdhZG8nLGFzOidkZWxlZ2Fkbyd9KTtcclxuTGlzdGFJbnNjcmlwY2lvbi5iZWxvbmdzVG8oSnVnYWRvcix7Zm9yZWlnbktleTogJ2RuaV9zdWJkZWxlZ2FkbycsYXM6J3N1YkRlbGVnYWRvJ30pOyBcclxuXHJcblxyXG4vKkxpc3RhSW5zY3JpcGNpb24uYmVsb25nc1RvKFRvcm5lbyx7Zm9yZWlnbktleTogJ2FuaW9fdG9ybmVvJyxhczonYW5pb1Rvcm5lbyd9KTtcclxuTGlzdGFJbnNjcmlwY2lvbi5iZWxvbmdzVG8oVG9ybmVvLHtmb3JlaWduS2V5OiAndGlwb190b3JuZW8nLGFzOid0aXBvVG9ybmVvJ30pOyAgKi9cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBMaXN0YUluc2NyaXBjaW9uOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ListaInscripcion.js"
      ],
      "names": [
        "ListaInscripcion",
        "sequelize",
        "define",
        "id_lista",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "nombre",
        "TEXT",
        "descripcion",
        "id_equipo",
        "anio_torneo",
        "tipo_torneo",
        "dni_capitan",
        "dni_delegado",
        "dni_subdelegado",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Equipo",
        "foreignKey",
        "as",
        "Jugador"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;;AAPmC;AASnC,IAAMA,gBAAgB,GAAGC,oBAAUC,MAAV,CAAiB,kBAAjB,EAAqC;AAC1DC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEC,sBAAUC,OADV;AAENC,IAAAA,aAAa,EAAE,IAFT;AAGNC,IAAAA,UAAU,EAAE;AAHN,GADgD;AAM1DC,EAAAA,MAAM,EAAC;AACHL,IAAAA,IAAI,EAAEC,sBAAUK;AADb,GANmD;AAS1DC,EAAAA,WAAW,EAAC;AACRP,IAAAA,IAAI,EAAEC,sBAAUK;AADR,GAT8C;AAY1DE,EAAAA,SAAS,EAAC;AACNR,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAZgD;AAe1DO,EAAAA,WAAW,EAAC;AACRT,IAAAA,IAAI,EAAEC,sBAAUC;AADR,GAf8C;AAkB1DQ,EAAAA,WAAW,EAAC;AACRV,IAAAA,IAAI,EAAEC,sBAAUC;AADR,GAlB8C;AAqB1DS,EAAAA,WAAW,EAAC;AACRX,IAAAA,IAAI,EAAEC,sBAAUC;AADR,GArB8C;AAwB1DU,EAAAA,YAAY,EAAC;AACTZ,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GAxB6C;AA2B1DW,EAAAA,eAAe,EAAC;AACZb,IAAAA,IAAI,EAAEC,sBAAUC;AADJ;AA3B0C,CAArC,EA+BtB;AACCY,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CA/BsB,CAAzB;;AAoCAnB,gBAAgB,CAACoB,SAAjB,CAA2BC,kBAA3B,EAAkC;AAACC,EAAAA,UAAU,EAAE,WAAb;AAA0BC,EAAAA,EAAE,EAAC;AAA7B,CAAlC;AACAvB,gBAAgB,CAACoB,SAAjB,CAA2BI,mBAA3B,EAAmC;AAACF,EAAAA,UAAU,EAAE,aAAb;AAA2BC,EAAAA,EAAE,EAAC;AAA9B,CAAnC;AACAvB,gBAAgB,CAACoB,SAAjB,CAA2BI,mBAA3B,EAAmC;AAACF,EAAAA,UAAU,EAAE,cAAb;AAA4BC,EAAAA,EAAE,EAAC;AAA/B,CAAnC;AACAvB,gBAAgB,CAACoB,SAAjB,CAA2BI,mBAA3B,EAAmC;AAACF,EAAAA,UAAU,EAAE,iBAAb;AAA+BC,EAAAA,EAAE,EAAC;AAAlC,CAAnC;AAGA;;;eAIevB,gB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nimport Jugador from './Jugador';\r\nimport Equipo from './Equipo';\r\n\r\nimport Torneo from './Torneo';\r\nimport Jugador_integra_Lista from './Jugador_integra_Lista';\r\n\r\nconst ListaInscripcion = sequelize.define('ListaInscripcion', {\r\n    id_lista: {\r\n        type: Sequelize.INTEGER,\r\n        autoIncrement: true,\r\n        primaryKey: true\r\n    },\r\n    nombre:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    descripcion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    id_equipo:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    anio_torneo:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    tipo_torneo:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_capitan:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_delegado:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_subdelegado:{\r\n        type: Sequelize.INTEGER\r\n    }\r\n\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nListaInscripcion.belongsTo(Equipo,{foreignKey: 'id_equipo', as:'equipo'});\r\nListaInscripcion.belongsTo(Jugador,{foreignKey: 'dni_capitan',as:'capitan'});\r\nListaInscripcion.belongsTo(Jugador,{foreignKey: 'dni_delegado',as:'delegado'});\r\nListaInscripcion.belongsTo(Jugador,{foreignKey: 'dni_subdelegado',as:'subDelegado'}); \r\n\r\n\r\n/*ListaInscripcion.belongsTo(Torneo,{foreignKey: 'anio_torneo',as:'anioTorneo'});\r\nListaInscripcion.belongsTo(Torneo,{foreignKey: 'tipo_torneo',as:'tipoTorneo'});  */\r\n\r\n\r\nexport default ListaInscripcion;"
      ]
    },
    "sourceType": "script",
    "mtime": 1616561438546
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Equipo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Equipo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Equipo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Equipo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Equipo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Equipo = _database.sequelize.define('Equipo', {\n  id_equipo: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT,\n    unique: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Equipo;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVxdWlwby5qcyJdLCJuYW1lcyI6WyJFcXVpcG8iLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJpZF9lcXVpcG8iLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50Iiwibm9tYnJlIiwiVEVYVCIsInVuaXF1ZSIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQURtQztBQUduQyxJQUFNQSxNQUFNLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFFBQWpCLEVBQTJCO0FBQ3RDQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEVDtBQUVQQyxJQUFBQSxVQUFVLEVBQUUsSUFGTDtBQUdQQyxJQUFBQSxhQUFhLEVBQUU7QUFIUixHQUQyQjtBQU10Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pMLElBQUFBLElBQUksRUFBRUMsc0JBQVVLLElBRFo7QUFFSkMsSUFBQUEsTUFBTSxFQUFFO0FBRko7QUFOOEIsQ0FBM0IsRUFVWjtBQUNDQyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FWWSxDQUFmOztlQWdCZWIsTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnOyAvLyBjbGFzZSBTZXF1ZWxpemVcclxuaW1wb3J0IHsgc2VxdWVsaXplIH0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnIC8vY29uZXhpb24gYSBsYSBiYXNlXHJcblxyXG5jb25zdCBFcXVpcG8gPSBzZXF1ZWxpemUuZGVmaW5lKCdFcXVpcG8nLCB7XHJcbiAgICBpZF9lcXVpcG86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlLFxyXG4gICAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuICAgIH0sXHJcbiAgICBub21icmU6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVCxcclxuICAgICAgICB1bmlxdWU6IHRydWVcclxuICAgIH1cclxufSwge1xyXG4gICAgdGltZXN0YW1wczogZmFsc2UsXHJcbiAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUsXHJcbn0pO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVxdWlwbzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Equipo.js"
      ],
      "names": [
        "Equipo",
        "sequelize",
        "define",
        "id_equipo",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "nombre",
        "TEXT",
        "unique",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,MAAM,GAAGC,oBAAUC,MAAV,CAAiB,QAAjB,EAA2B;AACtCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAEC,sBAAUC,OADT;AAEPC,IAAAA,UAAU,EAAE,IAFL;AAGPC,IAAAA,aAAa,EAAE;AAHR,GAD2B;AAMtCC,EAAAA,MAAM,EAAE;AACJL,IAAAA,IAAI,EAAEC,sBAAUK,IADZ;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAN8B,CAA3B,EAUZ;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAVY,CAAf;;eAgBeb,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Equipo = sequelize.define('Equipo', {\r\n    id_equipo: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    nombre: {\r\n        type: Sequelize.TEXT,\r\n        unique: true\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\n\r\nexport default Equipo;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142504
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Jugador_integra_Lista.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Jugador_integra_Lista.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Jugador_integra_Lista.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Jugador_integra_Lista.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Jugador_integra_Lista.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Jugador_integra_Lista = _database.sequelize.define('Jugador_integra_Lista', {\n  dni_jugador: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  id_lista: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Jugador_integra_Lista;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3JfaW50ZWdyYV9MaXN0YS5qcyJdLCJuYW1lcyI6WyJKdWdhZG9yX2ludGVncmFfTGlzdGEiLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJkbmlfanVnYWRvciIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImlkX2xpc3RhIiwidGltZXN0YW1wcyIsImZyZWV6ZVRhYmxlTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRG1DO0FBR25DLElBQU1BLHFCQUFxQixHQUFHQyxvQkFBVUMsTUFBVixDQUFpQix1QkFBakIsRUFBMEM7QUFDaEVDLEVBQUFBLFdBQVcsRUFBRTtBQUNUQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURQO0FBRVRDLElBQUFBLFVBQVUsRUFBRTtBQUZILEdBRG1EO0FBS2hFQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEVjtBQUVOQyxJQUFBQSxVQUFVLEVBQUM7QUFGTDtBQUxzRCxDQUExQyxFQVN2QjtBQUNDRSxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FUdUIsQ0FBOUI7O2VBZWVWLHFCIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7IC8vIGNsYXNlIFNlcXVlbGl6ZVxyXG5pbXBvcnQgeyBzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZScgLy9jb25leGlvbiBhIGxhIGJhc2VcclxuXHJcbmNvbnN0IEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0p1Z2Fkb3JfaW50ZWdyYV9MaXN0YScsIHtcclxuICAgICAgICBkbmlfanVnYWRvcjoge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgICAgIH0sIFxyXG4gICAgICAgIGlkX2xpc3RhOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgICAgICBwcmltYXJ5S2V5OnRydWVcclxuICAgICAgICB9XHJcbiAgICB9LCB7XHJcbiAgICAgICAgdGltZXN0YW1wczogZmFsc2UsXHJcbiAgICAgICAgZnJlZXplVGFibGVOYW1lOiB0cnVlIFxyXG4gICAgfVxyXG4pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Jugador_integra_Lista.js"
      ],
      "names": [
        "Jugador_integra_Lista",
        "sequelize",
        "define",
        "dni_jugador",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "id_lista",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,qBAAqB,GAAGC,oBAAUC,MAAV,CAAiB,uBAAjB,EAA0C;AAChEC,EAAAA,WAAW,EAAE;AACTC,IAAAA,IAAI,EAAEC,sBAAUC,OADP;AAETC,IAAAA,UAAU,EAAE;AAFH,GADmD;AAKhEC,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,IAAI,EAAEC,sBAAUC,OADV;AAENC,IAAAA,UAAU,EAAC;AAFL;AALsD,CAA1C,EASvB;AACCE,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CATuB,CAA9B;;eAeeV,qB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Jugador_integra_Lista = sequelize.define('Jugador_integra_Lista', {\r\n        dni_jugador: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey: true\r\n        }, \r\n        id_lista: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey:true\r\n        }\r\n    }, {\r\n        timestamps: false,\r\n        freezeTableName: true \r\n    }\r\n);\r\n\r\nexport default Jugador_integra_Lista;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142505
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\categoria.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\categoria.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\categoria.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\categoria.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "categoria.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _categoria = _interopRequireDefault(require(\"../controllers/categoria.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _categoria[\"default\"].obtenerCategorias);\nrouter.get('/:id', _categoria[\"default\"].obtenerCategoria);\nrouter.get('/:nombre/torneo/:anio/:tipo', _categoria[\"default\"].obtenerCategoriaDelTorneo);\nrouter.get('/:id/equipos', _categoria[\"default\"].obtenerEquipos); //obtener todos los equipos que pertenezcan a una categoría\n\nrouter.get('/:id/partidos', _categoria[\"default\"].obtenerPartidos); //obtener todos los partidos de una categoría\n\nrouter.get('/:id/tabla', _categoria[\"default\"].obtenerTabla); //obtener el objeto Tabla, correspondiente a una categoría\n\nrouter.get('/:id/refrescarTabla', _categoria[\"default\"].refrescarTabla); //refrescar (recalcula partidos jugados) y retorna la tabla de posiciones\n\nrouter.post('/', _categoria[\"default\"].crearCategoria); //recibe una Categoría a insertar en la base (Requiere, torneo previamente creado)\n\nrouter.post('/:id/agregarEquipos', _categoria[\"default\"].agregarEquipos); //agrego todos los equipos\n\nrouter.put('/:id/actualizarPartidos', _categoria[\"default\"].actualizarPartidos); // se juegan partidos y se debe actualizar los registros Partido\n\nrouter[\"delete\"]('/:id', _categoria[\"default\"].eliminarCategoria);\nrouter[\"delete\"]('/:id/EliminarEquipo/:id_equipo', _categoria[\"default\"].eliminarEquipo);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3JpYS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJDYXRlZ29yaWFDb250cm9sbGVyIiwib2J0ZW5lckNhdGVnb3JpYXMiLCJvYnRlbmVyQ2F0ZWdvcmlhIiwib2J0ZW5lckNhdGVnb3JpYURlbFRvcm5lbyIsIm9idGVuZXJFcXVpcG9zIiwib2J0ZW5lclBhcnRpZG9zIiwib2J0ZW5lclRhYmxhIiwicmVmcmVzY2FyVGFibGEiLCJwb3N0IiwiY3JlYXJDYXRlZ29yaWEiLCJhZ3JlZ2FyRXF1aXBvcyIsInB1dCIsImFjdHVhbGl6YXJQYXJ0aWRvcyIsImVsaW1pbmFyQ2F0ZWdvcmlhIiwiZWxpbWluYXJFcXVpcG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUtBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWVDLHNCQUFvQkMsaUJBQW5DO0FBQ0FILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JDLHNCQUFvQkUsZ0JBQXRDO0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLDZCQUFYLEVBQXlDQyxzQkFBb0JHLHlCQUE3RDtBQUVBTCxNQUFNLENBQUNDLEdBQVAsQ0FBVyxjQUFYLEVBQTBCQyxzQkFBb0JJLGNBQTlDLEUsQ0FBaUU7O0FBQ2pFTixNQUFNLENBQUNDLEdBQVAsQ0FBVyxlQUFYLEVBQTJCQyxzQkFBb0JLLGVBQS9DLEUsQ0FBaUU7O0FBRWpFUCxNQUFNLENBQUNDLEdBQVAsQ0FBVyxZQUFYLEVBQXdCQyxzQkFBb0JNLFlBQTVDLEUsQ0FBNEQ7O0FBQzVEUixNQUFNLENBQUNDLEdBQVAsQ0FBVyxxQkFBWCxFQUFrQ0Msc0JBQW9CTyxjQUF0RCxFLENBQXdFOztBQUd4RVQsTUFBTSxDQUFDVSxJQUFQLENBQVksR0FBWixFQUFpQlIsc0JBQW9CUyxjQUFyQyxFLENBQXVEOztBQUN2RFgsTUFBTSxDQUFDVSxJQUFQLENBQVkscUJBQVosRUFBa0NSLHNCQUFvQlUsY0FBdEQsRSxDQUF1RTs7QUFHdkVaLE1BQU0sQ0FBQ2EsR0FBUCxDQUFXLHlCQUFYLEVBQXNDWCxzQkFBb0JZLGtCQUExRCxFLENBQStFOztBQUUvRWQsTUFBTSxVQUFOLENBQWMsTUFBZCxFQUFxQkUsc0JBQW9CYSxpQkFBekM7QUFDQWYsTUFBTSxVQUFOLENBQWMsZ0NBQWQsRUFBK0NFLHNCQUFvQmMsY0FBbkU7ZUFFZWhCLE0iLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbmltcG9ydCBDYXRlZ29yaWFDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL2NhdGVnb3JpYS5jb250cm9sbGVyJztcclxuXHJcblxyXG5yb3V0ZXIuZ2V0KCcvJyxDYXRlZ29yaWFDb250cm9sbGVyLm9idGVuZXJDYXRlZ29yaWFzKTtcclxucm91dGVyLmdldCgnLzppZCcsQ2F0ZWdvcmlhQ29udHJvbGxlci5vYnRlbmVyQ2F0ZWdvcmlhKTtcclxucm91dGVyLmdldCgnLzpub21icmUvdG9ybmVvLzphbmlvLzp0aXBvJyxDYXRlZ29yaWFDb250cm9sbGVyLm9idGVuZXJDYXRlZ29yaWFEZWxUb3JuZW8pO1xyXG5cclxucm91dGVyLmdldCgnLzppZC9lcXVpcG9zJyxDYXRlZ29yaWFDb250cm9sbGVyLm9idGVuZXJFcXVpcG9zKTsgICAvL29idGVuZXIgdG9kb3MgbG9zIGVxdWlwb3MgcXVlIHBlcnRlbmV6Y2FuIGEgdW5hIGNhdGVnb3LDrWFcclxucm91dGVyLmdldCgnLzppZC9wYXJ0aWRvcycsQ2F0ZWdvcmlhQ29udHJvbGxlci5vYnRlbmVyUGFydGlkb3MpOyAvL29idGVuZXIgdG9kb3MgbG9zIHBhcnRpZG9zIGRlIHVuYSBjYXRlZ29yw61hXHJcblxyXG5yb3V0ZXIuZ2V0KCcvOmlkL3RhYmxhJyxDYXRlZ29yaWFDb250cm9sbGVyLm9idGVuZXJUYWJsYSk7ICAvL29idGVuZXIgZWwgb2JqZXRvIFRhYmxhLCBjb3JyZXNwb25kaWVudGUgYSB1bmEgY2F0ZWdvcsOtYVxyXG5yb3V0ZXIuZ2V0KCcvOmlkL3JlZnJlc2NhclRhYmxhJywgQ2F0ZWdvcmlhQ29udHJvbGxlci5yZWZyZXNjYXJUYWJsYSk7ICAvL3JlZnJlc2NhciAocmVjYWxjdWxhIHBhcnRpZG9zIGp1Z2Fkb3MpIHkgcmV0b3JuYSBsYSB0YWJsYSBkZSBwb3NpY2lvbmVzXHJcblxyXG5cclxucm91dGVyLnBvc3QoJy8nLCBDYXRlZ29yaWFDb250cm9sbGVyLmNyZWFyQ2F0ZWdvcmlhKTsgIC8vcmVjaWJlIHVuYSBDYXRlZ29yw61hIGEgaW5zZXJ0YXIgZW4gbGEgYmFzZSAoUmVxdWllcmUsIHRvcm5lbyBwcmV2aWFtZW50ZSBjcmVhZG8pXHJcbnJvdXRlci5wb3N0KCcvOmlkL2FncmVnYXJFcXVpcG9zJyxDYXRlZ29yaWFDb250cm9sbGVyLmFncmVnYXJFcXVpcG9zKTsgLy9hZ3JlZ28gdG9kb3MgbG9zIGVxdWlwb3NcclxuXHJcblxyXG5yb3V0ZXIucHV0KCcvOmlkL2FjdHVhbGl6YXJQYXJ0aWRvcycsIENhdGVnb3JpYUNvbnRyb2xsZXIuYWN0dWFsaXphclBhcnRpZG9zKTsgLy8gc2UganVlZ2FuIHBhcnRpZG9zIHkgc2UgZGViZSBhY3R1YWxpemFyIGxvcyByZWdpc3Ryb3MgUGFydGlkb1xyXG5cclxucm91dGVyLmRlbGV0ZSgnLzppZCcsQ2F0ZWdvcmlhQ29udHJvbGxlci5lbGltaW5hckNhdGVnb3JpYSk7IFxyXG5yb3V0ZXIuZGVsZXRlKCcvOmlkL0VsaW1pbmFyRXF1aXBvLzppZF9lcXVpcG8nLENhdGVnb3JpYUNvbnRyb2xsZXIuZWxpbWluYXJFcXVpcG8pOyBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "categoria.js"
      ],
      "names": [
        "router",
        "get",
        "CategoriaController",
        "obtenerCategorias",
        "obtenerCategoria",
        "obtenerCategoriaDelTorneo",
        "obtenerEquipos",
        "obtenerPartidos",
        "obtenerTabla",
        "refrescarTabla",
        "post",
        "crearCategoria",
        "agregarEquipos",
        "put",
        "actualizarPartidos",
        "eliminarCategoria",
        "eliminarEquipo"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAKAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,sBAAoBC,iBAAnC;AACAH,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,sBAAoBE,gBAAtC;AACAJ,MAAM,CAACC,GAAP,CAAW,6BAAX,EAAyCC,sBAAoBG,yBAA7D;AAEAL,MAAM,CAACC,GAAP,CAAW,cAAX,EAA0BC,sBAAoBI,cAA9C,E,CAAiE;;AACjEN,MAAM,CAACC,GAAP,CAAW,eAAX,EAA2BC,sBAAoBK,eAA/C,E,CAAiE;;AAEjEP,MAAM,CAACC,GAAP,CAAW,YAAX,EAAwBC,sBAAoBM,YAA5C,E,CAA4D;;AAC5DR,MAAM,CAACC,GAAP,CAAW,qBAAX,EAAkCC,sBAAoBO,cAAtD,E,CAAwE;;AAGxET,MAAM,CAACU,IAAP,CAAY,GAAZ,EAAiBR,sBAAoBS,cAArC,E,CAAuD;;AACvDX,MAAM,CAACU,IAAP,CAAY,qBAAZ,EAAkCR,sBAAoBU,cAAtD,E,CAAuE;;AAGvEZ,MAAM,CAACa,GAAP,CAAW,yBAAX,EAAsCX,sBAAoBY,kBAA1D,E,CAA+E;;AAE/Ed,MAAM,UAAN,CAAc,MAAd,EAAqBE,sBAAoBa,iBAAzC;AACAf,MAAM,UAAN,CAAc,gCAAd,EAA+CE,sBAAoBc,cAAnE;eAEehB,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport CategoriaController from '../controllers/categoria.controller';\r\n\r\n\r\nrouter.get('/',CategoriaController.obtenerCategorias);\r\nrouter.get('/:id',CategoriaController.obtenerCategoria);\r\nrouter.get('/:nombre/torneo/:anio/:tipo',CategoriaController.obtenerCategoriaDelTorneo);\r\n\r\nrouter.get('/:id/equipos',CategoriaController.obtenerEquipos);   //obtener todos los equipos que pertenezcan a una categoría\r\nrouter.get('/:id/partidos',CategoriaController.obtenerPartidos); //obtener todos los partidos de una categoría\r\n\r\nrouter.get('/:id/tabla',CategoriaController.obtenerTabla);  //obtener el objeto Tabla, correspondiente a una categoría\r\nrouter.get('/:id/refrescarTabla', CategoriaController.refrescarTabla);  //refrescar (recalcula partidos jugados) y retorna la tabla de posiciones\r\n\r\n\r\nrouter.post('/', CategoriaController.crearCategoria);  //recibe una Categoría a insertar en la base (Requiere, torneo previamente creado)\r\nrouter.post('/:id/agregarEquipos',CategoriaController.agregarEquipos); //agrego todos los equipos\r\n\r\n\r\nrouter.put('/:id/actualizarPartidos', CategoriaController.actualizarPartidos); // se juegan partidos y se debe actualizar los registros Partido\r\n\r\nrouter.delete('/:id',CategoriaController.eliminarCategoria); \r\nrouter.delete('/:id/EliminarEquipo/:id_equipo',CategoriaController.eliminarEquipo); \r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1619047134050
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\categoria.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\categoria.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\categoria.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\categoria.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "categoria.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _CategoriaService = _interopRequireDefault(require(\"../services/CategoriaService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Categoria_contiene_EquipoService = _interopRequireDefault(require(\"../services/Categoria_contiene_EquipoService\"));\n\nvar _TablaService = _interopRequireDefault(require(\"../services/TablaService\"));\n\nvar _PartidoService = _interopRequireDefault(require(\"../services/PartidoService\"));\n\nvar _Categoria = _interopRequireDefault(require(\"../models/Categoria\"));\n\nvar _Partido = _interopRequireDefault(require(\"../models/Partido\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar CategoriaController =\n/*#__PURE__*/\nfunction () {\n  function CategoriaController() {\n    _classCallCheck(this, CategoriaController);\n  }\n\n  _createClass(CategoriaController, null, [{\n    key: \"crearCategoria\",\n    value: function crearCategoria(req, res) {\n      var nuevaCategoria, nuevaTabla, categoriaCreada;\n      return regeneratorRuntime.async(function crearCategoria$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaCategoria = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].crearTablaVacia());\n\n            case 4:\n              nuevaTabla = _context.sent;\n              //creamos una tabla inicial para la nueva categoria\n              nuevaCategoria.id_tabla = nuevaTabla.id_tabla;\n              _context.next = 8;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].agregarCategoria(nuevaCategoria));\n\n            case 8:\n              categoriaCreada = _context.sent;\n              util.setSuccess(201, 'Categoria añadida', categoriaCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"obtenerCategoriaDelTorneo\",\n    value: function obtenerCategoriaDelTorneo(req, res) {\n      var nombre_categoria, anio_torneo, tipo_torneo, categoria;\n      return regeneratorRuntime.async(function obtenerCategoriaDelTorneo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              nombre_categoria = req.params.nombre;\n              anio_torneo = req.params.anio;\n              tipo_torneo = req.params.tipo;\n              _context2.next = 6;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategoriaDelTorneo(nombre_categoria, anio_torneo, tipo_torneo));\n\n            case 6:\n              categoria = _context2.sent;\n\n              if (categoria) {\n                util.setSuccess(200, 'Categoria obtenidas', categoria);\n              } else {\n                util.setSuccess(200, 'No se encuentran Categoría');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias(req, res) {\n      var categorias;\n      return regeneratorRuntime.async(function obtenerCategorias$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategorias());\n\n            case 3:\n              categorias = _context3.sent;\n\n              if (categorias && categorias.length > 0) {\n                util.setSuccess(200, 'Categorias obtenidas', categorias);\n              } else {\n                util.setSuccess(200, 'No se encuentran Categorías');\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(400, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerCategoria\",\n    value: function obtenerCategoria(req, res) {\n      var id_categoria, categoria;\n      return regeneratorRuntime.async(function obtenerCategoria$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_categoria = req.params.id;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategoria(id_categoria));\n\n            case 4:\n              categoria = _context4.sent;\n\n              // const tabla = await CategoriaService.generarTablaInicial(id_categoria); //Genera tabla inicial\n              //const partidos = await CategoriaService.obtenerPartidos(id_categoria);\n              if (categoria) {\n                //util.setSuccess(200,'Categoria obtenida',tabla); //funciona bien\n                util.setSuccess(200, 'Categoria obtenida', categoria);\n              } else {\n                util.setError(404, \"Categoria no encontrada\");\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarCategoria\",\n    value: function actualizarCategoria(req, res) {\n      var id_categoria, categoria, categoriaActualizada;\n      return regeneratorRuntime.async(function actualizarCategoria$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_categoria = req.params.id;\n              categoria = req.body;\n              _context5.next = 5;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].actualizarCategoria(id_categoria, categoria));\n\n            case 5:\n              categoriaActualizada = _context5.sent;\n\n              if (categoriaActualizada == 0) {\n                util.setError(400, \"Categor\\xEDa con id:\\\"\".concat(id_categoria, \"\\\" no se pudo actualizar. Chequear par\\xE1metros\"));\n              } else {\n                if (categoriaActualizada == null) {\n                  util.setError(404, \"Categoria con id:\\\"\".concat(id_categoria, \"\\\" no encontrada\"));\n                } else {\n                  util.setSuccess(200, 'Categoría actualizada', categoriaActualizada);\n                }\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarCategoria\",\n    value: function eliminarCategoria(req, res) {\n      var id_categoria, categoriaEliminada;\n      return regeneratorRuntime.async(function eliminarCategoria$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              id_categoria = req.params.id;\n              _context6.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].eliminarCategoria(id_categoria));\n\n            case 4:\n              categoriaEliminada = _context6.sent;\n\n              if (categoriaEliminada) {\n                util.setSuccess(200, 'Categoria eliminada');\n              } else {\n                util.setError(404, \"Categoria con id: \".concat(dni, \" no encontrada\"));\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"eliminarEquipo\",\n    value: function eliminarEquipo(req, res) {\n      var id_categoria, id_equipo, equipoEliminado;\n      return regeneratorRuntime.async(function eliminarEquipo$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              id_categoria = req.params.id;\n              id_equipo = req.params.id_equipo;\n              _context7.next = 5;\n              return regeneratorRuntime.awrap(_Categoria_contiene_EquipoService[\"default\"].eliminarEquipo(id_equipo, id_categoria));\n\n            case 5:\n              equipoEliminado = _context7.sent;\n\n              if (equipoEliminado) {\n                util.setSuccess(200, \"Equipo con id: \".concat(id_equipo, \" eliminado de la categor\\xEDa \").concat(id_categoria));\n              } else {\n                util.setError(404, \"Equipo con id: \".concat(id_equipo, \" o categor\\xEDa con id: \").concat(id_categoria, \" no encontrados\"));\n              }\n\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](0);\n              util.setError(404, _context7.t0.message);\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"agregarEquipos\",\n    value: function agregarEquipos(req, res) {\n      var id_categoria, categoria, equipos;\n      return regeneratorRuntime.async(function agregarEquipos$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              id_categoria = req.params.id;\n              _context8.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategoria(id_categoria));\n\n            case 4:\n              categoria = _context8.sent;\n              equipos = req.body;\n\n              if (!categoria) {\n                _context8.next = 12;\n                break;\n              }\n\n              _context8.next = 9;\n              return regeneratorRuntime.awrap(_Categoria_contiene_EquipoService[\"default\"].agregarEquipos(id_categoria, equipos));\n\n            case 9:\n              //const tabla = await CategoriaService.generarTablaInicial(id_categoria); //Genera tabla inicial, después de agregar a los equipos.\n              util.setSuccess(200, \"Equipos agregados a la categoria \".concat(id_categoria, \" \"), equipos);\n              _context8.next = 13;\n              break;\n\n            case 12:\n              util.setError(404, \"Categoria con id: \".concat(id_categoria, \" no encontrada\"));\n\n            case 13:\n              return _context8.abrupt(\"return\", util.send(res));\n\n            case 16:\n              _context8.prev = 16;\n              _context8.t0 = _context8[\"catch\"](0);\n              util.setError(404, _context8.t0.message);\n              return _context8.abrupt(\"return\", util.send(res));\n\n            case 20:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos(req, res) {\n      var id_categoria, categoria, equipos;\n      return regeneratorRuntime.async(function obtenerEquipos$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              id_categoria = req.params.id;\n              _context9.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerCategoria(id_categoria));\n\n            case 4:\n              categoria = _context9.sent;\n\n              if (!categoria) {\n                _context9.next = 12;\n                break;\n              }\n\n              _context9.next = 8;\n              return regeneratorRuntime.awrap(_Categoria_contiene_EquipoService[\"default\"].obtenerEquipos(id_categoria));\n\n            case 8:\n              equipos = _context9.sent;\n              util.setSuccess(200, \"Equipos de la categoria \".concat(id_categoria, \" \"), equipos);\n              _context9.next = 13;\n              break;\n\n            case 12:\n              util.setError(404, \"Categoria con id: \".concat(id_categoria, \" no encontrada\"));\n\n            case 13:\n              return _context9.abrupt(\"return\", util.send(res));\n\n            case 16:\n              _context9.prev = 16;\n              _context9.t0 = _context9[\"catch\"](0);\n              util.setError(404, _context9.t0.message);\n              return _context9.abrupt(\"return\", util.send(res));\n\n            case 20:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos(req, res) {\n      var id_categoria, partidos;\n      return regeneratorRuntime.async(function obtenerPartidos$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              id_categoria = req.params.id;\n              _context10.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerPartidos(id_categoria));\n\n            case 4:\n              partidos = _context10.sent;\n\n              if (partidos) {\n                if (partidos.length == 0) {\n                  util.setSuccess(200, \"No se registraron partidos en la categoria con id: \".concat(id_categoria), partidos);\n                } else {\n                  util.setSuccess(200, \"Partidos de la categoria \".concat(id_categoria, \" \"), partidos);\n                }\n              } else {\n                util.setError(404, \"Partidos de la Categoria con id: \".concat(id_categoria, \" no encontrados\"));\n              }\n\n              return _context10.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](0);\n              util.setError(404, _context10.t0.message);\n              return _context10.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(req, res) {\n      var id_categoria, tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              id_categoria = req.params.id;\n              _context11.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerTabla(id_categoria));\n\n            case 4:\n              tabla = _context11.sent;\n\n              //const tablaFicticia = await CategoriaService.generarTablaInicial(id_categoria); //Genera tabla inicial, después de agregar a los equipos\n              if (tabla) {\n                util.setSuccess(200, \"Tabla de la categoria \".concat(id_categoria), tabla);\n              } else {\n                util.setError(404, \"Tabla de la Categoria id: \".concat(id_categoria, \" no encontrada\"));\n              }\n\n              return _context11.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context11.prev = 9;\n              _context11.t0 = _context11[\"catch\"](0);\n              util.setError(404, _context11.t0.message);\n              return _context11.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(id_categoria) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerTorneo(id_categoria));\n\n            case 2:\n              torneo = _context12.sent;\n              return _context12.abrupt(\"return\", torneo);\n\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"refrescarTabla\",\n    value: function refrescarTabla(req, res) {\n      var id_categoria, tablaActualizada;\n      return regeneratorRuntime.async(function refrescarTabla$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              id_categoria = req.params.id;\n              _context13.next = 4;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].refrescarTabla(id_categoria));\n\n            case 4:\n              tablaActualizada = _context13.sent;\n\n              if (tablaActualizada != null) {\n                util.setSuccess(200, \"Tabla actualizada con \\xE9xito\", tablaActualizada);\n              } else {\n                util.setError(404, \"Tabla no se pudo actualizar\");\n              }\n\n              return _context13.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context13.prev = 9;\n              _context13.t0 = _context13[\"catch\"](0);\n              util.setError(404, _context13.t0.message);\n              return _context13.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"computarPartido\",\n    value: function computarPartido(req, res) {\n      var id_categoria, id_partido, partido, tabla, tablaActualizada, tablaActualizada2;\n      return regeneratorRuntime.async(function computarPartido$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              id_categoria = req.params.id_categoria;\n              id_partido = req.params.id_partido;\n              _context14.next = 5;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].obtenerPartido(id_partido));\n\n            case 5:\n              partido = _context14.sent;\n              _context14.next = 8;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].obtenerTabla(id_categoria));\n\n            case 8:\n              tabla = _context14.sent;\n              _context14.next = 11;\n              return regeneratorRuntime.awrap(_CategoriaService[\"default\"].computarPartido(tabla, partido));\n\n            case 11:\n              tablaActualizada = _context14.sent;\n              _context14.next = 14;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].actualizarTabla(tabla.id_tabla, tablaActualizada));\n\n            case 14:\n              tablaActualizada2 = _context14.sent;\n\n              if (tablaActualizada2) {\n                util.setSuccess(200, \"Partido computado con \\xE9xito\", tablaActualizada2);\n              }\n\n              return _context14.abrupt(\"return\", util.send(res));\n\n            case 19:\n              _context14.prev = 19;\n              _context14.t0 = _context14[\"catch\"](0);\n              util.setError(404, _context14.t0.message);\n              return _context14.abrupt(\"return\", util.send(res));\n\n            case 23:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, null, [[0, 19]]);\n    }\n  }, {\n    key: \"actualizarPartidos\",\n    value: function actualizarPartidos(req, res) {\n      var partidos, cargaPartidos;\n      return regeneratorRuntime.async(function actualizarPartidos$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              partidos = req.body;\n              _context15.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].actualizarPartidos(partidos));\n\n            case 4:\n              cargaPartidos = _context15.sent;\n\n              if (cargaPartidos) {\n                util.setSuccess(200, \"Partidos de la categor\\xEDa actualizados con \\xE9xito\", cargaPartidos);\n              } else {\n                util.setError(404, \"Partidos de la categor\\xEDa no se pudieron actualizar\");\n              }\n\n              _context15.next = 12;\n              break;\n\n            case 8:\n              _context15.prev = 8;\n              _context15.t0 = _context15[\"catch\"](0);\n              util.setError(404, _context15.t0.message);\n              return _context15.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }]);\n\n  return CategoriaController;\n}();\n\nvar _default = CategoriaController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "categoria.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "CategoriaController",
        "req",
        "res",
        "nuevaCategoria",
        "body",
        "TablaService",
        "crearTablaVacia",
        "nuevaTabla",
        "id_tabla",
        "CategoriaService",
        "agregarCategoria",
        "categoriaCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "nombre_categoria",
        "params",
        "nombre",
        "anio_torneo",
        "anio",
        "tipo_torneo",
        "tipo",
        "obtenerCategoriaDelTorneo",
        "categoria",
        "obtenerCategorias",
        "categorias",
        "length",
        "id_categoria",
        "id",
        "obtenerCategoria",
        "actualizarCategoria",
        "categoriaActualizada",
        "eliminarCategoria",
        "categoriaEliminada",
        "dni",
        "id_equipo",
        "Categoria_contiene_EquipoService",
        "eliminarEquipo",
        "equipoEliminado",
        "equipos",
        "agregarEquipos",
        "obtenerEquipos",
        "obtenerPartidos",
        "partidos",
        "obtenerTabla",
        "tabla",
        "obtenerTorneo",
        "torneo",
        "refrescarTabla",
        "tablaActualizada",
        "id_partido",
        "PartidoService",
        "obtenerPartido",
        "partido",
        "computarPartido",
        "actualizarTabla",
        "tablaActualizada2",
        "actualizarPartidos",
        "cargaPartidos"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,mB;;;;;;;;;mCAC0BC,G,EAAKC,G;;;;;;;AAEnBC,cAAAA,c,GAAiBF,GAAG,CAACG,I;;8CACFC,yBAAaC,eAAb,E;;;AAAnBC,cAAAA,U;AAAoD;AAC1DJ,cAAAA,cAAc,CAACK,QAAf,GAA0BD,UAAU,CAACC,QAArC;;8CAE8BC,6BAAiBC,gBAAjB,CAAkCP,cAAlC,C;;;AAAxBQ,cAAAA,e;AAENb,cAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCD,eAAxC;+CACOb,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;8CAIwBD,G,EAAIC,G;;;;;;;AAE7Bc,cAAAA,gB,GAAmBf,GAAG,CAACgB,MAAJ,CAAWC,M;AAC9BC,cAAAA,W,GAAclB,GAAG,CAACgB,MAAJ,CAAWG,I;AACzBC,cAAAA,W,GAAcpB,GAAG,CAACgB,MAAJ,CAAWK,I;;8CAEPb,6BAAiBc,yBAAjB,CAA2CP,gBAA3C,EAA4DG,WAA5D,EAAwEE,WAAxE,C;;;AAAlBG,cAAAA,S;;AAEN,kBAAGA,SAAH,EAAa;AACT1B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0CY,SAA1C;AACH,eAFD,MAGI;AACA1B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,4BAApB;AACH;;gDACMd,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;;8CAEHO,6BAAiBgB,iBAAjB,E;;;AAAnBC,cAAAA,U;;AAEN,kBAAGA,UAAU,IAAIA,UAAU,CAACC,MAAX,GAAoB,CAArC,EAAuC;AACnC7B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,sBAApB,EAA2Cc,UAA3C;AACH,eAFD,MAGI;AACA5B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,6BAApB;AACH;;gDACMd,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;qCAIeD,G,EAAKC,G;;;;;;;AAEjB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;;8CACRpB,6BAAiBqB,gBAAjB,CAAkCF,YAAlC,C;;;AAAlBJ,cAAAA,S;;AAEP;AAEC;AAEJ,kBAAGA,SAAH,EAAa;AACT;AAEA1B,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCY,SAAzC;AACH,eAJD,MAKI;AACA1B,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd;AACH;;gDACMhB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;wCAIkBD,G,EAAKC,G;;;;;;;AAExB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;AAC1BL,cAAAA,S,GAAYvB,GAAG,CAACG,I;;8CACaK,6BAAiBsB,mBAAjB,CAAqCH,YAArC,EAAkDJ,SAAlD,C;;;AAA7BQ,cAAAA,oB;;AAEN,kBAAGA,oBAAoB,IAAE,CAAzB,EAA2B;AACvBlC,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,kCAAuCc,YAAvC;AACH,eAFD,MAGI;AACA,oBAAGI,oBAAoB,IAAE,IAAzB,EAA8B;AAC1BlC,kBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,+BAAuCc,YAAvC;AACH,iBAFD,MAGI;AACA9B,kBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,uBAApB,EAA4CoB,oBAA5C;AACH;AACJ;;gDACMlC,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAEtB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;;8CACCpB,6BAAiBwB,iBAAjB,CAAmCL,YAAnC,C;;;AAA3BM,cAAAA,kB;;AAEN,kBAAGA,kBAAH,EAAsB;AAClBpC,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,EAAoB,qBAApB;AACH,eAFD,MAGI;AACAd,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,8BAAuCqB,GAAvC;AACH;;gDAEMrC,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;AAC1BO,cAAAA,S,GAAYnC,GAAG,CAACgB,MAAJ,CAAWmB,S;;8CAECC,6CAAiCC,cAAjC,CAAgDF,SAAhD,EAA0DR,YAA1D,C;;;AAAxBW,cAAAA,e;;AAEN,kBAAGA,eAAH,EAAmB;AACfzC,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,2BAAsCwB,SAAtC,2CAA6ER,YAA7E;AACH,eAFD,MAGI;AACA9B,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,2BAAoCsB,SAApC,qCAAqER,YAArE;AACH;;gDAEM9B,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;;8CACRpB,6BAAiBqB,gBAAjB,CAAkCF,YAAlC,C;;;AAAlBJ,cAAAA,S;AACAgB,cAAAA,O,GAAUvC,GAAG,CAACG,I;;mBAEjBoB,S;;;;;;8CACOa,6CAAiCI,cAAjC,CAAgDb,YAAhD,EAA6DY,OAA7D,C;;;AAEN;AAEA1C,cAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,6CAAwDgB,YAAxD,QAAwEY,OAAxE;;;;;AAGA1C,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,8BAAuCc,YAAvC;;;gDAGG9B,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;;8CACRpB,6BAAiBqB,gBAAjB,CAAkCF,YAAlC,C;;;AAAlBJ,cAAAA,S;;mBAEHA,S;;;;;;8CACuBa,6CAAiCK,cAAjC,CAAgDd,YAAhD,C;;;AAAhBY,cAAAA,O;AACN1C,cAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,oCAA+CgB,YAA/C,QAA+DY,OAA/D;;;;;AAGA1C,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,8BAAuCc,YAAvC;;;gDAGG9B,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAIC,G;;;;;;;AAEnB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;;8CACTpB,6BAAiBkC,eAAjB,CAAiCf,YAAjC,C;;;AAAjBgB,cAAAA,Q;;AAEN,kBAAGA,QAAH,EAAY;AACR,oBAAIA,QAAQ,CAACjB,MAAT,IAAiB,CAArB,EAAuB;AACnB7B,kBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,+DAA0EgB,YAA1E,GAAyFgB,QAAzF;AACH,iBAFD,MAGI;AACA9C,kBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,qCAAgDgB,YAAhD,QAAiEgB,QAAjE;AACH;AACJ,eAPD,MAQI;AACA9C,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,6CAAsDc,YAAtD;AACH;;iDAEM9B,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;iCAKWD,G,EAAIC,G;;;;;;;AAEhB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;;8CAGZpB,6BAAiBoC,YAAjB,CAA8BjB,YAA9B,C;;;AAAdkB,cAAAA,K;;AAEN;AAEA,kBAAGA,KAAH,EAAS;AACLhD,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,kCAA6CgB,YAA7C,GAA4DkB,KAA5D;AACH,eAFD,MAGI;AACAhD,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,sCAA+Cc,YAA/C;AACH;;iDACM9B,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;kCAIY0B,Y;;;;;;;8CACFnB,6BAAiBsC,aAAjB,CAA+BnB,YAA/B,C;;;AAAfoB,cAAAA,M;iDACCA,M;;;;;;;;;;;mCAGiB/C,G,EAAIC,G;;;;;;;AAElB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWY,E;;8CACDpB,6BAAiBwC,cAAjB,CAAgCrB,YAAhC,C;;;AAAzBsB,cAAAA,gB;;AAGN,kBAAIA,gBAAgB,IAAE,IAAtB,EAA2B;AACvBpD,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,oCAAmDsC,gBAAnD;AACH,eAFD,MAGI;AACApD,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd;AACH;;iDACMhB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpB0B,cAAAA,Y,GAAe3B,GAAG,CAACgB,MAAJ,CAAWW,Y;AAC1BuB,cAAAA,U,GAAalD,GAAG,CAACgB,MAAJ,CAAWkC,U;;8CAERC,2BAAeC,cAAf,CAA8BF,UAA9B,C;;;AAAhBG,cAAAA,O;;8CACc7C,6BAAiBoC,YAAjB,CAA8BjB,YAA9B,C;;;AAAdkB,cAAAA,K;;8CAEyBrC,6BAAiB8C,eAAjB,CAAiCT,KAAjC,EAAuCQ,OAAvC,C;;;AAAzBJ,cAAAA,gB;;8CAE0B7C,yBAAamD,eAAb,CAA6BV,KAAK,CAACtC,QAAnC,EAA4C0C,gBAA5C,C;;;AAA1BO,cAAAA,iB;;AAEL,kBAAGA,iBAAH,EAAqB;AAClB3D,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,oCAAmD6C,iBAAnD;AACH;;iDAEM3D,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;uCAIiBD,G,EAAKC,G;;;;;;;AAEvB0C,cAAAA,Q,GAAW3C,GAAG,CAACG,I;;8CAEOgD,2BAAeM,kBAAf,CAAkCd,QAAlC,C;;;AAAtBe,cAAAA,a;;AAEN,kBAAIA,aAAJ,EAAkB;AACd7D,gBAAAA,IAAI,CAACc,UAAL,CAAgB,GAAhB,2DAAsE+C,aAAtE;AACH,eAFD,MAGI;AACA7D,gBAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd;AACH;;;;;;;;AAGDhB,cAAAA,IAAI,CAACgB,QAAL,CAAc,GAAd,EAAmB,cAAMC,OAAzB;iDACOjB,IAAI,CAACe,IAAL,CAAUX,GAAV,C;;;;;;;;;;;;;;eAKJF,mB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import CategoriaService from '../services/CategoriaService';\r\nimport Util from '../utils/Utils';\r\nimport Categoria_contiene_EquipoService from '../services/Categoria_contiene_EquipoService';\r\nimport TablaService from '../services/TablaService';\r\nimport PartidoService from '../services/PartidoService';\r\nimport Categoria from '../models/Categoria';\r\nimport Partido from '../models/Partido';\r\n\r\nconst util = new Util();\r\n\r\nclass CategoriaController {\r\n    static async crearCategoria(req, res) {    \r\n        try {    \r\n            const nuevaCategoria = req.body;\r\n            const nuevaTabla = await TablaService.crearTablaVacia();  //creamos una tabla inicial para la nueva categoria\r\n            nuevaCategoria.id_tabla = nuevaTabla.id_tabla;\r\n            \r\n            const categoriaCreada = await CategoriaService.agregarCategoria(nuevaCategoria);\r\n\r\n            util.setSuccess(201,'Categoria añadida',categoriaCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerCategoriaDelTorneo(req,res) {\r\n        try {\r\n            const nombre_categoria = req.params.nombre;\r\n            const anio_torneo = req.params.anio;\r\n            const tipo_torneo = req.params.tipo;\r\n\r\n            const categoria = await CategoriaService.obtenerCategoriaDelTorneo(nombre_categoria,anio_torneo,tipo_torneo);\r\n            \r\n            if(categoria){\r\n                util.setSuccess(200,'Categoria obtenidas',categoria);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Categoría'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerCategorias(req, res){\r\n        try {\r\n            const categorias = await CategoriaService.obtenerCategorias();\r\n            \r\n            if(categorias && categorias.length > 0){\r\n                util.setSuccess(200,'Categorias obtenidas',categorias);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Categorías'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerCategoria(req, res){\r\n        try {\r\n                const id_categoria = req.params.id;\r\n                const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n\r\n               // const tabla = await CategoriaService.generarTablaInicial(id_categoria); //Genera tabla inicial\r\n\r\n                //const partidos = await CategoriaService.obtenerPartidos(id_categoria);\r\n            \r\n            if(categoria){\r\n                //util.setSuccess(200,'Categoria obtenida',tabla); //funciona bien\r\n                \r\n                util.setSuccess(200,'Categoria obtenida',categoria);\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria no encontrada`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n   \r\n    static async actualizarCategoria(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoria = req.body;\r\n            const categoriaActualizada = await CategoriaService.actualizarCategoria(id_categoria,categoria);\r\n\r\n            if(categoriaActualizada==0){\r\n                util.setError(400,`Categoría con id:\"${id_categoria}\" no se pudo actualizar. Chequear parámetros`);\r\n            }\r\n            else{\r\n                if(categoriaActualizada==null){\r\n                    util.setError(404,`Categoria con id:\"${id_categoria}\" no encontrada`);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,'Categoría actualizada',categoriaActualizada);\r\n                }\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async eliminarCategoria(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoriaEliminada = await CategoriaService.eliminarCategoria(id_categoria);\r\n\r\n            if(categoriaEliminada){\r\n                util.setSuccess(200,'Categoria eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria con id: ${dni} no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarEquipo(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const id_equipo = req.params.id_equipo;\r\n            \r\n            const equipoEliminado = await Categoria_contiene_EquipoService.eliminarEquipo(id_equipo,id_categoria);\r\n\r\n            if(equipoEliminado){\r\n                util.setSuccess(200,`Equipo con id: ${id_equipo} eliminado de la categoría ${id_categoria}`);\r\n            }\r\n            else{\r\n                util.setError(404,`Equipo con id: ${id_equipo} o categoría con id: ${id_categoria} no encontrados`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async agregarEquipos(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n            const equipos = req.body;\r\n\r\n            if(categoria){\r\n                await Categoria_contiene_EquipoService.agregarEquipos(id_categoria,equipos);\r\n\r\n                //const tabla = await CategoriaService.generarTablaInicial(id_categoria); //Genera tabla inicial, después de agregar a los equipos.\r\n                \r\n                util.setSuccess(200,`Equipos agregados a la categoria ${id_categoria} `,equipos);\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria con id: ${id_categoria} no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerEquipos(req, res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n\r\n            if(categoria){\r\n                const equipos = await Categoria_contiene_EquipoService.obtenerEquipos(id_categoria);\r\n                util.setSuccess(200,`Equipos de la categoria ${id_categoria} `,equipos);\r\n            }\r\n            else{\r\n                util.setError(404,`Categoria con id: ${id_categoria} no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerPartidos(req,res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const partidos = await CategoriaService.obtenerPartidos(id_categoria);\r\n\r\n            if(partidos){\r\n                if (partidos.length==0){\r\n                    util.setSuccess(200,`No se registraron partidos en la categoria con id: ${id_categoria}`,partidos);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,`Partidos de la categoria ${id_categoria} `, partidos);\r\n                }\r\n            }\r\n            else{\r\n                util.setError(404,`Partidos de la Categoria con id: ${id_categoria} no encontrados`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n\r\n    static async obtenerTabla(req,res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n\r\n\r\n            const tabla = await CategoriaService.obtenerTabla(id_categoria);\r\n\r\n            //const tablaFicticia = await CategoriaService.generarTablaInicial(id_categoria); //Genera tabla inicial, después de agregar a los equipos\r\n\r\n            if(tabla){\r\n                util.setSuccess(200,`Tabla de la categoria ${id_categoria}`,tabla);\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla de la Categoria id: ${id_categoria} no encontrada`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        } \r\n    }\r\n\r\n    static async obtenerTorneo(id_categoria){\r\n        const torneo = await CategoriaService.obtenerTorneo(id_categoria);\r\n        return torneo; \r\n    }\r\n\r\n    static async refrescarTabla(req,res){\r\n        try {\r\n            const id_categoria = req.params.id;\r\n            const tablaActualizada = await CategoriaService.refrescarTabla(id_categoria);\r\n            \r\n\r\n            if (tablaActualizada!=null){\r\n                util.setSuccess(200,`Tabla actualizada con éxito`, tablaActualizada);\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla no se pudo actualizar`);\r\n            }\r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async computarPartido(req, res){\r\n        try {\r\n            const id_categoria = req.params.id_categoria;\r\n            const id_partido = req.params.id_partido;\r\n\r\n            const partido = await PartidoService.obtenerPartido(id_partido);\r\n            const tabla = await CategoriaService.obtenerTabla(id_categoria);\r\n\r\n            const tablaActualizada = await CategoriaService.computarPartido(tabla,partido);\r\n\r\n            const tablaActualizada2 = await TablaService.actualizarTabla(tabla.id_tabla,tablaActualizada);\r\n\r\n             if(tablaActualizada2){\r\n                util.setSuccess(200,`Partido computado con éxito`, tablaActualizada2);\r\n            } \r\n            \r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async actualizarPartidos(req, res){\r\n        try {\r\n            const partidos = req.body;\r\n\r\n            const cargaPartidos = await PartidoService.actualizarPartidos(partidos); \r\n\r\n            if (cargaPartidos){\r\n                util.setSuccess(200,`Partidos de la categoría actualizados con éxito`,cargaPartidos);\r\n            }\r\n            else{\r\n                util.setError(404,`Partidos de la categoría no se pudieron actualizar`);\r\n            }\r\n\r\n        } catch (error) {\r\n            util.setError(404, error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n}\r\n\r\nexport default CategoriaController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619047129883
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\CategoriaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\CategoriaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\CategoriaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\CategoriaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "CategoriaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Categoria = _interopRequireDefault(require(\"../models/Categoria\"));\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nvar _Partido = _interopRequireDefault(require(\"../models/Partido\"));\n\nvar _Equipo = _interopRequireDefault(require(\"../models/Equipo\"));\n\nvar _Categoria_contiene_EquipoService = _interopRequireDefault(require(\"./Categoria_contiene_EquipoService\"));\n\nvar _EquipoService = _interopRequireDefault(require(\"./EquipoService\"));\n\nvar _PartidoService = _interopRequireDefault(require(\"./PartidoService\"));\n\nvar _TablaService = _interopRequireDefault(require(\"./TablaService\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CategoriaService =\n/*#__PURE__*/\nfunction () {\n  function CategoriaService() {\n    _classCallCheck(this, CategoriaService);\n  }\n\n  _createClass(CategoriaService, null, [{\n    key: \"agregarCategoria\",\n    value: function agregarCategoria(nuevaCategoria) {\n      return regeneratorRuntime.async(function agregarCategoria$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].create(nuevaCategoria));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerCategorias\",\n    value: function obtenerCategorias() {\n      return regeneratorRuntime.async(function obtenerCategorias$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerCategoria\",\n    value: function obtenerCategoria(id_categoria) {\n      var categoria;\n      return regeneratorRuntime.async(function obtenerCategoria$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoria = _context3.sent;\n\n              if (!(categoria == null)) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", null);\n\n            case 6:\n              return _context3.abrupt(\"return\", categoria.dataValues);\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerCategoriaDelTorneo\",\n    value: function obtenerCategoriaDelTorneo(nombre_categoria, anio_torneo, tipo_torneo) {\n      var anio_torneo2, categoria;\n      return regeneratorRuntime.async(function obtenerCategoriaDelTorneo$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              anio_torneo2 = parseInt(anio_torneo);\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findOne({\n                where: {\n                  nombre: nombre_categoria,\n                  anio_torneo: anio_torneo2,\n                  tipo_torneo: tipo_torneo\n                }\n              }));\n\n            case 4:\n              categoria = _context4.sent;\n\n              if (!(categoria == null)) {\n                _context4.next = 7;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", null);\n\n            case 7:\n              return _context4.abrupt(\"return\", categoria.dataValues);\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"actualizarCategoria\",\n    value: function actualizarCategoria(id_categoria, categoria) {\n      var categoriaExistente, actualizado;\n      return regeneratorRuntime.async(function actualizarCategoria$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoriaExistente = _context5.sent;\n\n              if (!categoriaExistente) {\n                _context5.next = 15;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].update(categoria, {\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 7:\n              actualizado = _context5.sent;\n\n              if (!(actualizado == 0)) {\n                _context5.next = 12;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", 0);\n\n            case 12:\n              return _context5.abrupt(\"return\", categoria);\n\n            case 13:\n              _context5.next = 16;\n              break;\n\n            case 15:\n              return _context5.abrupt(\"return\", null);\n\n            case 16:\n              _context5.next = 21;\n              break;\n\n            case 18:\n              _context5.prev = 18;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }, {\n    key: \"eliminarCategoria\",\n    value: function eliminarCategoria(id_categoria) {\n      var categoriaExistente, categoriaEliminada;\n      return regeneratorRuntime.async(function eliminarCategoria$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoriaExistente = _context6.sent;\n\n              if (!categoriaExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].destroy({\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 7:\n              categoriaEliminada = _context6.sent;\n              return _context6.abrupt(\"return\", categoriaEliminada);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(id_categoria) {\n      var categoria, tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoria = _context7.sent;\n\n              if (!categoria) {\n                _context7.next = 11;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(categoria.getTabla());\n\n            case 7:\n              tabla = _context7.sent;\n              return _context7.abrupt(\"return\", tabla.dataValues);\n\n            case 11:\n              return _context7.abrupt(\"return\", null);\n\n            case 12:\n              _context7.next = 17;\n              break;\n\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(id_categoria) {\n      var categoria, anio_torneo, tipo_torneo, torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return regeneratorRuntime.awrap(_Categoria[\"default\"].findByPk(id_categoria));\n\n            case 3:\n              categoria = _context8.sent;\n              _context8.next = 6;\n              return regeneratorRuntime.awrap(categoria.anio_torneo);\n\n            case 6:\n              anio_torneo = _context8.sent;\n              _context8.next = 9;\n              return regeneratorRuntime.awrap(categoria.tipo_torneo);\n\n            case 9:\n              tipo_torneo = _context8.sent;\n              _context8.next = 12;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                raw: true,\n                where: {\n                  anio: anio_torneo,\n                  tipo: tipo_torneo\n                }\n              }));\n\n            case 12:\n              torneo = _context8.sent;\n              return _context8.abrupt(\"return\", torneo);\n\n            case 16:\n              _context8.prev = 16;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos(id_categoria) {\n      var partidos;\n      return regeneratorRuntime.async(function obtenerPartidos$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findAll({\n                raw: true,\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 3:\n              partidos = _context9.sent;\n              return _context9.abrupt(\"return\", partidos);\n\n            case 7:\n              _context9.prev = 7;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"generarTablaInicial\",\n    value: function generarTablaInicial(id_categoria) {\n      var equipos, tabla, i, equipo_categoria, id_equipo, equipo, fila, tabla_json;\n      return regeneratorRuntime.async(function generarTablaInicial$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return regeneratorRuntime.awrap(_Categoria_contiene_EquipoService[\"default\"].obtenerEquipos(id_categoria));\n\n            case 3:\n              equipos = _context10.sent;\n              tabla = [];\n\n              if (!equipos) {\n                _context10.next = 23;\n                break;\n              }\n\n              _context10.t0 = regeneratorRuntime.keys(equipos);\n\n            case 7:\n              if ((_context10.t1 = _context10.t0()).done) {\n                _context10.next = 18;\n                break;\n              }\n\n              i = _context10.t1.value;\n              equipo_categoria = equipos[i]; //tupla (id_equipo, id_categoria)\n\n              id_equipo = equipo_categoria.id_equipo;\n              _context10.next = 13;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipoID(id_equipo));\n\n            case 13:\n              equipo = _context10.sent;\n              fila = {\n                \"id_equipo\": equipo.id_equipo,\n                \"nombre_equipo\": equipo.nombre,\n                \"puntos\": 0,\n                \"partidos_jugados\": 0,\n                \"partidos_ganados\": 0,\n                \"partidos_empatados\": 0,\n                \"partidos_perdidos\": 0,\n                \"goles_favor\": 0,\n                \"goles_contra\": 0,\n                \"diferencia_goles\": 0\n              };\n              tabla.push(fila);\n              _context10.next = 7;\n              break;\n\n            case 18:\n              tabla_json = {};\n              tabla_json.tabla = tabla; //const categoria = await CategoriaService.obtenerCategoria(id_categoria);\n              //const tablaActualizada = await TablaService.actualizarTabla(categoria.id_tabla,tabla); \n\n              return _context10.abrupt(\"return\", tabla_json);\n\n            case 23:\n              return _context10.abrupt(\"return\", null);\n\n            case 24:\n              _context10.next = 29;\n              break;\n\n            case 26:\n              _context10.prev = 26;\n              _context10.t2 = _context10[\"catch\"](0);\n              throw _context10.t2;\n\n            case 29:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[0, 26]]);\n    }\n  }, {\n    key: \"computarPartido\",\n    value: function computarPartido(tabla, partido) {\n      var id_equipo_local, id_equipo_visitante, goles_local, goles_visitante, tablaPuntaje, fila_equipo_local, fila_equipo_visitante;\n      return regeneratorRuntime.async(function computarPartido$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              id_equipo_local = partido.id_equipo_local;\n              id_equipo_visitante = partido.id_equipo_visitante;\n              goles_local = partido.goles_local;\n              goles_visitante = partido.goles_visitante;\n              tablaPuntaje = tabla.tabla; //console.log(\"Tabla\", tablaPuntaje);\n\n              fila_equipo_local = tablaPuntaje.filter(function (fila) {\n                return fila.id_equipo == id_equipo_local;\n              });\n              fila_equipo_visitante = tablaPuntaje.filter(function (fila) {\n                return fila.id_equipo == id_equipo_visitante;\n              });\n\n              if (goles_local > goles_visitante) {\n                CategoriaService.computarVictoria(fila_equipo_local, fila_equipo_visitante);\n              } else {\n                if (goles_local < goles_visitante) {\n                  CategoriaService.computarVictoria(fila_equipo_visitante, fila_equipo_local);\n                } else {\n                  CategoriaService.computarEmpate(fila_equipo_local, fila_equipo_visitante);\n                }\n              }\n\n              CategoriaService.computarJugado_Goles(fila_equipo_local, goles_local, goles_visitante);\n              CategoriaService.computarJugado_Goles(fila_equipo_visitante, goles_visitante, goles_local); // ------------------------------------------------------------------------------------------------------------\n\n              /*   console.log(\"Tabla equipo local\", fila_equipo_local);\r\n                    console.log(\"Tabla equipo visitante\", fila_equipo_visitante);\r\n                      console.log(\"-------------------------------------------------\");\r\n                  console.log(\"TABLA\",tabla);  */\n              //-------------------------------------------------------------------------------------------------------------\n              ///ACÁ TENGO QUE ACTUALIZAR LA TABLA! \n              //console.log(tabla);\n\n              return _context11.abrupt(\"return\", tabla);\n\n            case 14:\n              _context11.prev = 14;\n              _context11.t0 = _context11[\"catch\"](0);\n              throw _context11.t0;\n\n            case 17:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"computarVictoria\",\n    value: function computarVictoria(equipo1, equipo2) {\n      return regeneratorRuntime.async(function computarVictoria$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              //Victoria del equipo1 sobre el equipo2\n              equipo1[0].puntos += 3;\n              equipo1[0].partidos_ganados += 1;\n              equipo2[0].partidos_perdidos += 1;\n\n            case 3:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"computarEmpate\",\n    value: function computarEmpate(equipo1, equipo2) {\n      return regeneratorRuntime.async(function computarEmpate$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              equipo1[0].puntos += 1;\n              equipo2[0].puntos += 1;\n              equipo1[0].partidos_empatados += 1;\n              equipo2[0].partidos_empatados += 1;\n\n            case 4:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"computarJugado_Goles\",\n    value: function computarJugado_Goles(equipo, golesFavor, golesContra) {\n      return regeneratorRuntime.async(function computarJugado_Goles$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              equipo[0].partidos_jugados += 1;\n              equipo[0].goles_favor += golesFavor;\n              equipo[0].goles_contra += golesContra;\n              equipo[0].diferencia_goles = equipo[0].goles_favor - equipo[0].goles_contra;\n\n            case 4:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"computarPartidosJugados\",\n    value: function computarPartidosJugados(id_categoria, tabla_inicial) {\n      var partidos, tabla_computada, partidos_jugados, i, partidoJugado;\n      return regeneratorRuntime.async(function computarPartidosJugados$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return regeneratorRuntime.awrap(CategoriaService.obtenerPartidos(id_categoria));\n\n            case 2:\n              partidos = _context15.sent;\n              tabla_computada = tabla_inicial;\n              partidos_jugados = partidos.filter(function (partido) {\n                return partido.jugado == true;\n              }); //obtenemos todos los partidos jugados hasta el momento en la categoría\n\n              _context15.t0 = regeneratorRuntime.keys(partidos_jugados);\n\n            case 6:\n              if ((_context15.t1 = _context15.t0()).done) {\n                _context15.next = 15;\n                break;\n              }\n\n              i = _context15.t1.value;\n              partidoJugado = partidos_jugados[i];\n              console.log(\"Iteracion\", i);\n              _context15.next = 12;\n              return regeneratorRuntime.awrap(CategoriaService.computarPartido(tabla_computada, partidoJugado));\n\n            case 12:\n              tabla_computada = _context15.sent;\n              _context15.next = 6;\n              break;\n\n            case 15:\n              return _context15.abrupt(\"return\", tabla_computada);\n\n            case 16:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"refrescarTabla\",\n    value: function refrescarTabla(id_categoria) {\n      var tabla_inicial, tabla_calculada, categoria, id_tabla, actualizacion_tabla;\n      return regeneratorRuntime.async(function refrescarTabla$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              _context16.next = 3;\n              return regeneratorRuntime.awrap(this.generarTablaInicial(id_categoria));\n\n            case 3:\n              tabla_inicial = _context16.sent;\n              _context16.next = 6;\n              return regeneratorRuntime.awrap(this.computarPartidosJugados(id_categoria, tabla_inicial));\n\n            case 6:\n              tabla_calculada = _context16.sent;\n              _context16.next = 9;\n              return regeneratorRuntime.awrap(CategoriaService.obtenerTabla(id_categoria));\n\n            case 9:\n              categoria = _context16.sent;\n              id_tabla = categoria.id_tabla;\n              _context16.next = 13;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].actualizarTabla(id_tabla, tabla_calculada));\n\n            case 13:\n              actualizacion_tabla = _context16.sent;\n              return _context16.abrupt(\"return\", actualizacion_tabla);\n\n            case 17:\n              _context16.prev = 17;\n              _context16.t0 = _context16[\"catch\"](0);\n              throw _context16.t0;\n\n            case 20:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, this, [[0, 17]]);\n    }\n  }]);\n\n  return CategoriaService;\n}();\n\nvar _default = CategoriaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "CategoriaService.js"
      ],
      "names": [
        "CategoriaService",
        "nuevaCategoria",
        "Categoria",
        "create",
        "findAll",
        "id_categoria",
        "findByPk",
        "categoria",
        "dataValues",
        "nombre_categoria",
        "anio_torneo",
        "tipo_torneo",
        "anio_torneo2",
        "parseInt",
        "findOne",
        "where",
        "nombre",
        "categoriaExistente",
        "update",
        "actualizado",
        "destroy",
        "categoriaEliminada",
        "getTabla",
        "tabla",
        "Torneo",
        "raw",
        "anio",
        "tipo",
        "torneo",
        "Partido",
        "partidos",
        "Categoria_contiene_EquipoService",
        "obtenerEquipos",
        "equipos",
        "i",
        "equipo_categoria",
        "id_equipo",
        "EquipoService",
        "obtenerEquipoID",
        "equipo",
        "fila",
        "push",
        "tabla_json",
        "partido",
        "id_equipo_local",
        "id_equipo_visitante",
        "goles_local",
        "goles_visitante",
        "tablaPuntaje",
        "fila_equipo_local",
        "filter",
        "fila_equipo_visitante",
        "computarVictoria",
        "computarEmpate",
        "computarJugado_Goles",
        "equipo1",
        "equipo2",
        "puntos",
        "partidos_ganados",
        "partidos_perdidos",
        "partidos_empatados",
        "golesFavor",
        "golesContra",
        "partidos_jugados",
        "goles_favor",
        "goles_contra",
        "diferencia_goles",
        "tabla_inicial",
        "obtenerPartidos",
        "tabla_computada",
        "jugado",
        "partidoJugado",
        "console",
        "log",
        "computarPartido",
        "generarTablaInicial",
        "computarPartidosJugados",
        "tabla_calculada",
        "obtenerTabla",
        "id_tabla",
        "TablaService",
        "actualizarTabla",
        "actualizacion_tabla"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;IAEMA,gB;;;;;;;;;qCAC4BC,c;;;;;;;8CAEbC,sBAAUC,MAAV,CAAiBF,cAAjB,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,sBAAUE,OAAV,E;;;;;;;;;;;;;;;;;;;qCAOaC,Y;;;;;;;;8CAEFH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAAlBE,cAAAA,S;;oBAEHA,SAAS,IAAE,I;;;;;gDACL,I;;;gDAEFA,SAAS,CAACC,U;;;;;;;;;;;;;;;;8CAOkBC,gB,EAAkBC,W,EAAaC,W;;;;;;;AAE5DC,cAAAA,Y,GAAeC,QAAQ,CAACH,WAAD,C;;8CACLR,sBAAUY,OAAV,CAAkB;AAACC,gBAAAA,KAAK,EAAC;AAACC,kBAAAA,MAAM,EAACP,gBAAR;AAAyBC,kBAAAA,WAAW,EAACE,YAArC;AAAkDD,kBAAAA,WAAW,EAACA;AAA9D;AAAP,eAAlB,C;;;AAAlBJ,cAAAA,S;;oBAEHA,SAAS,IAAE,I;;;;;gDACL,I;;;gDAEFA,SAAS,CAACC,U;;;;;;;;;;;;;;;;wCAOYH,Y,EAAaE,S;;;;;;;;8CAETL,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAA3BY,cAAAA,kB;;mBAEHA,kB;;;;;;8CACyBf,sBAAUgB,MAAV,CAAiBX,SAAjB,EAA2B;AAACQ,gBAAAA,KAAK,EAAC;AAACV,kBAAAA,YAAY,EAACA;AAAd;AAAP,eAA3B,C;;;AAApBc,cAAAA,W;;oBAEHA,WAAW,IAAE,C;;;;;gDACP,C;;;gDAGAZ,S;;;;;;;gDAIF,I;;;;;;;;;;;;;;;;;;;;sCAQoBF,Y;;;;;;;;8CAEMH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAA3BY,cAAAA,kB;;mBAEHA,kB;;;;;;8CACgCf,sBAAUkB,OAAV,CAAkB;AAACL,gBAAAA,KAAK,EAAC;AAACV,kBAAAA,YAAY,EAACA;AAAd;AAAP,eAAlB,C;;;AAA3BgB,cAAAA,kB;gDACCA,kB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;iCAQahB,Y;;;;;;;;8CAEEH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAAlBE,cAAAA,S;;mBAEHA,S;;;;;;8CACmBA,SAAS,CAACe,QAAV,E;;;AAAdC,cAAAA,K;gDACCA,KAAK,CAACf,U;;;gDAGN,I;;;;;;;;;;;;;;;;;;;;kCAQcH,Y;;;;;;;;8CAGCH,sBAAUI,QAAV,CAAmBD,YAAnB,C;;;AAAlBE,cAAAA,S;;8CACoBA,SAAS,CAACG,W;;;AAA9BA,cAAAA,W;;8CACoBH,SAAS,CAACI,W;;;AAA9BA,cAAAA,W;;8CAEea,mBAAOV,OAAP,CAAe;AAACW,gBAAAA,GAAG,EAAE,IAAN;AAAWV,gBAAAA,KAAK,EAAC;AAACW,kBAAAA,IAAI,EAAChB,WAAN;AAAkBiB,kBAAAA,IAAI,EAAChB;AAAvB;AAAjB,eAAf,C;;;AAAfiB,cAAAA,M;gDAECA,M;;;;;;;;;;;;;;;;oCAOkBvB,Y;;;;;;;;8CAEFwB,oBAAQzB,OAAR,CAAgB;AAACqB,gBAAAA,GAAG,EAAE,IAAN;AAAWV,gBAAAA,KAAK,EAAC;AAACV,kBAAAA,YAAY,EAACA;AAAd;AAAjB,eAAhB,C;;;AAAjByB,cAAAA,Q;gDACCA,Q;;;;;;;;;;;;;;;;wCAOsBzB,Y;;;;;;;;8CAEP0B,6CAAiCC,cAAjC,CAAgD3B,YAAhD,C;;;AAAhB4B,cAAAA,O;AACAV,cAAAA,K,GAAQ,E;;mBAEVU,O;;;;;sDAEYA,O;;;;;;;;AAALC,cAAAA,C;AACDC,cAAAA,gB,GAAmBF,OAAO,CAACC,CAAD,C,EAAM;;AAChCE,cAAAA,S,GAAaD,gBAAgB,CAACC,S;;8CACfC,0BAAcC,eAAd,CAA8BF,SAA9B,C;;;AAAfG,cAAAA,M;AAEFC,cAAAA,I,GAAO;AACT,6BAAaD,MAAM,CAACH,SADX;AAET,iCAAiBG,MAAM,CAACvB,MAFf;AAGT,0BAAU,CAHD;AAIT,oCAAoB,CAJX;AAKT,oCAAoB,CALX;AAMT,sCAAsB,CANb;AAOT,qCAAqB,CAPZ;AAQT,+BAAe,CARN;AAST,gCAAgB,CATP;AAUT,oCAAoB;AAVX,e;AAaXO,cAAAA,KAAK,CAACkB,IAAN,CAAWD,IAAX;;;;;AAGEE,cAAAA,U,GAAa,E;AACjBA,cAAAA,UAAU,CAACnB,KAAX,GAAmBA,KAAnB,C,CAEA;AAEA;;iDAEOmB,U;;;iDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBnB,K,EAAMoB,O;;;;;;;AAGzBC,cAAAA,e,GAAkBD,OAAO,CAACC,e;AAC1BC,cAAAA,mB,GAAsBF,OAAO,CAACE,mB;AAEhCC,cAAAA,W,GAAcH,OAAO,CAACG,W;AACtBC,cAAAA,e,GAAkBJ,OAAO,CAACI,e;AAE1BC,cAAAA,Y,GAAezB,KAAK,CAACA,K,EAEzB;;AAEI0B,cAAAA,iB,GAAoBD,YAAY,CAACE,MAAb,CAAoB,UAAUV,IAAV,EAAgB;AAC1D,uBAAOA,IAAI,CAACJ,SAAL,IAAkBQ,eAAzB;AACD,eAFuB,C;AAIpBO,cAAAA,qB,GAAwBH,YAAY,CAACE,MAAb,CAAoB,UAASV,IAAT,EAAc;AAC5D,uBAAOA,IAAI,CAACJ,SAAL,IAAkBS,mBAAzB;AACD,eAF2B,C;;AAI5B,kBAAGC,WAAW,GAACC,eAAf,EAA+B;AAC7B/C,gBAAAA,gBAAgB,CAACoD,gBAAjB,CAAkCH,iBAAlC,EAAoDE,qBAApD;AACD,eAFD,MAGI;AACF,oBAAGL,WAAW,GAACC,eAAf,EAA+B;AAC7B/C,kBAAAA,gBAAgB,CAACoD,gBAAjB,CAAkCD,qBAAlC,EAAwDF,iBAAxD;AACD,iBAFD,MAGI;AACFjD,kBAAAA,gBAAgB,CAACqD,cAAjB,CAAgCJ,iBAAhC,EAAkDE,qBAAlD;AACD;AACF;;AAEDnD,cAAAA,gBAAgB,CAACsD,oBAAjB,CAAsCL,iBAAtC,EAAwDH,WAAxD,EAAoEC,eAApE;AACA/C,cAAAA,gBAAgB,CAACsD,oBAAjB,CAAsCH,qBAAtC,EAA4DJ,eAA5D,EAA4ED,WAA5E,E,CAEV;;AACM;;;;AAON;AACU;AACA;;iDAEOvB,K;;;;;;;;;;;;;;;;qCAQmBgC,O,EAAQC,O;;;;;AACpC;AACAD,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWE,MAAX,IAAqB,CAArB;AACAF,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWG,gBAAX,IAA8B,CAA9B;AACAF,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWG,iBAAX,IAA+B,CAA/B;;;;;;;;;;;mCAG0BJ,O,EAAQC,O;;;;;AAClCD,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWE,MAAX,IAAqB,CAArB;AACAD,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWC,MAAX,IAAmB,CAAnB;AACAF,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWK,kBAAX,IAA+B,CAA/B;AACAJ,cAAAA,OAAO,CAAC,CAAD,CAAP,CAAWI,kBAAX,IAAgC,CAAhC;;;;;;;;;;;yCAGgCrB,M,EAAOsB,U,EAAWC,W;;;;;AAClDvB,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAUwB,gBAAV,IAA4B,CAA5B;AACAxB,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAUyB,WAAV,IAAyBH,UAAzB;AACAtB,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAU0B,YAAV,IAA0BH,WAA1B;AACAvB,cAAAA,MAAM,CAAC,CAAD,CAAN,CAAU2B,gBAAV,GAA8B3B,MAAM,CAAC,CAAD,CAAN,CAAUyB,WAAV,GAAwBzB,MAAM,CAAC,CAAD,CAAN,CAAU0B,YAAhE;;;;;;;;;;;4CAGmC5D,Y,EAAa8D,a;;;;;;;8CAEzBnE,gBAAgB,CAACoE,eAAjB,CAAiC/D,YAAjC,C;;;AAAjByB,cAAAA,Q;AACFuC,cAAAA,e,GAAkBF,a;AAElBJ,cAAAA,gB,GAAmBjC,QAAQ,CAACoB,MAAT,CAAgB,UAAUP,OAAV,EAAmB;AACxD,uBAAOA,OAAO,CAAC2B,MAAR,IAAkB,IAAzB;AACD,eAFsB,C,EAEnB;;sDAEUP,gB;;;;;;;;AAAL7B,cAAAA,C;AACHqC,cAAAA,a,GAAgBR,gBAAgB,CAAC7B,CAAD,C;AACpCsC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBvC,CAAxB;;8CACwBlC,gBAAgB,CAAC0E,eAAjB,CAAiCL,eAAjC,EAAiDE,aAAjD,C;;;AAAxBF,cAAAA,e;;;;;iDAGKA,e;;;;;;;;;;;mCAGmBhE,Y;;;;;;;;8CAGE,KAAKsE,mBAAL,CAAyBtE,YAAzB,C;;;AAAtB8D,cAAAA,a;;8CAEwB,KAAKS,uBAAL,CAA6BvE,YAA7B,EAA0C8D,aAA1C,C;;;AAAxBU,cAAAA,e;;8CAEkB7E,gBAAgB,CAAC8E,YAAjB,CAA8BzE,YAA9B,C;;;AAAlBE,cAAAA,S;AACAwE,cAAAA,Q,GAAWxE,SAAS,CAACwE,Q;;8CAEOC,yBAAaC,eAAb,CAA6BF,QAA7B,EAAsCF,eAAtC,C;;;AAA5BK,cAAAA,mB;iDAECA,mB;;;;;;;;;;;;;;;;;;;eAeElF,gB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Categoria from '../models/Categoria';\r\nimport Torneo from '../models/Torneo';\r\nimport Partido from '../models/Partido';\r\nimport Equipo from '../models/Equipo';\r\n\r\nimport Categoria_contiene_EquipoService from './Categoria_contiene_EquipoService';\r\nimport EquipoService from './EquipoService';\r\nimport PartidoService from './PartidoService';\r\nimport TablaService from './TablaService';\r\n\r\nclass CategoriaService { \r\n    static async agregarCategoria(nuevaCategoria) {\r\n      try {\r\n        return await Categoria.create(nuevaCategoria);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerCategorias(){\r\n      try {\r\n        return await Categoria.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n    \r\n    static async obtenerCategoria(id_categoria){\r\n      try {\r\n        const categoria = await Categoria.findByPk(id_categoria);\r\n        //CategoriaService.obtenerTorneo(categoria.id_categoria);\r\n        if(categoria==null){\r\n          return null;\r\n        }\r\n        return categoria.dataValues;\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerCategoriaDelTorneo(nombre_categoria, anio_torneo, tipo_torneo){\r\n      try {\r\n        const anio_torneo2 = parseInt(anio_torneo);\r\n        const categoria = await Categoria.findOne({where:{nombre:nombre_categoria,anio_torneo:anio_torneo2,tipo_torneo:tipo_torneo}});\r\n        //console.log(\"La categoria es:\",categoria);\r\n        if(categoria==null){\r\n          return null;\r\n        }\r\n        return categoria.dataValues;\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async actualizarCategoria(id_categoria,categoria){\r\n      try {\r\n        const categoriaExistente = await Categoria.findByPk(id_categoria);\r\n\r\n        if(categoriaExistente){\r\n          const actualizado = await Categoria.update(categoria,{where:{id_categoria:id_categoria}});\r\n\r\n          if(actualizado==0){ //si no hay columnas afectadas\r\n            return 0;\r\n          }\r\n          else{\r\n            return categoria; \r\n          }\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async eliminarCategoria(id_categoria){\r\n        try {\r\n          const categoriaExistente = await Categoria.findByPk(id_categoria);\r\n  \r\n          if(categoriaExistente){\r\n            const categoriaEliminada = await Categoria.destroy({where:{id_categoria:id_categoria}});\r\n            return categoriaEliminada; \r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerTabla(id_categoria){\r\n        try {\r\n          const categoria = await Categoria.findByPk(id_categoria);\r\n          \r\n          if(categoria){\r\n            const tabla = await categoria.getTabla();\r\n            return tabla.dataValues;\r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerTorneo(id_categoria){\r\n        try {\r\n          \r\n          const categoria = await Categoria.findByPk(id_categoria);\r\n          const anio_torneo = await categoria.anio_torneo;\r\n          const tipo_torneo = await categoria.tipo_torneo;\r\n          \r\n          const torneo = await Torneo.findOne({raw: true,where:{anio:anio_torneo,tipo:tipo_torneo}});\r\n\r\n          return torneo;\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n      \r\n      static async obtenerPartidos(id_categoria){\r\n        try {\r\n          const partidos = await Partido.findAll({raw: true,where:{id_categoria:id_categoria}});\r\n          return partidos;\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async generarTablaInicial(id_categoria){\r\n        try {\r\n          const equipos = await Categoria_contiene_EquipoService.obtenerEquipos(id_categoria);\r\n          const tabla = [];\r\n\r\n          if (equipos){\r\n\r\n            for (var i in equipos){\r\n              const equipo_categoria = equipos[i];  //tupla (id_equipo, id_categoria)\r\n              const id_equipo =  equipo_categoria.id_equipo;\r\n              const equipo = await EquipoService.obtenerEquipoID(id_equipo);\r\n              \r\n              var fila = {\r\n                \"id_equipo\": equipo.id_equipo,\r\n                \"nombre_equipo\": equipo.nombre,\r\n                \"puntos\": 0,  \r\n                \"partidos_jugados\": 0,\r\n                \"partidos_ganados\": 0,\r\n                \"partidos_empatados\": 0,\r\n                \"partidos_perdidos\": 0,\r\n                \"goles_favor\": 0,\r\n                \"goles_contra\": 0,\r\n                \"diferencia_goles\": 0\r\n              };\r\n\r\n              tabla.push(fila);\r\n            }\r\n\r\n            var tabla_json = {};\r\n            tabla_json.tabla = tabla;\r\n\r\n            //const categoria = await CategoriaService.obtenerCategoria(id_categoria);\r\n            \r\n            //const tablaActualizada = await TablaService.actualizarTabla(categoria.id_tabla,tabla); \r\n\r\n            return tabla_json;\r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n\r\n        } catch (error) {\r\n           throw error;\r\n        }\r\n      }\r\n\r\n      static async computarPartido(tabla,partido){\r\n        try {\r\n\r\n          const id_equipo_local = partido.id_equipo_local;\r\n          const id_equipo_visitante = partido.id_equipo_visitante;\r\n          \r\n          var goles_local = partido.goles_local;\r\n          var goles_visitante = partido.goles_visitante;\r\n\r\n          var tablaPuntaje = tabla.tabla;\r\n\r\n          //console.log(\"Tabla\", tablaPuntaje);\r\n          \r\n          var fila_equipo_local = tablaPuntaje.filter(function (fila) {\r\n            return fila.id_equipo == id_equipo_local;\r\n          });\r\n\r\n          var fila_equipo_visitante = tablaPuntaje.filter(function(fila){\r\n            return fila.id_equipo == id_equipo_visitante;\r\n          });\r\n\r\n          if(goles_local>goles_visitante){\r\n            CategoriaService.computarVictoria(fila_equipo_local,fila_equipo_visitante);\r\n          }\r\n          else{\r\n            if(goles_local<goles_visitante){\r\n              CategoriaService.computarVictoria(fila_equipo_visitante,fila_equipo_local);\r\n            }\r\n            else{\r\n              CategoriaService.computarEmpate(fila_equipo_local,fila_equipo_visitante);\r\n            }\r\n          }\r\n\r\n          CategoriaService.computarJugado_Goles(fila_equipo_local,goles_local,goles_visitante);\r\n          CategoriaService.computarJugado_Goles(fila_equipo_visitante,goles_visitante,goles_local);\r\n\r\n// ------------------------------------------------------------------------------------------------------------\r\n      /*   console.log(\"Tabla equipo local\", fila_equipo_local);\r\n\r\n          console.log(\"Tabla equipo visitante\", fila_equipo_visitante);\r\n\r\n\r\n          console.log(\"-------------------------------------------------\");\r\n          console.log(\"TABLA\",tabla);  */ \r\n//-------------------------------------------------------------------------------------------------------------\r\n          ///ACÁ TENGO QUE ACTUALIZAR LA TABLA! \r\n          //console.log(tabla);\r\n          \r\n          return tabla;\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n\r\n      static async computarVictoria(equipo1,equipo2){\r\n        //Victoria del equipo1 sobre el equipo2\r\n        equipo1[0].puntos += 3;\r\n        equipo1[0].partidos_ganados +=1;\r\n        equipo2[0].partidos_perdidos +=1;\r\n      }\r\n\r\n      static async computarEmpate(equipo1,equipo2){\r\n        equipo1[0].puntos += 1;\r\n        equipo2[0].puntos+=1;\r\n        equipo1[0].partidos_empatados+=1;\r\n        equipo2[0].partidos_empatados +=1;\r\n      }\r\n\r\n      static async computarJugado_Goles(equipo,golesFavor,golesContra){\r\n        equipo[0].partidos_jugados+=1;\r\n        equipo[0].goles_favor += golesFavor;\r\n        equipo[0].goles_contra += golesContra;\r\n        equipo[0].diferencia_goles = (equipo[0].goles_favor - equipo[0].goles_contra);\r\n      }\r\n\r\n      static async computarPartidosJugados(id_categoria,tabla_inicial){\r\n\r\n        const partidos = await CategoriaService.obtenerPartidos(id_categoria);\r\n        var tabla_computada = tabla_inicial;\r\n\r\n        var partidos_jugados = partidos.filter(function (partido) {\r\n          return partido.jugado == true; \r\n        }); //obtenemos todos los partidos jugados hasta el momento en la categoría\r\n\r\n        for (var i in partidos_jugados){\r\n          var partidoJugado = partidos_jugados[i];\r\n          console.log(\"Iteracion\",i);\r\n          tabla_computada = await CategoriaService.computarPartido(tabla_computada,partidoJugado);\r\n        }\r\n\r\n        return tabla_computada;\r\n      } \r\n\r\n      static async refrescarTabla(id_categoria){\r\n        \r\n        try {\r\n        const tabla_inicial = await this.generarTablaInicial(id_categoria);  // {\"tabla\": { ...., .... }}\r\n\r\n        const tabla_calculada = await this.computarPartidosJugados(id_categoria,tabla_inicial);\r\n\r\n        const categoria = await CategoriaService.obtenerTabla(id_categoria);\r\n        const id_tabla = categoria.id_tabla;\r\n\r\n        const actualizacion_tabla = await TablaService.actualizarTabla(id_tabla,tabla_calculada);\r\n        \r\n        return actualizacion_tabla;\r\n\r\n        } catch (error) {\r\n          \r\n          throw error;\r\n        }\r\n         \r\n        \r\n        \r\n      }\r\n      \r\n\r\n\r\n  } \r\n\r\n  export default CategoriaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1618860910612
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Partido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Partido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Partido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Partido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Partido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Categoria = _interopRequireDefault(require(\"./Categoria\"));\n\nvar _Equipo = _interopRequireDefault(require(\"./Equipo\"));\n\nvar _Persona = _interopRequireDefault(require(\"./Persona\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Partido = _database.sequelize.define('Partido', {\n  id_partido: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  nro_fecha: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  goles_local: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  goles_visitante: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  jugado: {\n    type: _sequelize[\"default\"].BOOLEAN\n  },\n  id_categoria: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  id_equipo_local: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  id_equipo_visitante: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_arbitro: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  dni_asistente: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  hora: {\n    type: _sequelize[\"default\"].TIME\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nPartido.belongsTo(_Categoria[\"default\"], {\n  foreignKey: 'id_categoria',\n  as: 'categoria'\n});\nPartido.belongsTo(_Equipo[\"default\"], {\n  foreignKey: 'id_equipo_local',\n  as: 'equipoLocal'\n});\nPartido.belongsTo(_Equipo[\"default\"], {\n  foreignKey: 'id_equipo_visitante',\n  as: 'equipoVisitante'\n});\nPartido.belongsTo(_Persona[\"default\"], {\n  foreignKey: 'dni_arbitro',\n  as: 'arbitro'\n});\nPartido.belongsTo(_Persona[\"default\"], {\n  foreignKey: 'dni_asistente',\n  as: 'asistente'\n});\nvar _default = Partido;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcnRpZG8uanMiXSwibmFtZXMiOlsiUGFydGlkbyIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkX3BhcnRpZG8iLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwibnJvX2ZlY2hhIiwiVEVYVCIsImdvbGVzX2xvY2FsIiwiZ29sZXNfdmlzaXRhbnRlIiwianVnYWRvIiwiQk9PTEVBTiIsImlkX2NhdGVnb3JpYSIsImlkX2VxdWlwb19sb2NhbCIsImlkX2VxdWlwb192aXNpdGFudGUiLCJkbmlfYXJiaXRybyIsImRuaV9hc2lzdGVudGUiLCJob3JhIiwiVElNRSIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiLCJiZWxvbmdzVG8iLCJDYXRlZ29yaWEiLCJmb3JlaWduS2V5IiwiYXMiLCJFcXVpcG8iLCJQZXJzb25hIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQ3hDQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEUjtBQUVSQyxJQUFBQSxVQUFVLEVBQUUsSUFGSjtBQUdSQyxJQUFBQSxhQUFhLEVBQUU7QUFIUCxHQUQ0QjtBQU14Q0MsRUFBQUEsU0FBUyxFQUFFO0FBQ1BMLElBQUFBLElBQUksRUFBRUMsc0JBQVVLO0FBRFQsR0FONkI7QUFTeENDLEVBQUFBLFdBQVcsRUFBRTtBQUNUUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURQLEdBVDJCO0FBWXhDTSxFQUFBQSxlQUFlLEVBQUU7QUFDYlIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFESCxHQVp1QjtBQWV4Q08sRUFBQUEsTUFBTSxFQUFFO0FBQ0pULElBQUFBLElBQUksRUFBRUMsc0JBQVVTO0FBRFosR0FmZ0M7QUFrQnhDQyxFQUFBQSxZQUFZLEVBQUU7QUFDVlgsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFETixHQWxCMEI7QUFxQnhDVSxFQUFBQSxlQUFlLEVBQUU7QUFDYlosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFESCxHQXJCdUI7QUF3QnhDVyxFQUFBQSxtQkFBbUIsRUFBRTtBQUNqQmIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEQyxHQXhCbUI7QUEyQnhDWSxFQUFBQSxXQUFXLEVBQUU7QUFDVGQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEUCxHQTNCMkI7QUE4QnhDYSxFQUFBQSxhQUFhLEVBQUU7QUFDWGYsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFETCxHQTlCeUI7QUFpQ3hDYyxFQUFBQSxJQUFJLEVBQUU7QUFDRmhCLElBQUFBLElBQUksRUFBRUMsc0JBQVVnQjtBQURkO0FBakNrQyxDQUE1QixFQW9DYjtBQUNDQyxFQUFBQSxVQUFVLEVBQUUsS0FEYjtBQUVDQyxFQUFBQSxlQUFlLEVBQUU7QUFGbEIsQ0FwQ2EsQ0FBaEI7O0FBeUNBdkIsT0FBTyxDQUFDd0IsU0FBUixDQUFrQkMscUJBQWxCLEVBQTRCO0FBQUNDLEVBQUFBLFVBQVUsRUFBRSxjQUFiO0FBQTRCQyxFQUFBQSxFQUFFLEVBQUM7QUFBL0IsQ0FBNUI7QUFDQTNCLE9BQU8sQ0FBQ3dCLFNBQVIsQ0FBa0JJLGtCQUFsQixFQUF5QjtBQUFDRixFQUFBQSxVQUFVLEVBQUUsaUJBQWI7QUFBK0JDLEVBQUFBLEVBQUUsRUFBQztBQUFsQyxDQUF6QjtBQUNBM0IsT0FBTyxDQUFDd0IsU0FBUixDQUFrQkksa0JBQWxCLEVBQXlCO0FBQUNGLEVBQUFBLFVBQVUsRUFBRSxxQkFBYjtBQUFtQ0MsRUFBQUEsRUFBRSxFQUFDO0FBQXRDLENBQXpCO0FBQ0EzQixPQUFPLENBQUN3QixTQUFSLENBQWtCSyxtQkFBbEIsRUFBMEI7QUFBQ0gsRUFBQUEsVUFBVSxFQUFFLGFBQWI7QUFBMkJDLEVBQUFBLEVBQUUsRUFBQztBQUE5QixDQUExQjtBQUNBM0IsT0FBTyxDQUFDd0IsU0FBUixDQUFrQkssbUJBQWxCLEVBQTBCO0FBQUNILEVBQUFBLFVBQVUsRUFBRSxlQUFiO0FBQTZCQyxFQUFBQSxFQUFFLEVBQUM7QUFBaEMsQ0FBMUI7ZUFFZTNCLE8iLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemUgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XHJcbmltcG9ydCBDYXRlZ29yaWEgZnJvbSAnLi9DYXRlZ29yaWEnO1xyXG5pbXBvcnQgRXF1aXBvIGZyb20gJy4vRXF1aXBvJztcclxuaW1wb3J0IFBlcnNvbmEgZnJvbSAnLi9QZXJzb25hJztcclxuXHJcbmNvbnN0IFBhcnRpZG8gPSBzZXF1ZWxpemUuZGVmaW5lKCdQYXJ0aWRvJywge1xyXG4gICAgaWRfcGFydGlkbzoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXHJcbiAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG5yb19mZWNoYToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgZ29sZXNfbG9jYWw6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGdvbGVzX3Zpc2l0YW50ZToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAganVnYWRvOiB7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLkJPT0xFQU5cclxuICAgIH0sXHJcbiAgICBpZF9jYXRlZ29yaWE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGlkX2VxdWlwb19sb2NhbDoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgaWRfZXF1aXBvX3Zpc2l0YW50ZToge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgZG5pX2FyYml0cm86IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGRuaV9hc2lzdGVudGU6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGhvcmE6IHtcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVElNRVxyXG4gICAgfVxyXG59LCB7XHJcbiAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcclxufSk7XHJcblxyXG5QYXJ0aWRvLmJlbG9uZ3NUbyhDYXRlZ29yaWEse2ZvcmVpZ25LZXk6ICdpZF9jYXRlZ29yaWEnLGFzOidjYXRlZ29yaWEnfSk7XHJcblBhcnRpZG8uYmVsb25nc1RvKEVxdWlwbyx7Zm9yZWlnbktleTogJ2lkX2VxdWlwb19sb2NhbCcsYXM6J2VxdWlwb0xvY2FsJ30pO1xyXG5QYXJ0aWRvLmJlbG9uZ3NUbyhFcXVpcG8se2ZvcmVpZ25LZXk6ICdpZF9lcXVpcG9fdmlzaXRhbnRlJyxhczonZXF1aXBvVmlzaXRhbnRlJ30pO1xyXG5QYXJ0aWRvLmJlbG9uZ3NUbyhQZXJzb25hLHtmb3JlaWduS2V5OiAnZG5pX2FyYml0cm8nLGFzOidhcmJpdHJvJ30pO1xyXG5QYXJ0aWRvLmJlbG9uZ3NUbyhQZXJzb25hLHtmb3JlaWduS2V5OiAnZG5pX2FzaXN0ZW50ZScsYXM6J2FzaXN0ZW50ZSd9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBhcnRpZG87Il19",
    "map": {
      "version": 3,
      "sources": [
        "Partido.js"
      ],
      "names": [
        "Partido",
        "sequelize",
        "define",
        "id_partido",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "nro_fecha",
        "TEXT",
        "goles_local",
        "goles_visitante",
        "jugado",
        "BOOLEAN",
        "id_categoria",
        "id_equipo_local",
        "id_equipo_visitante",
        "dni_arbitro",
        "dni_asistente",
        "hora",
        "TIME",
        "timestamps",
        "freezeTableName",
        "belongsTo",
        "Categoria",
        "foreignKey",
        "as",
        "Equipo",
        "Persona"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAEC,sBAAUC,OADR;AAERC,IAAAA,UAAU,EAAE,IAFJ;AAGRC,IAAAA,aAAa,EAAE;AAHP,GAD4B;AAMxCC,EAAAA,SAAS,EAAE;AACPL,IAAAA,IAAI,EAAEC,sBAAUK;AADT,GAN6B;AASxCC,EAAAA,WAAW,EAAE;AACTP,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GAT2B;AAYxCM,EAAAA,eAAe,EAAE;AACbR,IAAAA,IAAI,EAAEC,sBAAUC;AADH,GAZuB;AAexCO,EAAAA,MAAM,EAAE;AACJT,IAAAA,IAAI,EAAEC,sBAAUS;AADZ,GAfgC;AAkBxCC,EAAAA,YAAY,EAAE;AACVX,IAAAA,IAAI,EAAEC,sBAAUC;AADN,GAlB0B;AAqBxCU,EAAAA,eAAe,EAAE;AACbZ,IAAAA,IAAI,EAAEC,sBAAUC;AADH,GArBuB;AAwBxCW,EAAAA,mBAAmB,EAAE;AACjBb,IAAAA,IAAI,EAAEC,sBAAUC;AADC,GAxBmB;AA2BxCY,EAAAA,WAAW,EAAE;AACTd,IAAAA,IAAI,EAAEC,sBAAUC;AADP,GA3B2B;AA8BxCa,EAAAA,aAAa,EAAE;AACXf,IAAAA,IAAI,EAAEC,sBAAUC;AADL,GA9ByB;AAiCxCc,EAAAA,IAAI,EAAE;AACFhB,IAAAA,IAAI,EAAEC,sBAAUgB;AADd;AAjCkC,CAA5B,EAoCb;AACCC,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CApCa,CAAhB;;AAyCAvB,OAAO,CAACwB,SAAR,CAAkBC,qBAAlB,EAA4B;AAACC,EAAAA,UAAU,EAAE,cAAb;AAA4BC,EAAAA,EAAE,EAAC;AAA/B,CAA5B;AACA3B,OAAO,CAACwB,SAAR,CAAkBI,kBAAlB,EAAyB;AAACF,EAAAA,UAAU,EAAE,iBAAb;AAA+BC,EAAAA,EAAE,EAAC;AAAlC,CAAzB;AACA3B,OAAO,CAACwB,SAAR,CAAkBI,kBAAlB,EAAyB;AAACF,EAAAA,UAAU,EAAE,qBAAb;AAAmCC,EAAAA,EAAE,EAAC;AAAtC,CAAzB;AACA3B,OAAO,CAACwB,SAAR,CAAkBK,mBAAlB,EAA0B;AAACH,EAAAA,UAAU,EAAE,aAAb;AAA2BC,EAAAA,EAAE,EAAC;AAA9B,CAA1B;AACA3B,OAAO,CAACwB,SAAR,CAAkBK,mBAAlB,EAA0B;AAACH,EAAAA,UAAU,EAAE,eAAb;AAA6BC,EAAAA,EAAE,EAAC;AAAhC,CAA1B;eAEe3B,O",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize } from '../database/database';\r\nimport Categoria from './Categoria';\r\nimport Equipo from './Equipo';\r\nimport Persona from './Persona';\r\n\r\nconst Partido = sequelize.define('Partido', {\r\n    id_partido: {\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n    nro_fecha: {\r\n        type: Sequelize.TEXT\r\n    },\r\n    goles_local: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    goles_visitante: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    jugado: {\r\n        type: Sequelize.BOOLEAN\r\n    },\r\n    id_categoria: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    id_equipo_local: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    id_equipo_visitante: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_arbitro: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    dni_asistente: {\r\n        type: Sequelize.INTEGER\r\n    },\r\n    hora: {\r\n        type: Sequelize.TIME\r\n    }\r\n}, {\r\n    timestamps: false,\r\n    freezeTableName: true,\r\n});\r\n\r\nPartido.belongsTo(Categoria,{foreignKey: 'id_categoria',as:'categoria'});\r\nPartido.belongsTo(Equipo,{foreignKey: 'id_equipo_local',as:'equipoLocal'});\r\nPartido.belongsTo(Equipo,{foreignKey: 'id_equipo_visitante',as:'equipoVisitante'});\r\nPartido.belongsTo(Persona,{foreignKey: 'dni_arbitro',as:'arbitro'});\r\nPartido.belongsTo(Persona,{foreignKey: 'dni_asistente',as:'asistente'});\r\n\r\nexport default Partido;"
      ]
    },
    "sourceType": "script",
    "mtime": 1618859035497
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\Categoria_contiene_EquipoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\Categoria_contiene_EquipoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\Categoria_contiene_EquipoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\Categoria_contiene_EquipoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "Categoria_contiene_EquipoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Categoria_contiene_Equipo = _interopRequireDefault(require(\"../models/Categoria_contiene_Equipo\"));\n\nvar _CategoriaService = _interopRequireDefault(require(\"./CategoriaService\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Categoria_contiene_EquipoService =\n/*#__PURE__*/\nfunction () {\n  function Categoria_contiene_EquipoService() {\n    _classCallCheck(this, Categoria_contiene_EquipoService);\n  }\n\n  _createClass(Categoria_contiene_EquipoService, null, [{\n    key: \"agregarEquipos\",\n    value: function agregarEquipos(id_categoria, equipos) {\n      var tuplas, i, equipo, id_equipo, categ_equipo;\n      return regeneratorRuntime.async(function agregarEquipos$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tuplas = [];\n\n              for (i in equipos) {\n                equipo = equipos[i];\n                id_equipo = equipo.id_equipo;\n                categ_equipo = {\n                  \"id_equipo\": id_equipo,\n                  \"id_categoria\": id_categoria\n                }; //creamos las tuplas..\n\n                tuplas.push(categ_equipo);\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return regeneratorRuntime.awrap(_Categoria_contiene_Equipo[\"default\"].bulkCreate(tuplas, {\n                returning: true\n              }));\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              throw new Error(_context.t0.parent.detail);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 8]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos(id_categoria) {\n      var equipos;\n      return regeneratorRuntime.async(function obtenerEquipos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Categoria_contiene_Equipo[\"default\"].findAll({\n                raw: true,\n                where: {\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 3:\n              equipos = _context2.sent;\n              return _context2.abrupt(\"return\", equipos);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"eliminarEquipo\",\n    value: function eliminarEquipo(id_equipo, id_categoria) {\n      var equipoEnCategoria, equipoEliminado;\n      return regeneratorRuntime.async(function eliminarEquipo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Categoria_contiene_Equipo[\"default\"].findOne({\n                where: {\n                  id_equipo: id_equipo,\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 3:\n              equipoEnCategoria = _context3.sent;\n\n              if (!equipoEnCategoria) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 7;\n              return regeneratorRuntime.awrap(_Categoria_contiene_Equipo[\"default\"].destroy({\n                where: {\n                  id_equipo: id_equipo,\n                  id_categoria: id_categoria\n                }\n              }));\n\n            case 7:\n              equipoEliminado = _context3.sent;\n              return _context3.abrupt(\"return\", equipoEliminado);\n\n            case 11:\n              return _context3.abrupt(\"return\", null);\n\n            case 12:\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return Categoria_contiene_EquipoService;\n}();\n\nvar _default = Categoria_contiene_EquipoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpYV9jb250aWVuZV9FcXVpcG9TZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIkNhdGVnb3JpYV9jb250aWVuZV9FcXVpcG9TZXJ2aWNlIiwiaWRfY2F0ZWdvcmlhIiwiZXF1aXBvcyIsInR1cGxhcyIsImkiLCJlcXVpcG8iLCJpZF9lcXVpcG8iLCJjYXRlZ19lcXVpcG8iLCJwdXNoIiwiQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyIsImJ1bGtDcmVhdGUiLCJyZXR1cm5pbmciLCJFcnJvciIsInBhcmVudCIsImRldGFpbCIsImZpbmRBbGwiLCJyYXciLCJ3aGVyZSIsImZpbmRPbmUiLCJlcXVpcG9FbkNhdGVnb3JpYSIsImRlc3Ryb3kiLCJlcXVpcG9FbGltaW5hZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7OztJQUdNQSxnQzs7Ozs7Ozs7O21DQUN3QkMsWSxFQUFhQyxPOzs7Ozs7QUFDbkNDLGNBQUFBLE0sR0FBUyxFOztBQUViLG1CQUFTQyxDQUFULElBQWNGLE9BQWQsRUFBc0I7QUFDZEcsZ0JBQUFBLE1BRGMsR0FDTEgsT0FBTyxDQUFDRSxDQUFELENBREY7QUFFZEUsZ0JBQUFBLFNBRmMsR0FFRkQsTUFBTSxDQUFDQyxTQUZMO0FBR2RDLGdCQUFBQSxZQUhjLEdBR0M7QUFBQywrQkFBWUQsU0FBYjtBQUF1QixrQ0FBZUw7QUFBdEMsaUJBSEQsRUFHc0Q7O0FBQzFFRSxnQkFBQUEsTUFBTSxDQUFDSyxJQUFQLENBQVlELFlBQVo7QUFDRDs7Ozs4Q0FHY0Usc0NBQTBCQyxVQUExQixDQUFxQ1AsTUFBckMsRUFBNEM7QUFBQ1EsZ0JBQUFBLFNBQVMsRUFBQztBQUFYLGVBQTVDLEM7Ozs7Ozs7O29CQUdQLElBQUlDLEtBQUosQ0FBVyxZQUFNQyxNQUFOLENBQWFDLE1BQXhCLEM7Ozs7Ozs7Ozs7O21DQUlrQmIsWTs7Ozs7Ozs7OENBRUZRLHNDQUEwQk0sT0FBMUIsQ0FBa0M7QUFBQ0MsZ0JBQUFBLEdBQUcsRUFBQyxJQUFMO0FBQVVDLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ2hCLGtCQUFBQSxZQUFZLEVBQUNBO0FBQWQ7QUFBaEIsZUFBbEMsQzs7O0FBQWhCQyxjQUFBQSxPO2dEQUNDQSxPOzs7Ozs7Ozs7Ozs7Ozs7O21DQU9pQkksUyxFQUFVTCxZOzs7Ozs7Ozs4Q0FFQVEsc0NBQTBCUyxPQUExQixDQUFrQztBQUFDRCxnQkFBQUEsS0FBSyxFQUFDO0FBQUNYLGtCQUFBQSxTQUFTLEVBQUNBLFNBQVg7QUFBcUJMLGtCQUFBQSxZQUFZLEVBQUNBO0FBQWxDO0FBQVAsZUFBbEMsQzs7O0FBQTFCa0IsY0FBQUEsaUI7O21CQUVIQSxpQjs7Ozs7OzhDQUM2QlYsc0NBQTBCVyxPQUExQixDQUFrQztBQUFDSCxnQkFBQUEsS0FBSyxFQUFDO0FBQUNYLGtCQUFBQSxTQUFTLEVBQUNBLFNBQVg7QUFBcUJMLGtCQUFBQSxZQUFZLEVBQUNBO0FBQWxDO0FBQVAsZUFBbEMsQzs7O0FBQXhCb0IsY0FBQUEsZTtnREFDQ0EsZTs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBU0FyQixnQyIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyBmcm9tICcuLi9tb2RlbHMvQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyc7XHJcbmltcG9ydCBDYXRlZ29yaWFTZXJ2aWNlIGZyb20gJy4vQ2F0ZWdvcmlhU2VydmljZSc7XHJcblxyXG5cclxuY2xhc3MgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwb1NlcnZpY2Uge1xyXG4gIHN0YXRpYyBhc3luYyBhZ3JlZ2FyRXF1aXBvcyhpZF9jYXRlZ29yaWEsZXF1aXBvcykgeyAgICBcclxuICAgIHZhciB0dXBsYXMgPSBbXTtcclxuICAgIFxyXG4gICAgZm9yICh2YXIgaSBpbiBlcXVpcG9zKXtcclxuICAgICAgY29uc3QgZXF1aXBvID0gZXF1aXBvc1tpXTtcclxuICAgICAgY29uc3QgaWRfZXF1aXBvID0gZXF1aXBvLmlkX2VxdWlwbztcclxuICAgICAgY29uc3QgY2F0ZWdfZXF1aXBvID0ge1wiaWRfZXF1aXBvXCI6aWRfZXF1aXBvLFwiaWRfY2F0ZWdvcmlhXCI6aWRfY2F0ZWdvcmlhfTsgLy9jcmVhbW9zIGxhcyB0dXBsYXMuLlxyXG4gICAgICB0dXBsYXMucHVzaChjYXRlZ19lcXVpcG8pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB0cnl7XHJcbiAgICAgIHJldHVybiBhd2FpdCBDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvLmJ1bGtDcmVhdGUodHVwbGFzLHtyZXR1cm5pbmc6dHJ1ZX0pOyAvLy4uLiBwYXJhIGluc2VydGFybGFzIGNvbiBtw6l0b2RvIGJ1bGtDcmVhdGUgKHRvZGFzIG8gbmluZ3VuYSlcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IgKGVycm9yLnBhcmVudC5kZXRhaWwpOyAvL2RldGVjdGEgZWwgb2JqZXRvIHF1ZSBwcm92b2PDsyBlbCBlcnJvciwgbm8gc2UgaW5zZXJ0YSBuaW5ndW5vIGRlIGxvcyBvYmpldG9zLlxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBzdGF0aWMgYXN5bmMgb2J0ZW5lckVxdWlwb3MoaWRfY2F0ZWdvcmlhKXtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGVxdWlwb3MgPSBhd2FpdCBDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvLmZpbmRBbGwoe3Jhdzp0cnVlLHdoZXJlOntpZF9jYXRlZ29yaWE6aWRfY2F0ZWdvcmlhfX0pO1xyXG4gICAgICByZXR1cm4gZXF1aXBvcztcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgc3RhdGljIGFzeW5jIGVsaW1pbmFyRXF1aXBvKGlkX2VxdWlwbyxpZF9jYXRlZ29yaWEpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGVxdWlwb0VuQ2F0ZWdvcmlhID0gYXdhaXQgQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwby5maW5kT25lKHt3aGVyZTp7aWRfZXF1aXBvOmlkX2VxdWlwbyxpZF9jYXRlZ29yaWE6aWRfY2F0ZWdvcmlhfX0pO1xyXG5cclxuICAgICAgICBpZihlcXVpcG9FbkNhdGVnb3JpYSl7XHJcbiAgICAgICAgICBjb25zdCBlcXVpcG9FbGltaW5hZG8gPSBhd2FpdCBDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvLmRlc3Ryb3koe3doZXJlOntpZF9lcXVpcG86aWRfZXF1aXBvLGlkX2NhdGVnb3JpYTppZF9jYXRlZ29yaWF9fSk7XHJcbiAgICAgICAgICByZXR1cm4gZXF1aXBvRWxpbWluYWRvOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG59IFxyXG4gIFxyXG4gIGV4cG9ydCBkZWZhdWx0IENhdGVnb3JpYV9jb250aWVuZV9FcXVpcG9TZXJ2aWNlO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Categoria_contiene_EquipoService.js"
      ],
      "names": [
        "Categoria_contiene_EquipoService",
        "id_categoria",
        "equipos",
        "tuplas",
        "i",
        "equipo",
        "id_equipo",
        "categ_equipo",
        "push",
        "Categoria_contiene_Equipo",
        "bulkCreate",
        "returning",
        "Error",
        "parent",
        "detail",
        "findAll",
        "raw",
        "where",
        "findOne",
        "equipoEnCategoria",
        "destroy",
        "equipoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;IAGMA,gC;;;;;;;;;mCACwBC,Y,EAAaC,O;;;;;;AACnCC,cAAAA,M,GAAS,E;;AAEb,mBAASC,CAAT,IAAcF,OAAd,EAAsB;AACdG,gBAAAA,MADc,GACLH,OAAO,CAACE,CAAD,CADF;AAEdE,gBAAAA,SAFc,GAEFD,MAAM,CAACC,SAFL;AAGdC,gBAAAA,YAHc,GAGC;AAAC,+BAAYD,SAAb;AAAuB,kCAAeL;AAAtC,iBAHD,EAGsD;;AAC1EE,gBAAAA,MAAM,CAACK,IAAP,CAAYD,YAAZ;AACD;;;;8CAGcE,sCAA0BC,UAA1B,CAAqCP,MAArC,EAA4C;AAACQ,gBAAAA,SAAS,EAAC;AAAX,eAA5C,C;;;;;;;;oBAGP,IAAIC,KAAJ,CAAW,YAAMC,MAAN,CAAaC,MAAxB,C;;;;;;;;;;;mCAIkBb,Y;;;;;;;;8CAEFQ,sCAA0BM,OAA1B,CAAkC;AAACC,gBAAAA,GAAG,EAAC,IAAL;AAAUC,gBAAAA,KAAK,EAAC;AAAChB,kBAAAA,YAAY,EAACA;AAAd;AAAhB,eAAlC,C;;;AAAhBC,cAAAA,O;gDACCA,O;;;;;;;;;;;;;;;;mCAOiBI,S,EAAUL,Y;;;;;;;;8CAEAQ,sCAA0BS,OAA1B,CAAkC;AAACD,gBAAAA,KAAK,EAAC;AAACX,kBAAAA,SAAS,EAACA,SAAX;AAAqBL,kBAAAA,YAAY,EAACA;AAAlC;AAAP,eAAlC,C;;;AAA1BkB,cAAAA,iB;;mBAEHA,iB;;;;;;8CAC6BV,sCAA0BW,OAA1B,CAAkC;AAACH,gBAAAA,KAAK,EAAC;AAACX,kBAAAA,SAAS,EAACA,SAAX;AAAqBL,kBAAAA,YAAY,EAACA;AAAlC;AAAP,eAAlC,C;;;AAAxBoB,cAAAA,e;gDACCA,e;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASArB,gC",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Categoria_contiene_Equipo from '../models/Categoria_contiene_Equipo';\r\nimport CategoriaService from './CategoriaService';\r\n\r\n\r\nclass Categoria_contiene_EquipoService {\r\n  static async agregarEquipos(id_categoria,equipos) {    \r\n    var tuplas = [];\r\n    \r\n    for (var i in equipos){\r\n      const equipo = equipos[i];\r\n      const id_equipo = equipo.id_equipo;\r\n      const categ_equipo = {\"id_equipo\":id_equipo,\"id_categoria\":id_categoria}; //creamos las tuplas..\r\n      tuplas.push(categ_equipo);\r\n    }\r\n    \r\n    try{\r\n      return await Categoria_contiene_Equipo.bulkCreate(tuplas,{returning:true}); //... para insertarlas con método bulkCreate (todas o ninguna)\r\n    }\r\n    catch (error) {\r\n      throw new Error (error.parent.detail); //detecta el objeto que provocó el error, no se inserta ninguno de los objetos.\r\n    }\r\n  }\r\n  \r\n  static async obtenerEquipos(id_categoria){\r\n    try {\r\n      const equipos = await Categoria_contiene_Equipo.findAll({raw:true,where:{id_categoria:id_categoria}});\r\n      return equipos;\r\n    }\r\n    catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  static async eliminarEquipo(id_equipo,id_categoria){\r\n      try {\r\n        const equipoEnCategoria = await Categoria_contiene_Equipo.findOne({where:{id_equipo:id_equipo,id_categoria:id_categoria}});\r\n\r\n        if(equipoEnCategoria){\r\n          const equipoEliminado = await Categoria_contiene_Equipo.destroy({where:{id_equipo:id_equipo,id_categoria:id_categoria}});\r\n          return equipoEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n} \r\n  \r\n  export default Categoria_contiene_EquipoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616819068520
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\models\\\\Categoria_contiene_Equipo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Categoria_contiene_Equipo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Categoria_contiene_Equipo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\models\\Categoria_contiene_Equipo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
        "sourceFileName": "Categoria_contiene_Equipo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// clase Sequelize\nvar Categoria_contiene_Equipo = _database.sequelize.define('Categoria_contiene_Equipo', {\n  id_equipo: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  id_categoria: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  }\n}, {\n  timestamps: false,\n  freezeTableName: true\n});\n\nvar _default = Categoria_contiene_Equipo;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpYV9jb250aWVuZV9FcXVpcG8uanMiXSwibmFtZXMiOlsiQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbyIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkX2VxdWlwbyIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImlkX2NhdGVnb3JpYSIsInRpbWVzdGFtcHMiLCJmcmVlemVUYWJsZU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQURtQztBQUduQyxJQUFNQSx5QkFBeUIsR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsMkJBQWpCLEVBQThDO0FBQ3hFQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEVDtBQUVQQyxJQUFBQSxVQUFVLEVBQUU7QUFGTCxHQUQ2RDtBQUt4RUMsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZKLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRE47QUFFVkMsSUFBQUEsVUFBVSxFQUFDO0FBRkQ7QUFMMEQsQ0FBOUMsRUFTM0I7QUFDQ0UsRUFBQUEsVUFBVSxFQUFFLEtBRGI7QUFFQ0MsRUFBQUEsZUFBZSxFQUFFO0FBRmxCLENBVDJCLENBQWxDOztlQWVlVix5QiIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnOyAvLyBjbGFzZSBTZXF1ZWxpemVcclxuaW1wb3J0IHsgc2VxdWVsaXplIH0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnIC8vY29uZXhpb24gYSBsYSBiYXNlXHJcblxyXG5jb25zdCBDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvID0gc2VxdWVsaXplLmRlZmluZSgnQ2F0ZWdvcmlhX2NvbnRpZW5lX0VxdWlwbycsIHtcclxuICAgICAgICBpZF9lcXVpcG86IHtcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgICAgICB9LCBcclxuICAgICAgICBpZF9jYXRlZ29yaWE6IHtcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgICAgIHByaW1hcnlLZXk6dHJ1ZVxyXG4gICAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAgICB0aW1lc3RhbXBzOiBmYWxzZSxcclxuICAgICAgICBmcmVlemVUYWJsZU5hbWU6IHRydWUgXHJcbiAgICB9XHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXRlZ29yaWFfY29udGllbmVfRXF1aXBvOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Categoria_contiene_Equipo.js"
      ],
      "names": [
        "Categoria_contiene_Equipo",
        "sequelize",
        "define",
        "id_equipo",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "id_categoria",
        "timestamps",
        "freezeTableName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AADmC;AAGnC,IAAMA,yBAAyB,GAAGC,oBAAUC,MAAV,CAAiB,2BAAjB,EAA8C;AACxEC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAEC,sBAAUC,OADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GAD6D;AAKxEC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,IAAI,EAAEC,sBAAUC,OADN;AAEVC,IAAAA,UAAU,EAAC;AAFD;AAL0D,CAA9C,EAS3B;AACCE,EAAAA,UAAU,EAAE,KADb;AAECC,EAAAA,eAAe,EAAE;AAFlB,CAT2B,CAAlC;;eAeeV,yB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize'; // clase Sequelize\r\nimport { sequelize } from '../database/database' //conexion a la base\r\n\r\nconst Categoria_contiene_Equipo = sequelize.define('Categoria_contiene_Equipo', {\r\n        id_equipo: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey: true\r\n        }, \r\n        id_categoria: {\r\n            type: Sequelize.INTEGER,\r\n            primaryKey:true\r\n        }\r\n    }, {\r\n        timestamps: false,\r\n        freezeTableName: true \r\n    }\r\n);\r\n\r\nexport default Categoria_contiene_Equipo;"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142504
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\EquipoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\EquipoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\EquipoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\EquipoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "EquipoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Equipo = _interopRequireDefault(require(\"../models/Equipo\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar EquipoService =\n/*#__PURE__*/\nfunction () {\n  function EquipoService() {\n    _classCallCheck(this, EquipoService);\n  }\n\n  _createClass(EquipoService, null, [{\n    key: \"agregarEquipo\",\n    value: function agregarEquipo(nuevoEquipo) {\n      return regeneratorRuntime.async(function agregarEquipo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].create(nuevoEquipo));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"agregarEquipos\",\n    value: function agregarEquipos(nuevosEquipos) {\n      return regeneratorRuntime.async(function agregarEquipos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].bulkCreate(nuevosEquipos, {\n                returning: true\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw new Error(_context2.t0.parent.detail);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos() {\n      return regeneratorRuntime.async(function obtenerEquipos$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findAll());\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerEquipo\",\n    value: function obtenerEquipo(nombre) {\n      var equipo;\n      return regeneratorRuntime.async(function obtenerEquipo$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findOne({\n                where: {\n                  nombre: nombre\n                }\n              }));\n\n            case 3:\n              equipo = _context4.sent;\n              return _context4.abrupt(\"return\", equipo);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerEquipoID\",\n    value: function obtenerEquipoID(id) {\n      var equipo;\n      return regeneratorRuntime.async(function obtenerEquipoID$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findByPk(id));\n\n            case 3:\n              equipo = _context5.sent;\n              return _context5.abrupt(\"return\", equipo);\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarEquipo\",\n    value: function actualizarEquipo(id_equipo, equipo) {\n      var equipoExistente;\n      return regeneratorRuntime.async(function actualizarEquipo$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findByPk(id_equipo));\n\n            case 3:\n              equipoExistente = _context6.sent;\n\n              if (!equipoExistente) {\n                _context6.next = 10;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].update(equipo, {\n                where: {\n                  id_equipo: id_equipo\n                }\n              }));\n\n            case 7:\n              return _context6.abrupt(\"return\", equipo);\n\n            case 10:\n              return _context6.abrupt(\"return\", null);\n\n            case 11:\n              _context6.next = 16;\n              break;\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarEquipo\",\n    value: function eliminarEquipo(id_equipo) {\n      var equipoExistente, equipoEliminado;\n      return regeneratorRuntime.async(function eliminarEquipo$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].findByPk(id_equipo));\n\n            case 3:\n              equipoExistente = _context7.sent;\n\n              if (!equipoExistente) {\n                _context7.next = 11;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(_Equipo[\"default\"].destroy({\n                where: {\n                  id_equipo: id_equipo\n                }\n              }));\n\n            case 7:\n              equipoEliminado = _context7.sent;\n              return _context7.abrupt(\"return\", equipoEliminado);\n\n            case 11:\n              return _context7.abrupt(\"return\", null);\n\n            case 12:\n              _context7.next = 17;\n              break;\n\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return EquipoService;\n}();\n\nvar _default = EquipoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVxdWlwb1NlcnZpY2UuanMiXSwibmFtZXMiOlsiRXF1aXBvU2VydmljZSIsIm51ZXZvRXF1aXBvIiwiRXF1aXBvIiwiY3JlYXRlIiwibnVldm9zRXF1aXBvcyIsImJ1bGtDcmVhdGUiLCJyZXR1cm5pbmciLCJFcnJvciIsInBhcmVudCIsImRldGFpbCIsImZpbmRBbGwiLCJub21icmUiLCJmaW5kT25lIiwid2hlcmUiLCJlcXVpcG8iLCJpZCIsImZpbmRCeVBrIiwiaWRfZXF1aXBvIiwiZXF1aXBvRXhpc3RlbnRlIiwidXBkYXRlIiwiZGVzdHJveSIsImVxdWlwb0VsaW1pbmFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRU1BLGE7Ozs7Ozs7OztrQ0FDeUJDLFc7Ozs7Ozs7OENBRVZDLG1CQUFPQyxNQUFQLENBQWNGLFdBQWQsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQ0FNV0csYTs7Ozs7Ozs4Q0FFVkYsbUJBQU9HLFVBQVAsQ0FBa0JELGFBQWxCLEVBQWdDO0FBQUNFLGdCQUFBQSxTQUFTLEVBQUM7QUFBWCxlQUFoQyxDOzs7Ozs7OztvQkFFUixJQUFJQyxLQUFKLENBQVcsYUFBTUMsTUFBTixDQUFhQyxNQUF4QixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OENBTU9QLG1CQUFPUSxPQUFQLEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBT1VDLE07Ozs7Ozs7OzhDQUVGVCxtQkFBT1UsT0FBUCxDQUFlO0FBQUNDLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0Ysa0JBQUFBLE1BQU0sRUFBQ0E7QUFBUjtBQUFQLGVBQWYsQzs7O0FBQWZHLGNBQUFBLE07Z0RBQ0NBLE07Ozs7Ozs7Ozs7Ozs7Ozs7b0NBT29CQyxFOzs7Ozs7Ozs4Q0FFSmIsbUJBQU9jLFFBQVAsQ0FBZ0JELEVBQWhCLEM7OztBQUFmRCxjQUFBQSxNO2dEQUNDQSxNOzs7Ozs7Ozs7Ozs7Ozs7O3FDQU9pQkcsUyxFQUFVSCxNOzs7Ozs7Ozs4Q0FFTlosbUJBQU9jLFFBQVAsQ0FBZ0JDLFNBQWhCLEM7OztBQUF4QkMsY0FBQUEsZTs7bUJBRUhBLGU7Ozs7Ozs4Q0FDS2hCLG1CQUFPaUIsTUFBUCxDQUFjTCxNQUFkLEVBQXFCO0FBQUNELGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0ksa0JBQUFBLFNBQVMsRUFBQ0E7QUFBWDtBQUFQLGVBQXJCLEM7OztnREFDQ0gsTTs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQVFlRyxTOzs7Ozs7Ozs4Q0FFTWYsbUJBQU9jLFFBQVAsQ0FBZ0JDLFNBQWhCLEM7OztBQUF4QkMsY0FBQUEsZTs7bUJBRUhBLGU7Ozs7Ozs4Q0FDNkJoQixtQkFBT2tCLE9BQVAsQ0FBZTtBQUFDUCxnQkFBQUEsS0FBSyxFQUFDO0FBQUNJLGtCQUFBQSxTQUFTLEVBQUNBO0FBQVg7QUFBUCxlQUFmLEM7OztBQUF4QkksY0FBQUEsZTtnREFDQ0EsZTs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBVUFyQixhIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFcXVpcG8gZnJvbSAnLi4vbW9kZWxzL0VxdWlwbyc7XHJcblxyXG5jbGFzcyBFcXVpcG9TZXJ2aWNlIHsgXHJcbiAgICBzdGF0aWMgYXN5bmMgYWdyZWdhckVxdWlwbyhudWV2b0VxdWlwbykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBFcXVpcG8uY3JlYXRlKG51ZXZvRXF1aXBvKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyRXF1aXBvcyhudWV2b3NFcXVpcG9zKXtcclxuICAgICAgdHJ5e1xyXG4gICAgICAgIHJldHVybiAgYXdhaXQgRXF1aXBvLmJ1bGtDcmVhdGUobnVldm9zRXF1aXBvcyx7cmV0dXJuaW5nOnRydWV9KTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHsgXHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yIChlcnJvci5wYXJlbnQuZGV0YWlsKTsgLy9lbCBvYmpldG8gcXVlIHByb3ZvY8OzIGVsIGVycm9yLiBObyBzZSBpbnNlcnRhIG5pbmfDum4gb2JqZXRvLlxyXG4gICAgICB9XHJcbiAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyRXF1aXBvcygpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBFcXVpcG8uZmluZEFsbCgpO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjsgICBcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyRXF1aXBvKG5vbWJyZSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZXF1aXBvID0gYXdhaXQgRXF1aXBvLmZpbmRPbmUoe3doZXJlOntub21icmU6bm9tYnJlfX0pO1xyXG4gICAgICAgIHJldHVybiBlcXVpcG87XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyRXF1aXBvSUQoaWQpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCBlcXVpcG8gPSBhd2FpdCBFcXVpcG8uZmluZEJ5UGsoaWQpO1xyXG4gICAgICAgICAgcmV0dXJuIGVxdWlwbztcclxuICAgICAgICB9XHJcbiAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphckVxdWlwbyhpZF9lcXVpcG8sZXF1aXBvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBlcXVpcG9FeGlzdGVudGUgPSBhd2FpdCBFcXVpcG8uZmluZEJ5UGsoaWRfZXF1aXBvKTtcclxuXHJcbiAgICAgICAgaWYoZXF1aXBvRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGF3YWl0IEVxdWlwby51cGRhdGUoZXF1aXBvLHt3aGVyZTp7aWRfZXF1aXBvOmlkX2VxdWlwb319KTtcclxuICAgICAgICAgIHJldHVybiBlcXVpcG87IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgc3RhdGljIGFzeW5jIGVsaW1pbmFyRXF1aXBvKGlkX2VxdWlwbyl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZXF1aXBvRXhpc3RlbnRlID0gYXdhaXQgRXF1aXBvLmZpbmRCeVBrKGlkX2VxdWlwbyk7XHJcblxyXG4gICAgICAgIGlmKGVxdWlwb0V4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBjb25zdCBlcXVpcG9FbGltaW5hZG8gPSBhd2FpdCBFcXVpcG8uZGVzdHJveSh7d2hlcmU6e2lkX2VxdWlwbzppZF9lcXVpcG99fSk7XHJcbiAgICAgICAgICByZXR1cm4gZXF1aXBvRWxpbWluYWRvOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxufSBcclxuXHJcbiAgZXhwb3J0IGRlZmF1bHQgRXF1aXBvU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "EquipoService.js"
      ],
      "names": [
        "EquipoService",
        "nuevoEquipo",
        "Equipo",
        "create",
        "nuevosEquipos",
        "bulkCreate",
        "returning",
        "Error",
        "parent",
        "detail",
        "findAll",
        "nombre",
        "findOne",
        "where",
        "equipo",
        "id",
        "findByPk",
        "id_equipo",
        "equipoExistente",
        "update",
        "destroy",
        "equipoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,a;;;;;;;;;kCACyBC,W;;;;;;;8CAEVC,mBAAOC,MAAP,CAAcF,WAAd,C;;;;;;;;;;;;;;;;;;;mCAMWG,a;;;;;;;8CAEVF,mBAAOG,UAAP,CAAkBD,aAAlB,EAAgC;AAACE,gBAAAA,SAAS,EAAC;AAAX,eAAhC,C;;;;;;;;oBAER,IAAIC,KAAJ,CAAW,aAAMC,MAAN,CAAaC,MAAxB,C;;;;;;;;;;;;;;;;;;8CAMOP,mBAAOQ,OAAP,E;;;;;;;;;;;;;;;;;;;kCAOUC,M;;;;;;;;8CAEFT,mBAAOU,OAAP,CAAe;AAACC,gBAAAA,KAAK,EAAC;AAACF,kBAAAA,MAAM,EAACA;AAAR;AAAP,eAAf,C;;;AAAfG,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;oCAOoBC,E;;;;;;;;8CAEJb,mBAAOc,QAAP,CAAgBD,EAAhB,C;;;AAAfD,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;qCAOiBG,S,EAAUH,M;;;;;;;;8CAENZ,mBAAOc,QAAP,CAAgBC,SAAhB,C;;;AAAxBC,cAAAA,e;;mBAEHA,e;;;;;;8CACKhB,mBAAOiB,MAAP,CAAcL,MAAd,EAAqB;AAACD,gBAAAA,KAAK,EAAC;AAACI,kBAAAA,SAAS,EAACA;AAAX;AAAP,eAArB,C;;;gDACCH,M;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;mCAQeG,S;;;;;;;;8CAEMf,mBAAOc,QAAP,CAAgBC,SAAhB,C;;;AAAxBC,cAAAA,e;;mBAEHA,e;;;;;;8CAC6BhB,mBAAOkB,OAAP,CAAe;AAACP,gBAAAA,KAAK,EAAC;AAACI,kBAAAA,SAAS,EAACA;AAAX;AAAP,eAAf,C;;;AAAxBI,cAAAA,e;gDACCA,e;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eAUArB,a",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Equipo from '../models/Equipo';\r\n\r\nclass EquipoService { \r\n    static async agregarEquipo(nuevoEquipo) {\r\n      try {\r\n        return await Equipo.create(nuevoEquipo);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async agregarEquipos(nuevosEquipos){\r\n      try{\r\n        return  await Equipo.bulkCreate(nuevosEquipos,{returning:true});\r\n      } catch (error) { \r\n        throw new Error (error.parent.detail); //el objeto que provocó el error. No se inserta ningún objeto.\r\n      }\r\n  }\r\n\r\n    static async obtenerEquipos(){\r\n      try {\r\n        return await Equipo.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async obtenerEquipo(nombre){\r\n      try {\r\n        const equipo = await Equipo.findOne({where:{nombre:nombre}});\r\n        return equipo;\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerEquipoID(id){\r\n        try {\r\n          const equipo = await Equipo.findByPk(id);\r\n          return equipo;\r\n        }\r\n         catch (error) {\r\n           throw error;\r\n          }\r\n        }\r\n\r\n    static async actualizarEquipo(id_equipo,equipo){\r\n      try {\r\n        const equipoExistente = await Equipo.findByPk(id_equipo);\r\n\r\n        if(equipoExistente){\r\n          await Equipo.update(equipo,{where:{id_equipo:id_equipo}});\r\n          return equipo; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarEquipo(id_equipo){\r\n      try {\r\n        const equipoExistente = await Equipo.findByPk(id_equipo);\r\n\r\n        if(equipoExistente){\r\n          const equipoEliminado = await Equipo.destroy({where:{id_equipo:id_equipo}});\r\n          return equipoEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n} \r\n\r\n  export default EquipoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619027137827
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\PartidoService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\PartidoService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\PartidoService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\PartidoService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "PartidoService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Partido = _interopRequireDefault(require(\"../models/Partido\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PartidoService =\n/*#__PURE__*/\nfunction () {\n  function PartidoService() {\n    _classCallCheck(this, PartidoService);\n  }\n\n  _createClass(PartidoService, null, [{\n    key: \"agregarPartido\",\n    value: function agregarPartido(nuevoPartido) {\n      return regeneratorRuntime.async(function agregarPartido$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].create(nuevoPartido));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"agregarPartidos\",\n    value: function agregarPartidos(nuevosPartidos) {\n      return regeneratorRuntime.async(function agregarPartidos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].bulkCreate(nuevosPartidos, {\n                returning: true\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw new Error(_context2.t0.parent.detail);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos() {\n      return regeneratorRuntime.async(function obtenerPartidos$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findAll());\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerPartido\",\n    value: function obtenerPartido(id_partido) {\n      var partidoExistente;\n      return regeneratorRuntime.async(function obtenerPartido$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findByPk(id_partido));\n\n            case 3:\n              partidoExistente = _context4.sent;\n\n              if (!partidoExistente) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", partido.dataValues);\n\n            case 8:\n              return _context4.abrupt(\"return\", null);\n\n            case 9:\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"actualizarPartido\",\n    value: function actualizarPartido(id_partido, partido) {\n      var partidoExistente, actualizado;\n      return regeneratorRuntime.async(function actualizarPartido$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findByPk(id_partido));\n\n            case 3:\n              partidoExistente = _context5.sent;\n\n              if (!partidoExistente) {\n                _context5.next = 15;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].update(partido, {\n                where: {\n                  id_partido: id_partido\n                }\n              }));\n\n            case 7:\n              actualizado = _context5.sent;\n\n              if (!(actualizado == 0)) {\n                _context5.next = 12;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", 0);\n\n            case 12:\n              return _context5.abrupt(\"return\", partido);\n\n            case 13:\n              _context5.next = 16;\n              break;\n\n            case 15:\n              return _context5.abrupt(\"return\", null);\n\n            case 16:\n              _context5.next = 21;\n              break;\n\n            case 18:\n              _context5.prev = 18;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }, {\n    key: \"actualizarPartidos\",\n    value: function actualizarPartidos(partidos) {\n      var partidos_actualizados;\n      return regeneratorRuntime.async(function actualizarPartidos$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].bulkCreate(partidos, {\n                updateOnDuplicate: [\"goles_local\", \"goles_visitante\", \"jugado\", \"dni_arbitro\", \"dni_asistente\"],\n                returning: true\n              }));\n\n            case 3:\n              partidos_actualizados = _context6.sent;\n\n              if (!(partidos_actualizados == 0)) {\n                _context6.next = 8;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", 0);\n\n            case 8:\n              return _context6.abrupt(\"return\", partidos_actualizados);\n\n            case 9:\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw new Error(_context6.t0.parent.detail);\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, {\n    key: \"eliminarPartido\",\n    value: function eliminarPartido(id_partido) {\n      var partidoExistente, partidoEliminado;\n      return regeneratorRuntime.async(function eliminarPartido$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].findByPk(id_partido));\n\n            case 3:\n              partidoExistente = _context7.sent;\n\n              if (!partidoExistente) {\n                _context7.next = 11;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(_Partido[\"default\"].destroy({\n                where: {\n                  id_partido: id_partido\n                }\n              }));\n\n            case 7:\n              partidoEliminado = _context7.sent;\n              return _context7.abrupt(\"return\", partidoEliminado);\n\n            case 11:\n              return _context7.abrupt(\"return\", null);\n\n            case 12:\n              _context7.next = 17;\n              break;\n\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }]);\n\n  return PartidoService;\n}();\n\nvar _default = PartidoService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcnRpZG9TZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIlBhcnRpZG9TZXJ2aWNlIiwibnVldm9QYXJ0aWRvIiwiUGFydGlkbyIsImNyZWF0ZSIsIm51ZXZvc1BhcnRpZG9zIiwiYnVsa0NyZWF0ZSIsInJldHVybmluZyIsIkVycm9yIiwicGFyZW50IiwiZGV0YWlsIiwiZmluZEFsbCIsImlkX3BhcnRpZG8iLCJmaW5kQnlQayIsInBhcnRpZG9FeGlzdGVudGUiLCJwYXJ0aWRvIiwiZGF0YVZhbHVlcyIsInVwZGF0ZSIsIndoZXJlIiwiYWN0dWFsaXphZG8iLCJwYXJ0aWRvcyIsInVwZGF0ZU9uRHVwbGljYXRlIiwicGFydGlkb3NfYWN0dWFsaXphZG9zIiwiZGVzdHJveSIsInBhcnRpZG9FbGltaW5hZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVNQSxjOzs7Ozs7Ozs7bUNBQzBCQyxZOzs7Ozs7OzhDQUVYQyxvQkFBUUMsTUFBUixDQUFlRixZQUFmLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBTVlHLGM7Ozs7Ozs7OENBRVpGLG9CQUFRRyxVQUFSLENBQW1CRCxjQUFuQixFQUFrQztBQUFDRSxnQkFBQUEsU0FBUyxFQUFDO0FBQVgsZUFBbEMsQzs7Ozs7Ozs7b0JBRVAsSUFBSUMsS0FBSixDQUFXLGFBQU1DLE1BQU4sQ0FBYUMsTUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQU1PUCxvQkFBUVEsT0FBUixFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQU9XQyxVOzs7Ozs7Ozs4Q0FFT1Qsb0JBQVFVLFFBQVIsQ0FBaUJELFVBQWpCLEM7OztBQUF6QkUsY0FBQUEsZ0I7O21CQUNGQSxnQjs7Ozs7Z0RBQ0tDLE9BQU8sQ0FBQ0MsVTs7O2dEQUdSLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NDQVFrQkosVSxFQUFXRyxPOzs7Ozs7Ozs4Q0FFUFosb0JBQVFVLFFBQVIsQ0FBaUJELFVBQWpCLEM7OztBQUF6QkUsY0FBQUEsZ0I7O21CQUVIQSxnQjs7Ozs7OzhDQUN5Qlgsb0JBQVFjLE1BQVIsQ0FBZUYsT0FBZixFQUF1QjtBQUFDRyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNOLGtCQUFBQSxVQUFVLEVBQUNBO0FBQVo7QUFBUCxlQUF2QixDOzs7QUFBcEJPLGNBQUFBLFc7O29CQUVIQSxXQUFXLElBQUUsQzs7Ozs7Z0RBQ1AsQzs7O2dEQUdBSixPOzs7Ozs7O2dEQUlGLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3VDQVFxQkssUTs7Ozs7Ozs7OENBRVVqQixvQkFBUUcsVUFBUixDQUFtQmMsUUFBbkIsRUFBNEI7QUFBQ0MsZ0JBQUFBLGlCQUFpQixFQUFFLENBQUMsYUFBRCxFQUFlLGlCQUFmLEVBQ3BGLFFBRG9GLEVBQzNFLGFBRDJFLEVBQzdELGVBRDZELENBQXBCO0FBQ3hCZCxnQkFBQUEsU0FBUyxFQUFDO0FBRGMsZUFBNUIsQzs7O0FBQTlCZSxjQUFBQSxxQjs7b0JBR0hBLHFCQUFxQixJQUFFLEM7Ozs7O2dEQUNqQixDOzs7Z0RBR0FBLHFCOzs7Ozs7Ozs7b0JBSUosSUFBSWQsS0FBSixDQUFXLGFBQU1DLE1BQU4sQ0FBYUMsTUFBeEIsQzs7Ozs7Ozs7Ozs7b0NBSWtCRSxVOzs7Ozs7Ozs4Q0FFTVQsb0JBQVFVLFFBQVIsQ0FBaUJELFVBQWpCLEM7OztBQUF6QkUsY0FBQUEsZ0I7O21CQUVIQSxnQjs7Ozs7OzhDQUM4Qlgsb0JBQVFvQixPQUFSLENBQWdCO0FBQUNMLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ04sa0JBQUFBLFVBQVUsRUFBQ0E7QUFBWjtBQUFQLGVBQWhCLEM7OztBQUF6QlksY0FBQUEsZ0I7Z0RBQ0NBLGdCOzs7Z0RBR0EsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFTRnZCLGMiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHNlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhcnRpZG8gZnJvbSAnLi4vbW9kZWxzL1BhcnRpZG8nO1xyXG5cclxuY2xhc3MgUGFydGlkb1NlcnZpY2UgeyBcclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyUGFydGlkbyhudWV2b1BhcnRpZG8pIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgUGFydGlkby5jcmVhdGUobnVldm9QYXJ0aWRvKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyUGFydGlkb3MobnVldm9zUGFydGlkb3Mpe1xyXG4gICAgICB0cnl7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IFBhcnRpZG8uYnVsa0NyZWF0ZShudWV2b3NQYXJ0aWRvcyx7cmV0dXJuaW5nOnRydWV9KTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHsgXHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yIChlcnJvci5wYXJlbnQuZGV0YWlsKTsgLy9lbCBvYmpldG8gcXVlIHByb3ZvY8OzIGVsIGVycm9yLiBObyBzZSBpbnNlcnRhIG5pbmfDum4gb2JqZXRvLlxyXG4gICAgICB9XHJcbiAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyUGFydGlkb3MoKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgUGFydGlkby5maW5kQWxsKCk7XHJcbiAgICAgIH0gXHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yOyAgIFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyUGFydGlkbyhpZF9wYXJ0aWRvKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBwYXJ0aWRvRXhpc3RlbnRlID0gYXdhaXQgUGFydGlkby5maW5kQnlQayhpZF9wYXJ0aWRvKTtcclxuICAgICAgICBpZiAocGFydGlkb0V4aXN0ZW50ZSl7XHJcbiAgICAgICAgICByZXR1cm4gcGFydGlkby5kYXRhVmFsdWVzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGFjdHVhbGl6YXJQYXJ0aWRvKGlkX3BhcnRpZG8scGFydGlkbyl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcGFydGlkb0V4aXN0ZW50ZSA9IGF3YWl0IFBhcnRpZG8uZmluZEJ5UGsoaWRfcGFydGlkbyk7XHJcblxyXG4gICAgICAgIGlmKHBhcnRpZG9FeGlzdGVudGUpe1xyXG4gICAgICAgICAgY29uc3QgYWN0dWFsaXphZG8gPSBhd2FpdCBQYXJ0aWRvLnVwZGF0ZShwYXJ0aWRvLHt3aGVyZTp7aWRfcGFydGlkbzppZF9wYXJ0aWRvfX0pO1xyXG5cclxuICAgICAgICAgIGlmKGFjdHVhbGl6YWRvPT0wKXsgLy9zaSBubyBoYXkgY29sdW1uYXMgYWZlY3RhZGFzXHJcbiAgICAgICAgICAgIHJldHVybiAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmV0dXJuIHBhcnRpZG87IFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphclBhcnRpZG9zKHBhcnRpZG9zKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBwYXJ0aWRvc19hY3R1YWxpemFkb3MgPSBhd2FpdCBQYXJ0aWRvLmJ1bGtDcmVhdGUocGFydGlkb3Mse3VwZGF0ZU9uRHVwbGljYXRlOiBbXCJnb2xlc19sb2NhbFwiLFwiZ29sZXNfdmlzaXRhbnRlXCIsXHJcbiAgICAgICAgICAgIFwianVnYWRvXCIsXCJkbmlfYXJiaXRyb1wiLFwiZG5pX2FzaXN0ZW50ZVwiXSxyZXR1cm5pbmc6dHJ1ZX0pOyAvL2xvcyBjYW1wb3MgcXVlIHNlIGFjdHVhbGl6YXLDoW4gKHNvbGFtZW50ZSlcclxuICBcclxuICAgICAgICAgICAgaWYocGFydGlkb3NfYWN0dWFsaXphZG9zPT0wKXsgLy9zaSBubyBoYXkgY29sdW1uYXMgYWZlY3RhZGFzXHJcbiAgICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICByZXR1cm4gcGFydGlkb3NfYWN0dWFsaXphZG9zOyBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yIChlcnJvci5wYXJlbnQuZGV0YWlsKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICBzdGF0aWMgYXN5bmMgZWxpbWluYXJQYXJ0aWRvKGlkX3BhcnRpZG8pe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCBwYXJ0aWRvRXhpc3RlbnRlID0gYXdhaXQgUGFydGlkby5maW5kQnlQayhpZF9wYXJ0aWRvKTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgaWYocGFydGlkb0V4aXN0ZW50ZSl7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhcnRpZG9FbGltaW5hZG8gPSBhd2FpdCBQYXJ0aWRvLmRlc3Ryb3koe3doZXJlOntpZF9wYXJ0aWRvOmlkX3BhcnRpZG99fSk7XHJcbiAgICAgICAgICAgIHJldHVybiBwYXJ0aWRvRWxpbWluYWRvOyBcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG59IFxyXG5cclxuICBleHBvcnQgZGVmYXVsdCBQYXJ0aWRvU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "PartidoService.js"
      ],
      "names": [
        "PartidoService",
        "nuevoPartido",
        "Partido",
        "create",
        "nuevosPartidos",
        "bulkCreate",
        "returning",
        "Error",
        "parent",
        "detail",
        "findAll",
        "id_partido",
        "findByPk",
        "partidoExistente",
        "partido",
        "dataValues",
        "update",
        "where",
        "actualizado",
        "partidos",
        "updateOnDuplicate",
        "partidos_actualizados",
        "destroy",
        "partidoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,c;;;;;;;;;mCAC0BC,Y;;;;;;;8CAEXC,oBAAQC,MAAR,CAAeF,YAAf,C;;;;;;;;;;;;;;;;;;;oCAMYG,c;;;;;;;8CAEZF,oBAAQG,UAAR,CAAmBD,cAAnB,EAAkC;AAACE,gBAAAA,SAAS,EAAC;AAAX,eAAlC,C;;;;;;;;oBAEP,IAAIC,KAAJ,CAAW,aAAMC,MAAN,CAAaC,MAAxB,C;;;;;;;;;;;;;;;;;;8CAMOP,oBAAQQ,OAAR,E;;;;;;;;;;;;;;;;;;;mCAOWC,U;;;;;;;;8CAEOT,oBAAQU,QAAR,CAAiBD,UAAjB,C;;;AAAzBE,cAAAA,gB;;mBACFA,gB;;;;;gDACKC,OAAO,CAACC,U;;;gDAGR,I;;;;;;;;;;;;;;;;;;;;sCAQkBJ,U,EAAWG,O;;;;;;;;8CAEPZ,oBAAQU,QAAR,CAAiBD,UAAjB,C;;;AAAzBE,cAAAA,gB;;mBAEHA,gB;;;;;;8CACyBX,oBAAQc,MAAR,CAAeF,OAAf,EAAuB;AAACG,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,UAAU,EAACA;AAAZ;AAAP,eAAvB,C;;;AAApBO,cAAAA,W;;oBAEHA,WAAW,IAAE,C;;;;;gDACP,C;;;gDAGAJ,O;;;;;;;gDAIF,I;;;;;;;;;;;;;;;;;;;;uCAQqBK,Q;;;;;;;;8CAEUjB,oBAAQG,UAAR,CAAmBc,QAAnB,EAA4B;AAACC,gBAAAA,iBAAiB,EAAE,CAAC,aAAD,EAAe,iBAAf,EACpF,QADoF,EAC3E,aAD2E,EAC7D,eAD6D,CAApB;AACxBd,gBAAAA,SAAS,EAAC;AADc,eAA5B,C;;;AAA9Be,cAAAA,qB;;oBAGHA,qBAAqB,IAAE,C;;;;;gDACjB,C;;;gDAGAA,qB;;;;;;;;;oBAIJ,IAAId,KAAJ,CAAW,aAAMC,MAAN,CAAaC,MAAxB,C;;;;;;;;;;;oCAIkBE,U;;;;;;;;8CAEMT,oBAAQU,QAAR,CAAiBD,UAAjB,C;;;AAAzBE,cAAAA,gB;;mBAEHA,gB;;;;;;8CAC8BX,oBAAQoB,OAAR,CAAgB;AAACL,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,UAAU,EAACA;AAAZ;AAAP,eAAhB,C;;;AAAzBY,cAAAA,gB;gDACCA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;;;;eASFvB,c",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Partido from '../models/Partido';\r\n\r\nclass PartidoService { \r\n    static async agregarPartido(nuevoPartido) {\r\n      try {\r\n        return await Partido.create(nuevoPartido);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async agregarPartidos(nuevosPartidos){\r\n      try{\r\n        return await Partido.bulkCreate(nuevosPartidos,{returning:true});\r\n      } catch (error) { \r\n        throw new Error (error.parent.detail); //el objeto que provocó el error. No se inserta ningún objeto.\r\n      }\r\n  }\r\n\r\n    static async obtenerPartidos(){\r\n      try {\r\n        return await Partido.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n    \r\n    static async obtenerPartido(id_partido){\r\n      try {\r\n        const partidoExistente = await Partido.findByPk(id_partido);\r\n        if (partidoExistente){\r\n          return partido.dataValues;\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async actualizarPartido(id_partido,partido){\r\n      try {\r\n        const partidoExistente = await Partido.findByPk(id_partido);\r\n\r\n        if(partidoExistente){\r\n          const actualizado = await Partido.update(partido,{where:{id_partido:id_partido}});\r\n\r\n          if(actualizado==0){ //si no hay columnas afectadas\r\n            return 0;\r\n          }\r\n          else{\r\n            return partido; \r\n          }\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async actualizarPartidos(partidos){\r\n        try {\r\n            const partidos_actualizados = await Partido.bulkCreate(partidos,{updateOnDuplicate: [\"goles_local\",\"goles_visitante\",\r\n            \"jugado\",\"dni_arbitro\",\"dni_asistente\"],returning:true}); //los campos que se actualizarán (solamente)\r\n  \r\n            if(partidos_actualizados==0){ //si no hay columnas afectadas\r\n              return 0;\r\n            }\r\n            else{\r\n              return partidos_actualizados; \r\n            }\r\n        }\r\n         catch (error) {\r\n           throw new Error (error.parent.detail);\r\n          }\r\n        }\r\n\r\n      static async eliminarPartido(id_partido){\r\n        try {\r\n          const partidoExistente = await Partido.findByPk(id_partido);\r\n          \r\n          if(partidoExistente){\r\n            const partidoEliminado = await Partido.destroy({where:{id_partido:id_partido}});\r\n            return partidoEliminado; \r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n} \r\n\r\n  export default PartidoService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616970362987
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\TablaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\TablaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\TablaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\TablaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "TablaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Tabla = _interopRequireDefault(require(\"../models/Tabla\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TablaService =\n/*#__PURE__*/\nfunction () {\n  function TablaService() {\n    _classCallCheck(this, TablaService);\n  }\n\n  _createClass(TablaService, null, [{\n    key: \"agregarTabla\",\n    value: function agregarTabla(nuevaTabla) {\n      return regeneratorRuntime.async(function agregarTabla$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].create(nuevaTabla));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"crearTablaVacia\",\n    value: function crearTablaVacia() {\n      var tabla;\n      return regeneratorRuntime.async(function crearTablaVacia$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              tabla = {};\n              tabla.tabla = {};\n              _context2.next = 5;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].create());\n\n            case 5:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerTablas\",\n    value: function obtenerTablas() {\n      return regeneratorRuntime.async(function obtenerTablas$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findAll());\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(id_tabla) {\n      var tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findByPk(id_tabla));\n\n            case 3:\n              tabla = _context4.sent;\n              return _context4.abrupt(\"return\", tabla);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"resetearTabla\",\n    value: function resetearTabla(id_tabla) {\n      var tabla_inicial;\n      return regeneratorRuntime.async(function resetearTabla$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              tabla_inicial = this.actualizarTabla(id_tabla, {\n                \"tabla\": null\n              });\n              return _context5.abrupt(\"return\", tabla_inicial);\n\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, [[0, 5]]);\n    }\n  }, {\n    key: \"eliminarTabla\",\n    value: function eliminarTabla(id_tabla) {\n      var tablaExistente, tablaEliminada;\n      return regeneratorRuntime.async(function eliminarTabla$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findByPk(id_tabla));\n\n            case 3:\n              tablaExistente = _context6.sent;\n\n              if (!tablaExistente) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 7;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].destroy({\n                where: {\n                  id_tabla: id_tabla\n                }\n              }));\n\n            case 7:\n              tablaEliminada = _context6.sent;\n              return _context6.abrupt(\"return\", tablaEliminada);\n\n            case 11:\n              return _context6.abrupt(\"return\", null);\n\n            case 12:\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 14]]);\n    }\n  }, {\n    key: \"actualizarTabla\",\n    value: function actualizarTabla(id_tabla, tabla) {\n      var tablaExistente, actualizado;\n      return regeneratorRuntime.async(function actualizarTabla$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].findByPk(id_tabla));\n\n            case 3:\n              tablaExistente = _context7.sent;\n\n              if (!tablaExistente) {\n                _context7.next = 15;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(_Tabla[\"default\"].update(tabla, {\n                where: {\n                  id_tabla: id_tabla\n                }\n              }));\n\n            case 7:\n              actualizado = _context7.sent;\n\n              if (!(actualizado == 0)) {\n                _context7.next = 12;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", 0);\n\n            case 12:\n              return _context7.abrupt(\"return\", tabla);\n\n            case 13:\n              _context7.next = 16;\n              break;\n\n            case 15:\n              return _context7.abrupt(\"return\", null);\n\n            case 16:\n              _context7.next = 21;\n              break;\n\n            case 18:\n              _context7.prev = 18;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 21:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 18]]);\n    }\n  }]);\n\n  return TablaService;\n}();\n\nvar _default = TablaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYmxhU2VydmljZS5qcyJdLCJuYW1lcyI6WyJUYWJsYVNlcnZpY2UiLCJudWV2YVRhYmxhIiwiVGFibGEiLCJjcmVhdGUiLCJ0YWJsYSIsImZpbmRBbGwiLCJpZF90YWJsYSIsImZpbmRCeVBrIiwidGFibGFfaW5pY2lhbCIsImFjdHVhbGl6YXJUYWJsYSIsInRhYmxhRXhpc3RlbnRlIiwiZGVzdHJveSIsIndoZXJlIiwidGFibGFFbGltaW5hZGEiLCJ1cGRhdGUiLCJhY3R1YWxpemFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRU1BLFk7Ozs7Ozs7OztpQ0FDd0JDLFU7Ozs7Ozs7OENBRVRDLGtCQUFNQyxNQUFOLENBQWFGLFVBQWIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRUEcsY0FBQUEsSyxHQUFNLEU7QUFDWkEsY0FBQUEsS0FBSyxDQUFDQSxLQUFOLEdBQWMsRUFBZDs7OENBQ2FGLGtCQUFNQyxNQUFOLEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQVFBRCxrQkFBTUcsT0FBTixFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lDQU9TQyxROzs7Ozs7Ozs4Q0FFRkosa0JBQU1LLFFBQU4sQ0FBZUQsUUFBZixDOzs7QUFBZEYsY0FBQUEsSztnREFDQ0EsSzs7Ozs7Ozs7Ozs7Ozs7OztrQ0FPZ0JFLFE7Ozs7Ozs7QUFFakJFLGNBQUFBLGEsR0FBaUIsS0FBS0MsZUFBTCxDQUFxQkgsUUFBckIsRUFBOEI7QUFBQyx5QkFBUTtBQUFULGVBQTlCLEM7Z0RBRWhCRSxhOzs7Ozs7Ozs7Ozs7Ozs7O2tDQU9nQkYsUTs7Ozs7Ozs7OENBRU1KLGtCQUFNSyxRQUFOLENBQWVELFFBQWYsQzs7O0FBQXZCSSxjQUFBQSxjOzttQkFDSEEsYzs7Ozs7OzhDQUM0QlIsa0JBQU1TLE9BQU4sQ0FBYztBQUFDQyxnQkFBQUEsS0FBSyxFQUFDO0FBQUNOLGtCQUFBQSxRQUFRLEVBQUNBO0FBQVY7QUFBUCxlQUFkLEM7OztBQUF2Qk8sY0FBQUEsYztnREFDQ0EsYzs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29DQVFnQlAsUSxFQUFTRixLOzs7Ozs7Ozs4Q0FFTEYsa0JBQU1LLFFBQU4sQ0FBZUQsUUFBZixDOzs7QUFBdkJJLGNBQUFBLGM7O21CQUNIQSxjOzs7Ozs7OENBQ3lCUixrQkFBTVksTUFBTixDQUFhVixLQUFiLEVBQW1CO0FBQUNRLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ04sa0JBQUFBLFFBQVEsRUFBQ0E7QUFBVjtBQUFQLGVBQW5CLEM7OztBQUFwQlMsY0FBQUEsVzs7b0JBQ0hBLFdBQVcsSUFBRSxDOzs7OztnREFDUCxDOzs7Z0RBR0FYLEs7Ozs7Ozs7Z0RBSUYsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFTQUosWSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGFibGEgZnJvbSAnLi4vbW9kZWxzL1RhYmxhJztcclxuXHJcbmNsYXNzIFRhYmxhU2VydmljZSB7ICBcclxuICAgIHN0YXRpYyBhc3luYyBhZ3JlZ2FyVGFibGEobnVldmFUYWJsYSkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBUYWJsYS5jcmVhdGUobnVldmFUYWJsYSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgY3JlYXJUYWJsYVZhY2lhKCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgdGFibGE9e307XHJcbiAgICAgICAgdGFibGEudGFibGEgPSB7fTtcclxuICAgICAgICByZXR1cm4gYXdhaXQgVGFibGEuY3JlYXRlKCk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclRhYmxhcygpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBUYWJsYS5maW5kQWxsKCk7XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lclRhYmxhKGlkX3RhYmxhKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB0YWJsYSA9IGF3YWl0IFRhYmxhLmZpbmRCeVBrKGlkX3RhYmxhKTtcclxuICAgICAgICByZXR1cm4gdGFibGE7XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgcmVzZXRlYXJUYWJsYShpZF90YWJsYSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgdGFibGFfaW5pY2lhbCA9ICB0aGlzLmFjdHVhbGl6YXJUYWJsYShpZF90YWJsYSx7XCJ0YWJsYVwiOm51bGx9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRhYmxhX2luaWNpYWw7XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZWxpbWluYXJUYWJsYShpZF90YWJsYSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgdGFibGFFeGlzdGVudGUgPSBhd2FpdCBUYWJsYS5maW5kQnlQayhpZF90YWJsYSk7XHJcbiAgICAgICAgaWYodGFibGFFeGlzdGVudGUpe1xyXG4gICAgICAgICAgY29uc3QgdGFibGFFbGltaW5hZGEgPSBhd2FpdCBUYWJsYS5kZXN0cm95KHt3aGVyZTp7aWRfdGFibGE6aWRfdGFibGF9fSk7XHJcbiAgICAgICAgICByZXR1cm4gdGFibGFFbGltaW5hZGE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYWN0dWFsaXphclRhYmxhKGlkX3RhYmxhLHRhYmxhKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB0YWJsYUV4aXN0ZW50ZSA9IGF3YWl0IFRhYmxhLmZpbmRCeVBrKGlkX3RhYmxhKTtcclxuICAgICAgICBpZih0YWJsYUV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBjb25zdCBhY3R1YWxpemFkbyA9IGF3YWl0IFRhYmxhLnVwZGF0ZSh0YWJsYSx7d2hlcmU6e2lkX3RhYmxhOmlkX3RhYmxhfX0pO1xyXG4gICAgICAgICAgaWYoYWN0dWFsaXphZG89PTApeyAvL3NpIG5vIGhheSBjb2x1bW5hcyBhZmVjdGFkYXNcclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICByZXR1cm4gdGFibGE7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IFxyXG5cclxuICBleHBvcnQgZGVmYXVsdCBUYWJsYVNlcnZpY2U7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "TablaService.js"
      ],
      "names": [
        "TablaService",
        "nuevaTabla",
        "Tabla",
        "create",
        "tabla",
        "findAll",
        "id_tabla",
        "findByPk",
        "tabla_inicial",
        "actualizarTabla",
        "tablaExistente",
        "destroy",
        "where",
        "tablaEliminada",
        "update",
        "actualizado"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,Y;;;;;;;;;iCACwBC,U;;;;;;;8CAETC,kBAAMC,MAAN,CAAaF,UAAb,C;;;;;;;;;;;;;;;;;;;;;;;;;;AAQPG,cAAAA,K,GAAM,E;AACZA,cAAAA,KAAK,CAACA,KAAN,GAAc,EAAd;;8CACaF,kBAAMC,MAAN,E;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAD,kBAAMG,OAAN,E;;;;;;;;;;;;;;;;;;;iCAOSC,Q;;;;;;;;8CAEFJ,kBAAMK,QAAN,CAAeD,QAAf,C;;;AAAdF,cAAAA,K;gDACCA,K;;;;;;;;;;;;;;;;kCAOgBE,Q;;;;;;;AAEjBE,cAAAA,a,GAAiB,KAAKC,eAAL,CAAqBH,QAArB,EAA8B;AAAC,yBAAQ;AAAT,eAA9B,C;gDAEhBE,a;;;;;;;;;;;;;;;;kCAOgBF,Q;;;;;;;;8CAEMJ,kBAAMK,QAAN,CAAeD,QAAf,C;;;AAAvBI,cAAAA,c;;mBACHA,c;;;;;;8CAC4BR,kBAAMS,OAAN,CAAc;AAACC,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAAd,C;;;AAAvBO,cAAAA,c;gDACCA,c;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;oCAQgBP,Q,EAASF,K;;;;;;;;8CAELF,kBAAMK,QAAN,CAAeD,QAAf,C;;;AAAvBI,cAAAA,c;;mBACHA,c;;;;;;8CACyBR,kBAAMY,MAAN,CAAaV,KAAb,EAAmB;AAACQ,gBAAAA,KAAK,EAAC;AAACN,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAAnB,C;;;AAApBS,cAAAA,W;;oBACHA,WAAW,IAAE,C;;;;;gDACP,C;;;gDAGAX,K;;;;;;;gDAIF,I;;;;;;;;;;;;;;;;;;;;;;;eASAJ,Y",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Tabla from '../models/Tabla';\r\n\r\nclass TablaService {  \r\n    static async agregarTabla(nuevaTabla) {\r\n      try {\r\n        return await Tabla.create(nuevaTabla);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async crearTablaVacia(){\r\n      try {\r\n        const tabla={};\r\n        tabla.tabla = {};\r\n        return await Tabla.create();\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerTablas(){\r\n      try {\r\n        return await Tabla.findAll();\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerTabla(id_tabla){\r\n      try {\r\n        const tabla = await Tabla.findByPk(id_tabla);\r\n        return tabla;\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async resetearTabla(id_tabla){\r\n      try {\r\n        const tabla_inicial =  this.actualizarTabla(id_tabla,{\"tabla\":null});\r\n\r\n        return tabla_inicial;\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async eliminarTabla(id_tabla){\r\n      try {\r\n        const tablaExistente = await Tabla.findByPk(id_tabla);\r\n        if(tablaExistente){\r\n          const tablaEliminada = await Tabla.destroy({where:{id_tabla:id_tabla}});\r\n          return tablaEliminada;\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async actualizarTabla(id_tabla,tabla){\r\n      try {\r\n        const tablaExistente = await Tabla.findByPk(id_tabla);\r\n        if(tablaExistente){\r\n          const actualizado = await Tabla.update(tabla,{where:{id_tabla:id_tabla}});\r\n          if(actualizado==0){ //si no hay columnas afectadas\r\n            return 0;\r\n          }\r\n          else{\r\n            return tabla;\r\n          }\r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  } \r\n\r\n  export default TablaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616983519447
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\equipo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\equipo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\equipo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\equipo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "equipo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _equipo = _interopRequireDefault(require(\"../controllers/equipo.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _equipo[\"default\"].obtenerEquipos); //router.get('/nombre=:nombre',EquipoController.obtenerEquipo);\n\nrouter.get('/:id', _equipo[\"default\"].obtenerEquipo);\nrouter.post('/', _equipo[\"default\"].crearEquipo);\nrouter.post('/crearEquipos', _equipo[\"default\"].crearEquipos);\nrouter.put('/:id', _equipo[\"default\"].actualizarEquipo);\nrouter[\"delete\"]('/:id', _equipo[\"default\"].eliminarEquipo);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVxdWlwby5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJFcXVpcG9Db250cm9sbGVyIiwib2J0ZW5lckVxdWlwb3MiLCJvYnRlbmVyRXF1aXBvIiwicG9zdCIsImNyZWFyRXF1aXBvIiwiY3JlYXJFcXVpcG9zIiwicHV0IiwiYWN0dWFsaXphckVxdWlwbyIsImVsaW1pbmFyRXF1aXBvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBR0E7Ozs7QUFGQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFJQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFlQyxtQkFBaUJDLGNBQWhDLEUsQ0FDQTs7QUFDQUgsTUFBTSxDQUFDQyxHQUFQLENBQVcsTUFBWCxFQUFrQkMsbUJBQWlCRSxhQUFuQztBQUVBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxHQUFaLEVBQWdCSCxtQkFBaUJJLFdBQWpDO0FBQ0FOLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLGVBQVosRUFBNEJILG1CQUFpQkssWUFBN0M7QUFFQVAsTUFBTSxDQUFDUSxHQUFQLENBQVcsTUFBWCxFQUFrQk4sbUJBQWlCTyxnQkFBbkM7QUFFQVQsTUFBTSxVQUFOLENBQWMsTUFBZCxFQUFxQkUsbUJBQWlCUSxjQUF0QztlQUVlVixNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5pbXBvcnQgRXF1aXBvQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy9lcXVpcG8uY29udHJvbGxlcic7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvJyxFcXVpcG9Db250cm9sbGVyLm9idGVuZXJFcXVpcG9zKTtcclxuLy9yb3V0ZXIuZ2V0KCcvbm9tYnJlPTpub21icmUnLEVxdWlwb0NvbnRyb2xsZXIub2J0ZW5lckVxdWlwbyk7XHJcbnJvdXRlci5nZXQoJy86aWQnLEVxdWlwb0NvbnRyb2xsZXIub2J0ZW5lckVxdWlwbyk7XHJcblxyXG5yb3V0ZXIucG9zdCgnLycsRXF1aXBvQ29udHJvbGxlci5jcmVhckVxdWlwbyk7XHJcbnJvdXRlci5wb3N0KCcvY3JlYXJFcXVpcG9zJyxFcXVpcG9Db250cm9sbGVyLmNyZWFyRXF1aXBvcyk7XHJcblxyXG5yb3V0ZXIucHV0KCcvOmlkJyxFcXVpcG9Db250cm9sbGVyLmFjdHVhbGl6YXJFcXVpcG8pO1xyXG5cclxucm91dGVyLmRlbGV0ZSgnLzppZCcsRXF1aXBvQ29udHJvbGxlci5lbGltaW5hckVxdWlwbyk7IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "equipo.js"
      ],
      "names": [
        "router",
        "get",
        "EquipoController",
        "obtenerEquipos",
        "obtenerEquipo",
        "post",
        "crearEquipo",
        "crearEquipos",
        "put",
        "actualizarEquipo",
        "eliminarEquipo"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,mBAAiBC,cAAhC,E,CACA;;AACAH,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,mBAAiBE,aAAnC;AAEAJ,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAgBH,mBAAiBI,WAAjC;AACAN,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4BH,mBAAiBK,YAA7C;AAEAP,MAAM,CAACQ,GAAP,CAAW,MAAX,EAAkBN,mBAAiBO,gBAAnC;AAEAT,MAAM,UAAN,CAAc,MAAd,EAAqBE,mBAAiBQ,cAAtC;eAEeV,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport EquipoController from '../controllers/equipo.controller';\r\n\r\nrouter.get('/',EquipoController.obtenerEquipos);\r\n//router.get('/nombre=:nombre',EquipoController.obtenerEquipo);\r\nrouter.get('/:id',EquipoController.obtenerEquipo);\r\n\r\nrouter.post('/',EquipoController.crearEquipo);\r\nrouter.post('/crearEquipos',EquipoController.crearEquipos);\r\n\r\nrouter.put('/:id',EquipoController.actualizarEquipo);\r\n\r\nrouter.delete('/:id',EquipoController.eliminarEquipo); \r\n\r\nexport default router;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619027286133
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\equipo.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\equipo.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\equipo.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\equipo.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "equipo.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _EquipoService = _interopRequireDefault(require(\"../services/EquipoService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar EquipoController =\n/*#__PURE__*/\nfunction () {\n  function EquipoController() {\n    _classCallCheck(this, EquipoController);\n  }\n\n  _createClass(EquipoController, null, [{\n    key: \"crearEquipo\",\n    value: function crearEquipo(req, res) {\n      var nuevoEquipo, EquipoCreada;\n      return regeneratorRuntime.async(function crearEquipo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoEquipo = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].agregarEquipo(nuevoEquipo));\n\n            case 4:\n              EquipoCreada = _context.sent;\n              util.setSuccess(201, 'Equipo añadido', EquipoCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"crearEquipos\",\n    value: function crearEquipos(req, res) {\n      var nuevosEquipos, equiposCreados;\n      return regeneratorRuntime.async(function crearEquipos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              nuevosEquipos = req.body;\n              _context2.next = 4;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].agregarEquipos(nuevosEquipos));\n\n            case 4:\n              equiposCreados = _context2.sent;\n              util.setSuccess(201, 'Equipos añadidos', equiposCreados);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, \"No se añadieron los equipos: \" + _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerEquipos\",\n    value: function obtenerEquipos(req, res) {\n      var Equipos;\n      return regeneratorRuntime.async(function obtenerEquipos$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipos());\n\n            case 3:\n              Equipos = _context3.sent;\n\n              if (Equipos && Equipos.length > 0) {\n                util.setSuccess(200, 'Equipos obtenidos', Equipos);\n              } else {\n                util.setSuccess(200, 'No se encuentran Equipos');\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(400, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerEquipo\",\n    value: function obtenerEquipo(req, res) {\n      var equipo, id, nombre;\n      return regeneratorRuntime.async(function obtenerEquipo$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n\n              if (!req.params.id) {\n                _context4.next = 8;\n                break;\n              }\n\n              id = req.params.id;\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipoID(id));\n\n            case 5:\n              equipo = _context4.sent;\n              _context4.next = 12;\n              break;\n\n            case 8:\n              nombre = req.params.nombre;\n              _context4.next = 11;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].obtenerEquipo(nombre));\n\n            case 11:\n              equipo = _context4.sent;\n\n            case 12:\n              if (equipo) {\n                util.setSuccess(200, 'Equipo obtenido', equipo);\n              } else {\n                util.setError(404, \"Equipo no encontrado\");\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"actualizarEquipo\",\n    value: function actualizarEquipo(req, res) {\n      var id_equipo, equipo, equipoActualizado;\n      return regeneratorRuntime.async(function actualizarEquipo$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_equipo = req.params.id;\n              equipo = req.body;\n              _context5.next = 5;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].actualizarEquipo(id_equipo, equipo));\n\n            case 5:\n              equipoActualizado = _context5.sent;\n\n              if (equipoActualizado) {\n                util.setSuccess(200, 'Categoría actualizada', equipoActualizado);\n              } else {\n                util.setError(404, \"Equipo no encontrado\");\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarEquipo\",\n    value: function eliminarEquipo(req, res) {\n      var id_equipo, equipoEliminado;\n      return regeneratorRuntime.async(function eliminarEquipo$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              id_equipo = req.params.id;\n              _context6.next = 4;\n              return regeneratorRuntime.awrap(_EquipoService[\"default\"].eliminarEquipo(id_equipo));\n\n            case 4:\n              equipoEliminado = _context6.sent;\n\n              if (equipoEliminado) {\n                util.setSuccess(200, 'Equuipo eliminado');\n              } else {\n                util.setError(404, \"Equipo con id_equipo: \".concat(id_equipo, \" no encontrado \"));\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return EquipoController;\n}();\n\nvar _default = EquipoController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "equipo.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "EquipoController",
        "req",
        "res",
        "nuevoEquipo",
        "body",
        "EquipoService",
        "agregarEquipo",
        "EquipoCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "nuevosEquipos",
        "agregarEquipos",
        "equiposCreados",
        "obtenerEquipos",
        "Equipos",
        "length",
        "params",
        "id",
        "obtenerEquipoID",
        "equipo",
        "nombre",
        "obtenerEquipo",
        "id_equipo",
        "actualizarEquipo",
        "equipoActualizado",
        "eliminarEquipo",
        "equipoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,gB;;;;;;;;;gCACuBC,G,EAAKC,G;;;;;;;AAEhBC,cAAAA,W,GAAcF,GAAG,CAACG,I;;8CACGC,0BAAcC,aAAd,CAA4BH,WAA5B,C;;;AAArBI,cAAAA,Y;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,gBAApB,EAAqCD,YAArC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;iCAIWD,G,EAAKC,G;;;;;;;AAGjBU,cAAAA,a,GAAgBX,GAAG,CAACG,I;;8CACGC,0BAAcQ,cAAd,CAA6BD,aAA7B,C;;;AAAvBE,cAAAA,c;AACNhB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCM,cAAvC;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,kCAAgC,aAAMC,OAAxD;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;;8CAEHG,0BAAcU,cAAd,E;;;AAAhBC,cAAAA,O;;AAEN,kBAAGA,OAAO,IAAIA,OAAO,CAACC,MAAR,GAAiB,CAA/B,EAAiC;AAC7BnB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCQ,OAAxC;AACH,eAFD,MAGI;AACAlB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,0BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;;mBAIrBD,GAAG,CAACiB,MAAJ,CAAWC,E;;;;;AACJA,cAAAA,E,GAAKlB,GAAG,CAACiB,MAAJ,CAAWC,E;;8CACPd,0BAAce,eAAd,CAA8BD,EAA9B,C;;;AAAfE,cAAAA,M;;;;;AAGMC,cAAAA,M,GAASrB,GAAG,CAACiB,MAAJ,CAAWI,M;;8CACXjB,0BAAckB,aAAd,CAA4BD,MAA5B,C;;;AAAfD,cAAAA,M;;;AAGJ,kBAAGA,MAAH,EAAU;AACNvB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCa,MAAtC;AACH,eAFD,MAGI;AACAvB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;qCAIeD,G,EAAKC,G;;;;;;;AAGrBsB,cAAAA,S,GAAYvB,GAAG,CAACiB,MAAJ,CAAWC,E;AAEvBE,cAAAA,M,GAASpB,GAAG,CAACG,I;;8CAEaC,0BAAcoB,gBAAd,CAA+BD,SAA/B,EAAyCH,MAAzC,C;;;AAA1BK,cAAAA,iB;;AAEN,kBAAGA,iBAAH,EAAqB;AACjB5B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,uBAApB,EAA4CkB,iBAA5C;AACH,eAFD,MAGI;AACA5B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDAEMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBsB,cAAAA,S,GAAYvB,GAAG,CAACiB,MAAJ,CAAWC,E;;8CACCd,0BAAcsB,cAAd,CAA6BH,SAA7B,C;;;AAAxBI,cAAAA,e;;AAEN,kBAAGA,eAAH,EAAmB;AACf9B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,kCAA2Cc,SAA3C;AACH;;gDAEM1B,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,gB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import EquipoService from '../services/EquipoService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass EquipoController {\r\n    static async crearEquipo(req, res) {    \r\n        try {    \r\n            const nuevoEquipo = req.body;\r\n            const EquipoCreada = await EquipoService.agregarEquipo(nuevoEquipo);\r\n\r\n            util.setSuccess(201,'Equipo añadido',EquipoCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async crearEquipos(req, res) {    \r\n        //Recibe un arreglo objetos Equipo para ser creados, se insertan todos (si no hay error), o ninguno (si hay error)\r\n        try {    \r\n            const nuevosEquipos = req.body;\r\n            const equiposCreados = await EquipoService.agregarEquipos(nuevosEquipos);\r\n            util.setSuccess(201,'Equipos añadidos',equiposCreados);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,\"No se añadieron los equipos: \"+error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerEquipos(req, res){\r\n        try {\r\n            const Equipos = await EquipoService.obtenerEquipos();\r\n            \r\n            if(Equipos && Equipos.length > 0){\r\n                util.setSuccess(200,'Equipos obtenidos',Equipos);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Equipos'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerEquipo(req, res){\r\n        try {\r\n            var equipo;\r\n\r\n            if(req.params.id){\r\n                const id = req.params.id;\r\n                equipo = await EquipoService.obtenerEquipoID(id);\r\n            }\r\n            else{\r\n                const nombre = req.params.nombre;\r\n                equipo = await EquipoService.obtenerEquipo(nombre);\r\n            }\r\n            \r\n            if(equipo){\r\n                util.setSuccess(200,'Equipo obtenido',equipo);\r\n            }\r\n            else{\r\n                util.setError(404,`Equipo no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n  \r\n    static async actualizarEquipo(req, res){\r\n\r\n        try {\r\n            const id_equipo = req.params.id;\r\n\r\n            const equipo = req.body;\r\n\r\n            const equipoActualizado = await EquipoService.actualizarEquipo(id_equipo,equipo);\r\n\r\n            if(equipoActualizado){\r\n                util.setSuccess(200,'Categoría actualizada',equipoActualizado);\r\n            }\r\n            else{\r\n                util.setError(404,`Equipo no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarEquipo(req, res){\r\n        try {\r\n            const id_equipo = req.params.id;\r\n            const equipoEliminado = await EquipoService.eliminarEquipo(id_equipo);\r\n\r\n            if(equipoEliminado){\r\n                util.setSuccess(200,'Equuipo eliminado');\r\n            }\r\n            else{\r\n                util.setError(404,`Equipo con id_equipo: ${id_equipo} no encontrado `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n} \r\n\r\nexport default EquipoController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619027248997
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\listaInscripcion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\listaInscripcion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\listaInscripcion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\listaInscripcion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "listaInscripcion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _listaInscripcion = _interopRequireDefault(require(\"../controllers/listaInscripcion.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _listaInscripcion[\"default\"].obtenerListasInscripcion);\nrouter.get('/:id', _listaInscripcion[\"default\"].obtenerListaInscripcion);\nrouter.get('/jugadoresListados/:id', _listaInscripcion[\"default\"].obtenerJugadores); //obtener los jugadores listados pertenecientes a una Lista\n\nrouter.post('/', _listaInscripcion[\"default\"].crearListaInscripcion);\nrouter.post('/agregarJugadores/:id', _listaInscripcion[\"default\"].agregarJugadoresEnLista); //recibe una lista de jugadores para insertar en lista :id\n\nrouter.put('/:id', _listaInscripcion[\"default\"].actualizarListaInscripcion);\nrouter[\"delete\"]('/:id/eliminarJugador/:dni_jugador', _listaInscripcion[\"default\"].eliminarJugadorEnLista);\nrouter[\"delete\"]('/:id', _listaInscripcion[\"default\"].eliminarListaInscripcion);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RhSW5zY3JpcGNpb24uanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIiLCJvYnRlbmVyTGlzdGFzSW5zY3JpcGNpb24iLCJvYnRlbmVyTGlzdGFJbnNjcmlwY2lvbiIsIm9idGVuZXJKdWdhZG9yZXMiLCJwb3N0IiwiY3JlYXJMaXN0YUluc2NyaXBjaW9uIiwiYWdyZWdhckp1Z2Fkb3Jlc0VuTGlzdGEiLCJwdXQiLCJhY3R1YWxpemFyTGlzdGFJbnNjcmlwY2lvbiIsImVsaW1pbmFySnVnYWRvckVuTGlzdGEiLCJlbGltaW5hckxpc3RhSW5zY3JpcGNpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWVDLDZCQUEyQkMsd0JBQTFDO0FBQ0FILE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JDLDZCQUEyQkUsdUJBQTdDO0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLHdCQUFYLEVBQW9DQyw2QkFBMkJHLGdCQUEvRCxFLENBQWtGOztBQUVsRkwsTUFBTSxDQUFDTSxJQUFQLENBQVksR0FBWixFQUFpQkosNkJBQTJCSyxxQkFBNUM7QUFDQVAsTUFBTSxDQUFDTSxJQUFQLENBQVksdUJBQVosRUFBb0NKLDZCQUEyQk0sdUJBQS9ELEUsQ0FBeUY7O0FBRXpGUixNQUFNLENBQUNTLEdBQVAsQ0FBVyxNQUFYLEVBQWtCUCw2QkFBMkJRLDBCQUE3QztBQUVBVixNQUFNLFVBQU4sQ0FBYyxtQ0FBZCxFQUFrREUsNkJBQTJCUyxzQkFBN0U7QUFDQVgsTUFBTSxVQUFOLENBQWMsTUFBZCxFQUFxQkUsNkJBQTJCVSx3QkFBaEQ7ZUFFZVosTSIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuaW1wb3J0IExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL2xpc3RhSW5zY3JpcGNpb24uY29udHJvbGxlcic7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvJyxMaXN0YUluc2NyaXBjaW9uQ29udHJvbGxlci5vYnRlbmVyTGlzdGFzSW5zY3JpcGNpb24pO1xyXG5yb3V0ZXIuZ2V0KCcvOmlkJyxMaXN0YUluc2NyaXBjaW9uQ29udHJvbGxlci5vYnRlbmVyTGlzdGFJbnNjcmlwY2lvbik7XHJcbnJvdXRlci5nZXQoJy9qdWdhZG9yZXNMaXN0YWRvcy86aWQnLExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyLm9idGVuZXJKdWdhZG9yZXMpOyAvL29idGVuZXIgbG9zIGp1Z2Fkb3JlcyBsaXN0YWRvcyBwZXJ0ZW5lY2llbnRlcyBhIHVuYSBMaXN0YVxyXG5cclxucm91dGVyLnBvc3QoJy8nLCBMaXN0YUluc2NyaXBjaW9uQ29udHJvbGxlci5jcmVhckxpc3RhSW5zY3JpcGNpb24pO1xyXG5yb3V0ZXIucG9zdCgnL2FncmVnYXJKdWdhZG9yZXMvOmlkJyxMaXN0YUluc2NyaXBjaW9uQ29udHJvbGxlci5hZ3JlZ2FySnVnYWRvcmVzRW5MaXN0YSk7IC8vcmVjaWJlIHVuYSBsaXN0YSBkZSBqdWdhZG9yZXMgcGFyYSBpbnNlcnRhciBlbiBsaXN0YSA6aWRcclxuXHJcbnJvdXRlci5wdXQoJy86aWQnLExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyLmFjdHVhbGl6YXJMaXN0YUluc2NyaXBjaW9uKTtcclxuXHJcbnJvdXRlci5kZWxldGUoJy86aWQvZWxpbWluYXJKdWdhZG9yLzpkbmlfanVnYWRvcicsTGlzdGFJbnNjcmlwY2lvbkNvbnRyb2xsZXIuZWxpbWluYXJKdWdhZG9yRW5MaXN0YSk7XHJcbnJvdXRlci5kZWxldGUoJy86aWQnLExpc3RhSW5zY3JpcGNpb25Db250cm9sbGVyLmVsaW1pbmFyTGlzdGFJbnNjcmlwY2lvbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "listaInscripcion.js"
      ],
      "names": [
        "router",
        "get",
        "ListaInscripcionController",
        "obtenerListasInscripcion",
        "obtenerListaInscripcion",
        "obtenerJugadores",
        "post",
        "crearListaInscripcion",
        "agregarJugadoresEnLista",
        "put",
        "actualizarListaInscripcion",
        "eliminarJugadorEnLista",
        "eliminarListaInscripcion"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,6BAA2BC,wBAA1C;AACAH,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,6BAA2BE,uBAA7C;AACAJ,MAAM,CAACC,GAAP,CAAW,wBAAX,EAAoCC,6BAA2BG,gBAA/D,E,CAAkF;;AAElFL,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiBJ,6BAA2BK,qBAA5C;AACAP,MAAM,CAACM,IAAP,CAAY,uBAAZ,EAAoCJ,6BAA2BM,uBAA/D,E,CAAyF;;AAEzFR,MAAM,CAACS,GAAP,CAAW,MAAX,EAAkBP,6BAA2BQ,0BAA7C;AAEAV,MAAM,UAAN,CAAc,mCAAd,EAAkDE,6BAA2BS,sBAA7E;AACAX,MAAM,UAAN,CAAc,MAAd,EAAqBE,6BAA2BU,wBAAhD;eAEeZ,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport ListaInscripcionController from '../controllers/listaInscripcion.controller';\r\n\r\nrouter.get('/',ListaInscripcionController.obtenerListasInscripcion);\r\nrouter.get('/:id',ListaInscripcionController.obtenerListaInscripcion);\r\nrouter.get('/jugadoresListados/:id',ListaInscripcionController.obtenerJugadores); //obtener los jugadores listados pertenecientes a una Lista\r\n\r\nrouter.post('/', ListaInscripcionController.crearListaInscripcion);\r\nrouter.post('/agregarJugadores/:id',ListaInscripcionController.agregarJugadoresEnLista); //recibe una lista de jugadores para insertar en lista :id\r\n\r\nrouter.put('/:id',ListaInscripcionController.actualizarListaInscripcion);\r\n\r\nrouter.delete('/:id/eliminarJugador/:dni_jugador',ListaInscripcionController.eliminarJugadorEnLista);\r\nrouter.delete('/:id',ListaInscripcionController.eliminarListaInscripcion);\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1619048094107
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\listaInscripcion.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\listaInscripcion.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\listaInscripcion.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\listaInscripcion.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "listaInscripcion.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ListaInscripcionService = _interopRequireDefault(require(\"../services/ListaInscripcionService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Jugador_integra_ListaService = _interopRequireDefault(require(\"../services/Jugador_integra_ListaService\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"../models/ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar ListaInscripcionController =\n/*#__PURE__*/\nfunction () {\n  function ListaInscripcionController() {\n    _classCallCheck(this, ListaInscripcionController);\n  }\n\n  _createClass(ListaInscripcionController, null, [{\n    key: \"crearListaInscripcion\",\n    value: function crearListaInscripcion(req, res) {\n      var nuevaListaInscripcion, ListaInscripcionCreada;\n      return regeneratorRuntime.async(function crearListaInscripcion$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaListaInscripcion = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].agregarListaInscripcion(nuevaListaInscripcion));\n\n            case 4:\n              ListaInscripcionCreada = _context.sent;\n              util.setSuccess(201, 'ListaInscripcion añadida', ListaInscripcionCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerListasInscripcion\",\n    value: function obtenerListasInscripcion(req, res) {\n      var listasInscripcion;\n      return regeneratorRuntime.async(function obtenerListasInscripcion$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListasInscripcion());\n\n            case 3:\n              listasInscripcion = _context2.sent;\n\n              if (listasInscripcion && listasInscripcion.length > 0) {\n                util.setSuccess(200, 'Listas de Inscripción obtenidas', listasInscripcion);\n              } else {\n                util.setError(404, 'No se encuentran Listas de Inscripción');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerListaInscripcion\",\n    value: function obtenerListaInscripcion(req, res) {\n      var id_lista, listaInscripcion;\n      return regeneratorRuntime.async(function obtenerListaInscripcion$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id_lista = req.params.id;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListaInscripcion(id_lista));\n\n            case 4:\n              listaInscripcion = _context3.sent;\n\n              if (listaInscripcion) {\n                /*const equipo = await listaInscripcion.getEquipo();\r\n                console.log(\"Información del equipo de la lista: \",equipo.dataValues);\r\n                \r\n                const torneo = await ListaInscripcionService.obtenerTorneo(listaInscripcion.anio_torneo,listaInscripcion.tipo_torneo);\r\n                console.log(\"Información del torneo de la lista: \",torneo);  */\n                util.setSuccess(200, 'ListaInscripcion obtenida', listaInscripcion);\n              } else {\n                util.setError(404, \"ListaInscripcion no encontrada\");\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarListaInscripcion\",\n    value: function actualizarListaInscripcion(req, res) {\n      var id_listaInscripcion, listaInscripcion, listaInscripcionActualizada;\n      return regeneratorRuntime.async(function actualizarListaInscripcion$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_listaInscripcion = req.params.id;\n              listaInscripcion = req.body;\n              _context4.next = 5;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].actualizarListaInscripcion(id_listaInscripcion, listaInscripcion));\n\n            case 5:\n              listaInscripcionActualizada = _context4.sent;\n\n              if (listaInscripcionActualizada) {\n                util.setSuccess(200, 'Lista inscripción actualizada', listaInscripcionActualizada);\n              } else {\n                util.setError(404, \"ListaInscripcion no encontrada \");\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"eliminarListaInscripcion\",\n    value: function eliminarListaInscripcion(req, res) {\n      var id_lista, listaEliminada;\n      return regeneratorRuntime.async(function eliminarListaInscripcion$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_lista = req.params.id;\n              _context5.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].eliminarListaInscripcion(id_lista));\n\n            case 4:\n              listaEliminada = _context5.sent;\n\n              if (listaEliminada) {\n                util.setSuccess(200, 'ListaInscripcion eliminada');\n              } else {\n                console.log();\n                util.setError(404, \"ListaInscripcion no se pudo eliminar\");\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerCapitan\",\n    value: function obtenerCapitan(lista) {\n      var capitan;\n      return regeneratorRuntime.async(function obtenerCapitan$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(lista.getCapitan());\n\n            case 3:\n              capitan = _context6.sent;\n              return _context6.abrupt(\"return\", capitan.dataValues);\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerDelegado\",\n    value: function obtenerDelegado(lista) {\n      var delegado;\n      return regeneratorRuntime.async(function obtenerDelegado$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(lista.getDelegado());\n\n            case 3:\n              delegado = _context7.sent;\n              return _context7.abrupt(\"return\", delegado.dataValues);\n\n            case 7:\n              _context7.prev = 7;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerSubDelegado\",\n    value: function obtenerSubDelegado(lista) {\n      var subdelegado;\n      return regeneratorRuntime.async(function obtenerSubDelegado$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return regeneratorRuntime.awrap(lista.getSubDelegado());\n\n            case 3:\n              subdelegado = _context8.sent;\n              return _context8.abrupt(\"return\", subdelegado.dataValues);\n\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](0);\n              throw _context8.t0;\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(anio_torneo, tipo_torneo) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerTorneo(anio_torneo, tipo_torneo));\n\n            case 3:\n              torneo = _context9.sent;\n              return _context9.abrupt(\"return\", torneo);\n\n            case 7:\n              _context9.prev = 7;\n              _context9.t0 = _context9[\"catch\"](0);\n              throw _context9.t0;\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores(req, res) {\n      var id_lista, jugadores;\n      return regeneratorRuntime.async(function obtenerJugadores$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              id_lista = req.params.id;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerJugadores(id_lista));\n\n            case 4:\n              jugadores = _context10.sent;\n\n              if (jugadores) {\n                util.setSuccess(200, \"Jugadores de la lista: '\".concat(id_lista, \"'  obtenidos\"), jugadores);\n              } else {\n                util.setError(404, \"Jugadores no encontrados\");\n              }\n\n              return _context10.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](1);\n              throw _context10.t0;\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    }\n  }, {\n    key: \"agregarJugadoresEnLista\",\n    value: function agregarJugadoresEnLista(req, res) {\n      var id_lista, lista, jugadores, operacion;\n      return regeneratorRuntime.async(function agregarJugadoresEnLista$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              id_lista = req.params.id;\n              _context11.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListaInscripcion(id_lista));\n\n            case 4:\n              lista = _context11.sent;\n              jugadores = req.body;\n\n              if (!lista) {\n                _context11.next = 13;\n                break;\n              }\n\n              _context11.next = 9;\n              return regeneratorRuntime.awrap(_Jugador_integra_ListaService[\"default\"].agregarJugadoresEnLista(id_lista, jugadores));\n\n            case 9:\n              operacion = _context11.sent;\n\n              if (operacion) {\n                util.setSuccess(201, \"Jugadores a\\xF1adidos a la lista: \".concat(id_lista, \" \"), operacion);\n              } else {\n                util.setError(400, 'No se pudo completar la operación');\n              }\n\n              _context11.next = 14;\n              break;\n\n            case 13:\n              util.setError(404, 'No se encuentra lista de Inscripción');\n\n            case 14:\n              return _context11.abrupt(\"return\", util.send(res));\n\n            case 17:\n              _context11.prev = 17;\n              _context11.t0 = _context11[\"catch\"](0);\n              util.setError(400, _context11.t0.message);\n              return _context11.abrupt(\"return\", util.send(res));\n\n            case 21:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[0, 17]]);\n    }\n  }, {\n    key: \"eliminarJugadorEnLista\",\n    value: function eliminarJugadorEnLista(req, res) {\n      var id_lista, lista, dni_jugador, operacion;\n      return regeneratorRuntime.async(function eliminarJugadorEnLista$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              id_lista = req.params.id;\n              _context12.next = 4;\n              return regeneratorRuntime.awrap(_ListaInscripcionService[\"default\"].obtenerListaInscripcion(id_lista));\n\n            case 4:\n              lista = _context12.sent;\n              dni_jugador = req.params.dni_jugador;\n\n              if (!lista) {\n                _context12.next = 13;\n                break;\n              }\n\n              _context12.next = 9;\n              return regeneratorRuntime.awrap(_Jugador_integra_ListaService[\"default\"].eliminarJugadorEnLista(id_lista, dni_jugador));\n\n            case 9:\n              operacion = _context12.sent;\n\n              if (operacion) {\n                util.setSuccess(201, \"Jugador eliminado de la lista: \".concat(id_lista, \" \"), operacion);\n              } else {\n                util.setError(400, 'No se pudo completar la operación (jugador no se encontraba en la lista)');\n              }\n\n              _context12.next = 14;\n              break;\n\n            case 13:\n              util.setError(404, 'No se encuentra lista de Inscripción');\n\n            case 14:\n              return _context12.abrupt(\"return\", util.send(res));\n\n            case 17:\n              _context12.prev = 17;\n              _context12.t0 = _context12[\"catch\"](0);\n              util.setError(400, _context12.t0.message);\n              return _context12.abrupt(\"return\", util.send(res));\n\n            case 21:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, [[0, 17]]);\n    }\n  }]);\n\n  return ListaInscripcionController;\n}();\n\nvar _default = ListaInscripcionController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "listaInscripcion.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "ListaInscripcionController",
        "req",
        "res",
        "nuevaListaInscripcion",
        "body",
        "ListaInscripcionService",
        "agregarListaInscripcion",
        "ListaInscripcionCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerListasInscripcion",
        "listasInscripcion",
        "length",
        "id_lista",
        "params",
        "id",
        "obtenerListaInscripcion",
        "listaInscripcion",
        "id_listaInscripcion",
        "actualizarListaInscripcion",
        "listaInscripcionActualizada",
        "eliminarListaInscripcion",
        "listaEliminada",
        "console",
        "log",
        "lista",
        "getCapitan",
        "capitan",
        "dataValues",
        "getDelegado",
        "delegado",
        "getSubDelegado",
        "subdelegado",
        "anio_torneo",
        "tipo_torneo",
        "obtenerTorneo",
        "torneo",
        "obtenerJugadores",
        "jugadores",
        "Jugador_integra_ListaService",
        "agregarJugadoresEnLista",
        "operacion",
        "dni_jugador",
        "eliminarJugadorEnLista"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,0B;;;;;;;;;0CACiCC,G,EAAKC,G;;;;;;;AAE1BC,cAAAA,qB,GAAwBF,GAAG,CAACG,I;;8CACGC,oCAAwBC,uBAAxB,CAAgDH,qBAAhD,C;;;AAA/BI,cAAAA,sB;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,0BAApB,EAA+CD,sBAA/C;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;6CAIuBD,G,EAAKC,G;;;;;;;;8CAEHG,oCAAwBO,wBAAxB,E;;;AAA1BC,cAAAA,iB;;AAEN,kBAAGA,iBAAiB,IAAIA,iBAAiB,CAACC,MAAlB,GAA2B,CAAnD,EAAqD;AACjDhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iCAApB,EAAsDK,iBAAtD;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,wCAAlB;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;4CAIsBD,G,EAAKC,G;;;;;;;AAE5Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACGZ,oCAAwBa,uBAAxB,CAAgDH,QAAhD,C;;;AAAzBI,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAqB;AACjB;;;;;AAKArB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,2BAApB,EAAgDW,gBAAhD;AAGH,eATD,MAUI;AACArB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;+CAIyBD,G,EAAKC,G;;;;;;;AAG/BkB,cAAAA,mB,GAAsBnB,GAAG,CAACe,MAAJ,CAAWC,E;AACjCE,cAAAA,gB,GAAmBlB,GAAG,CAACG,I;;8CACaC,oCAAwBgB,0BAAxB,CAAmDD,mBAAnD,EAAuED,gBAAvE,C;;;AAApCG,cAAAA,2B;;AAEN,kBAAGA,2BAAH,EAA+B;AAC3BxB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,+BAApB,EAAoDc,2BAApD;AACH,eAFD,MAGI;AACAxB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDAEMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;6CAIuBD,G,EAAKC,G;;;;;;;AAE7Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACAZ,oCAAwBkB,wBAAxB,CAAiDR,QAAjD,C;;;AAAtBS,cAAAA,c;;AAEN,kBAAGA,cAAH,EAAmB;AACf1B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,4BAApB;AACH,eAFD,MAGI;AACAiB,gBAAAA,OAAO,CAACC,GAAR;AACA5B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIayB,K;;;;;;;;8CAEGA,KAAK,CAACC,UAAN,E;;;AAAjBC,cAAAA,O;gDACCA,OAAO,CAACC,U;;;;;;;;;;;;;;;;oCAMMH,K;;;;;;;;8CAEEA,KAAK,CAACI,WAAN,E;;;AAAjBC,cAAAA,Q;gDACCA,QAAQ,CAACF,U;;;;;;;;;;;;;;;;uCAMQH,K;;;;;;;;8CAEGA,KAAK,CAACM,cAAN,E;;;AAArBC,cAAAA,W;gDACCA,WAAW,CAACJ,U;;;;;;;;;;;;;;;;kCAOAK,W,EAAaC,W;;;;;;;;8CAEV/B,oCAAwBgC,aAAxB,CAAsCF,WAAtC,EAAkDC,WAAlD,C;;;AAAhBE,cAAAA,M;gDACCA,M;;;;;;;;;;;;;;;;qCAOerC,G,EAAIC,G;;;;;;AACxBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;;8CAGAZ,oCAAwBkC,gBAAxB,CAAyCxB,QAAzC,C;;;AAAlByB,cAAAA,S;;AACN,kBAAGA,SAAH,EAAa;AACT1C,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,oCAA+CO,QAA/C,mBAAsEyB,SAAtE;AACH,eAFD,MAGI;AACA1C,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;iDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;;;4CAOsBD,G,EAAIC,G;;;;;;;AAE3Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACRZ,oCAAwBa,uBAAxB,CAAgDH,QAAhD,C;;;AAAdY,cAAAA,K;AACAa,cAAAA,S,GAAYvC,GAAG,CAACG,I;;mBAElBuB,K;;;;;;8CACwBc,yCAA6BC,uBAA7B,CAAqD3B,QAArD,EAA8DyB,SAA9D,C;;;AAAlBG,cAAAA,S;;AACN,kBAAIA,SAAJ,EAAc;AACV7C,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,8CAAsDO,QAAtD,QAAkE4B,SAAlE;AACH,eAFD,MAII;AACA7C,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,mCAAlB;AACH;;;;;;AAGDZ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,sCAAlB;;;iDAEGZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;2CAIqBD,G,EAAKC,G;;;;;;;AAE3Ba,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACRZ,oCAAwBa,uBAAxB,CAAgDH,QAAhD,C;;;AAAdY,cAAAA,K;AACAiB,cAAAA,W,GAAc3C,GAAG,CAACe,MAAJ,CAAW4B,W;;mBAE3BjB,K;;;;;;8CACwBc,yCAA6BI,sBAA7B,CAAoD9B,QAApD,EAA6D6B,WAA7D,C;;;AAAlBD,cAAAA,S;;AACN,kBAAIA,SAAJ,EAAc;AACV7C,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,2CAAsDO,QAAtD,QAAmE4B,SAAnE;AACH,eAFD,MAGI;AACA7C,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,0EAAlB;AACH;;;;;;AAGDZ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,sCAAlB;;;iDAEGZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,cAAMC,OAAxB;iDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,0B",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import ListaInscripcionService from '../services/ListaInscripcionService';\r\nimport Util from '../utils/Utils';\r\nimport Jugador_integra_ListaService from '../services/Jugador_integra_ListaService';\r\nimport ListaInscripcion from '../models/ListaInscripcion';\r\n\r\nconst util = new Util();\r\n\r\nclass ListaInscripcionController {\r\n    static async crearListaInscripcion(req, res) {    \r\n        try {    \r\n            const nuevaListaInscripcion = req.body;\r\n            const ListaInscripcionCreada = await ListaInscripcionService.agregarListaInscripcion(nuevaListaInscripcion);\r\n\r\n            util.setSuccess(201,'ListaInscripcion añadida',ListaInscripcionCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerListasInscripcion(req, res){\r\n        try {\r\n            const listasInscripcion = await ListaInscripcionService.obtenerListasInscripcion();\r\n            \r\n            if(listasInscripcion && listasInscripcion.length > 0){\r\n                util.setSuccess(200,'Listas de Inscripción obtenidas',listasInscripcion);\r\n            }\r\n            else{\r\n                util.setError(404,'No se encuentran Listas de Inscripción'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerListaInscripcion(req, res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const listaInscripcion = await ListaInscripcionService.obtenerListaInscripcion(id_lista);\r\n\r\n            if(listaInscripcion) {\r\n                /*const equipo = await listaInscripcion.getEquipo();\r\n                console.log(\"Información del equipo de la lista: \",equipo.dataValues);\r\n                \r\n                const torneo = await ListaInscripcionService.obtenerTorneo(listaInscripcion.anio_torneo,listaInscripcion.tipo_torneo);\r\n                console.log(\"Información del torneo de la lista: \",torneo);  */\r\n                util.setSuccess(200,'ListaInscripcion obtenida',listaInscripcion);\r\n\r\n                \r\n            }\r\n            else{\r\n                util.setError(404,`ListaInscripcion no encontrada`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async actualizarListaInscripcion(req, res){\r\n\r\n        try {\r\n            const id_listaInscripcion = req.params.id;\r\n            const listaInscripcion = req.body;\r\n            const listaInscripcionActualizada = await ListaInscripcionService.actualizarListaInscripcion(id_listaInscripcion,listaInscripcion);\r\n\r\n            if(listaInscripcionActualizada){\r\n                util.setSuccess(200,'Lista inscripción actualizada',listaInscripcionActualizada);\r\n            }\r\n            else{\r\n                util.setError(404,`ListaInscripcion no encontrada `);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n    \r\n    static async eliminarListaInscripcion(req, res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const listaEliminada= await ListaInscripcionService.eliminarListaInscripcion(id_lista);\r\n\r\n            if(listaEliminada) {\r\n                util.setSuccess(200,'ListaInscripcion eliminada');\r\n            }\r\n            else{\r\n                console.log()\r\n                util.setError(404,`ListaInscripcion no se pudo eliminar`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerCapitan(lista){\r\n        try {\r\n            const capitan =  await lista.getCapitan();\r\n            return capitan.dataValues;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    static async obtenerDelegado(lista){\r\n        try {\r\n            const delegado = await lista.getDelegado();\r\n            return delegado.dataValues;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    static async obtenerSubDelegado(lista){\r\n        try {\r\n            const subdelegado =  await lista.getSubDelegado();\r\n            return subdelegado.dataValues;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async obtenerTorneo(anio_torneo, tipo_torneo){\r\n        try {\r\n            const torneo =  await ListaInscripcionService.obtenerTorneo(anio_torneo,tipo_torneo);\r\n            return torneo;\r\n        } \r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async obtenerJugadores(req,res){\r\n        const id_lista = req.params.id;\r\n\r\n        try {\r\n            const jugadores = await ListaInscripcionService.obtenerJugadores(id_lista);\r\n            if(jugadores){\r\n                util.setSuccess(200,`Jugadores de la lista: '${id_lista}'  obtenidos`,jugadores);\r\n            }\r\n            else{\r\n                util.setError(404,`Jugadores no encontrados`);\r\n            }\r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async agregarJugadoresEnLista(req,res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const lista = await ListaInscripcionService.obtenerListaInscripcion(id_lista);\r\n            const jugadores = req.body;\r\n\r\n            if (lista){\r\n                const operacion = await Jugador_integra_ListaService.agregarJugadoresEnLista(id_lista,jugadores);\r\n                if (operacion){\r\n                    util.setSuccess(201,`Jugadores añadidos a la lista: ${id_lista} `,operacion);\r\n                }\r\n\r\n                else{\r\n                    util.setError(400,'No se pudo completar la operación'); \r\n                }\r\n            }\r\n            else{\r\n                util.setError(404,'No se encuentra lista de Inscripción'); \r\n            }\r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async eliminarJugadorEnLista(req, res){\r\n        try {\r\n            const id_lista = req.params.id;\r\n            const lista = await ListaInscripcionService.obtenerListaInscripcion(id_lista);\r\n            const dni_jugador = req.params.dni_jugador;\r\n\r\n            if (lista){\r\n                const operacion = await Jugador_integra_ListaService.eliminarJugadorEnLista(id_lista,dni_jugador);\r\n                if (operacion){\r\n                    util.setSuccess(201,`Jugador eliminado de la lista: ${id_lista} `, operacion);\r\n                }\r\n                else{\r\n                    util.setError(400,'No se pudo completar la operación (jugador no se encontraba en la lista)'); \r\n                }\r\n            }\r\n            else{\r\n                util.setError(404,'No se encuentra lista de Inscripción'); \r\n            }\r\n            return util.send(res);\r\n\r\n        } catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\nexport default ListaInscripcionController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616562036928
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\ListaInscripcionService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\ListaInscripcionService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\ListaInscripcionService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\ListaInscripcionService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "ListaInscripcionService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"../models/ListaInscripcion\"));\n\nvar _Torneo = _interopRequireDefault(require(\"../models/Torneo\"));\n\nvar _Jugador_integra_Lista = _interopRequireDefault(require(\"../models/Jugador_integra_Lista\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ListaInscripcionService =\n/*#__PURE__*/\nfunction () {\n  function ListaInscripcionService() {\n    _classCallCheck(this, ListaInscripcionService);\n  }\n\n  _createClass(ListaInscripcionService, null, [{\n    key: \"agregarListaInscripcion\",\n    value: function agregarListaInscripcion(nuevaListaInscripcion) {\n      return regeneratorRuntime.async(function agregarListaInscripcion$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].create(nuevaListaInscripcion));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerListasInscripcion\",\n    value: function obtenerListasInscripcion() {\n      return regeneratorRuntime.async(function obtenerListasInscripcion$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findAll());\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    }\n  }, {\n    key: \"obtenerListaInscripcion\",\n    value: function obtenerListaInscripcion(id_lista) {\n      var lista;\n      return regeneratorRuntime.async(function obtenerListaInscripcion$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              lista = _context3.sent;\n              return _context3.abrupt(\"return\", lista);\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"actualizarListaInscripcion\",\n    value: function actualizarListaInscripcion(id_lista, lista) {\n      var listaExistente;\n      return regeneratorRuntime.async(function actualizarListaInscripcion$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              listaExistente = _context4.sent;\n\n              if (!listaExistente) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.next = 7;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].update(lista, {\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 7:\n              return _context4.abrupt(\"return\", lista);\n\n            case 10:\n              return _context4.abrupt(\"return\", null);\n\n            case 11:\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 13]]);\n    }\n  }, {\n    key: \"eliminarListaInscripcion\",\n    value: function eliminarListaInscripcion(id_lista) {\n      var listaExistente, listaEliminada;\n      return regeneratorRuntime.async(function eliminarListaInscripcion$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              listaExistente = _context5.sent;\n\n              if (!listaExistente) {\n                _context5.next = 13;\n                break;\n              }\n\n              _context5.next = 7;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].destroy({\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 7:\n              _context5.next = 9;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].destroy({\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 9:\n              listaEliminada = _context5.sent;\n              return _context5.abrupt(\"return\", listaEliminada);\n\n            case 13:\n              return _context5.abrupt(\"return\", null);\n\n            case 14:\n              _context5.next = 19;\n              break;\n\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 16]]);\n    }\n  }, {\n    key: \"obtenerTorneo\",\n    value: function obtenerTorneo(anio_torneo, tipo_torneo) {\n      var torneo;\n      return regeneratorRuntime.async(function obtenerTorneo$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return regeneratorRuntime.awrap(_Torneo[\"default\"].findOne({\n                where: {\n                  anio: anio_torneo,\n                  tipo: tipo_torneo\n                }\n              }));\n\n            case 3:\n              torneo = _context6.sent;\n              return _context6.abrupt(\"return\", torneo.dataValues);\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    }\n  }, {\n    key: \"obtenerJugadores\",\n    value: function obtenerJugadores(id_lista) {\n      var lista, jugadores;\n      return regeneratorRuntime.async(function obtenerJugadores$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return regeneratorRuntime.awrap(_ListaInscripcion[\"default\"].findByPk(id_lista));\n\n            case 3:\n              lista = _context7.sent;\n\n              if (!lista) {\n                _context7.next = 9;\n                break;\n              }\n\n              _context7.next = 7;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].findAll({\n                raw: true,\n                where: {\n                  id_lista: id_lista\n                }\n              }));\n\n            case 7:\n              jugadores = _context7.sent;\n              return _context7.abrupt(\"return\", jugadores);\n\n            case 9:\n              _context7.next = 14;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }]);\n\n  return ListaInscripcionService;\n}();\n\nvar _default = ListaInscripcionService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RhSW5zY3JpcGNpb25TZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIkxpc3RhSW5zY3JpcGNpb25TZXJ2aWNlIiwibnVldmFMaXN0YUluc2NyaXBjaW9uIiwiTGlzdGFJbnNjcmlwY2lvbiIsImNyZWF0ZSIsImZpbmRBbGwiLCJpZF9saXN0YSIsImZpbmRCeVBrIiwibGlzdGEiLCJsaXN0YUV4aXN0ZW50ZSIsInVwZGF0ZSIsIndoZXJlIiwiSnVnYWRvcl9pbnRlZ3JhX0xpc3RhIiwiZGVzdHJveSIsImxpc3RhRWxpbWluYWRhIiwiYW5pb190b3JuZW8iLCJ0aXBvX3Rvcm5lbyIsIlRvcm5lbyIsImZpbmRPbmUiLCJhbmlvIiwidGlwbyIsInRvcm5lbyIsImRhdGFWYWx1ZXMiLCJyYXciLCJqdWdhZG9yZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7OztJQUVNQSx1Qjs7Ozs7Ozs7OzRDQUNtQ0MscUI7Ozs7Ozs7OENBRXBCQyw2QkFBaUJDLE1BQWpCLENBQXdCRixxQkFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OENBUUFDLDZCQUFpQkUsT0FBakIsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0Q0FRb0JDLFE7Ozs7Ozs7OzhDQUViSCw2QkFBaUJJLFFBQWpCLENBQTBCRCxRQUExQixDOzs7QUFBZEUsY0FBQUEsSztnREFDQ0EsSzs7Ozs7Ozs7Ozs7Ozs7OzsrQ0FPNkJGLFEsRUFBU0UsSzs7Ozs7Ozs7OENBRWhCTCw2QkFBaUJJLFFBQWpCLENBQTBCRCxRQUExQixDOzs7QUFBdkJHLGNBQUFBLGM7O21CQUVIQSxjOzs7Ozs7OENBQ0tOLDZCQUFpQk8sTUFBakIsQ0FBd0JGLEtBQXhCLEVBQThCO0FBQUNHLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLFFBQVEsRUFBQ0E7QUFBVjtBQUFQLGVBQTlCLEM7OztnREFDQ0UsSzs7O2dEQUdBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZDQVEyQkYsUTs7Ozs7Ozs7OENBRUxILDZCQUFpQkksUUFBakIsQ0FBMEJELFFBQTFCLEM7OztBQUF2QkcsY0FBQUEsYzs7bUJBQ0hBLGM7Ozs7Ozs4Q0FDS0csa0NBQXNCQyxPQUF0QixDQUE4QjtBQUFDRixnQkFBQUEsS0FBSyxFQUFDO0FBQUNMLGtCQUFBQSxRQUFRLEVBQUNBO0FBQVY7QUFBUCxlQUE5QixDOzs7OzhDQUN1QkgsNkJBQWlCVSxPQUFqQixDQUF5QjtBQUFDRixnQkFBQUEsS0FBSyxFQUFDO0FBQUNMLGtCQUFBQSxRQUFRLEVBQUNBO0FBQVY7QUFBUCxlQUF6QixDOzs7QUFBdkJRLGNBQUFBLGM7Z0RBQ0NBLGM7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQ0FRY0MsVyxFQUFZQyxXOzs7Ozs7Ozs4Q0FFZEMsbUJBQU9DLE9BQVAsQ0FBZTtBQUFDUCxnQkFBQUEsS0FBSyxFQUFDO0FBQUNRLGtCQUFBQSxJQUFJLEVBQUNKLFdBQU47QUFBa0JLLGtCQUFBQSxJQUFJLEVBQUNKO0FBQXZCO0FBQVAsZUFBZixDOzs7QUFBZkssY0FBQUEsTTtnREFDQ0EsTUFBTSxDQUFDQyxVOzs7Ozs7Ozs7Ozs7Ozs7O3FDQU9ZaEIsUTs7Ozs7Ozs7OENBRU5ILDZCQUFpQkksUUFBakIsQ0FBMEJELFFBQTFCLEM7OztBQUFkRSxjQUFBQSxLOzttQkFFRkEsSzs7Ozs7OzhDQUNzQkksa0NBQXNCUCxPQUF0QixDQUE4QjtBQUFDa0IsZ0JBQUFBLEdBQUcsRUFBQyxJQUFMO0FBQVVaLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ0wsa0JBQUFBLFFBQVEsRUFBQ0E7QUFBVjtBQUFoQixlQUE5QixDOzs7QUFBbEJrQixjQUFBQSxTO2dEQUdDQSxTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQVVGdkIsdUIiLCJzb3VyY2VSb290IjoiRDpcXHhhbXBwMlxcaHRkb2NzXFxhcGktZnV0c2FsXFxzcmNcXHNlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpc3RhSW5zY3JpcGNpb24gZnJvbSAnLi4vbW9kZWxzL0xpc3RhSW5zY3JpcGNpb24nO1xyXG5cclxuaW1wb3J0IFRvcm5lbyBmcm9tICcuLi9tb2RlbHMvVG9ybmVvJztcclxuaW1wb3J0IEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YSBmcm9tICcuLi9tb2RlbHMvSnVnYWRvcl9pbnRlZ3JhX0xpc3RhJztcclxuXHJcbmNsYXNzIExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlIHsgXHJcbiAgICBzdGF0aWMgYXN5bmMgYWdyZWdhckxpc3RhSW5zY3JpcGNpb24obnVldmFMaXN0YUluc2NyaXBjaW9uKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IExpc3RhSW5zY3JpcGNpb24uY3JlYXRlKG51ZXZhTGlzdGFJbnNjcmlwY2lvbik7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckxpc3Rhc0luc2NyaXBjaW9uKCl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IExpc3RhSW5zY3JpcGNpb24uZmluZEFsbCgpO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjsgICBcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb2J0ZW5lckxpc3RhSW5zY3JpcGNpb24oaWRfbGlzdGEpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGxpc3RhID0gYXdhaXQgTGlzdGFJbnNjcmlwY2lvbi5maW5kQnlQayhpZF9saXN0YSk7XHJcbiAgICAgICAgcmV0dXJuIGxpc3RhO1xyXG4gICAgICB9IFxyXG4gICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjsgICBcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFyTGlzdGFJbnNjcmlwY2lvbihpZF9saXN0YSxsaXN0YSl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgbGlzdGFFeGlzdGVudGUgPSBhd2FpdCBMaXN0YUluc2NyaXBjaW9uLmZpbmRCeVBrKGlkX2xpc3RhKTtcclxuXHJcbiAgICAgICAgaWYobGlzdGFFeGlzdGVudGUpe1xyXG4gICAgICAgICAgYXdhaXQgTGlzdGFJbnNjcmlwY2lvbi51cGRhdGUobGlzdGEse3doZXJlOntpZF9saXN0YTppZF9saXN0YX19KTtcclxuICAgICAgICAgIHJldHVybiBsaXN0YTsgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN0YXRpYyBhc3luYyBlbGltaW5hckxpc3RhSW5zY3JpcGNpb24oaWRfbGlzdGEpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCBsaXN0YUV4aXN0ZW50ZSA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb24uZmluZEJ5UGsoaWRfbGlzdGEpO1xyXG4gICAgICAgICAgaWYobGlzdGFFeGlzdGVudGUpe1xyXG4gICAgICAgICAgICBhd2FpdCBKdWdhZG9yX2ludGVncmFfTGlzdGEuZGVzdHJveSh7d2hlcmU6e2lkX2xpc3RhOmlkX2xpc3RhfX0pOyAvL2VsaW1pbmFtb3MgbGEgbGlzdGEgZGUganVnYWRvcmVzXHJcbiAgICAgICAgICAgIGNvbnN0IGxpc3RhRWxpbWluYWRhID0gYXdhaXQgTGlzdGFJbnNjcmlwY2lvbi5kZXN0cm95KHt3aGVyZTp7aWRfbGlzdGE6aWRfbGlzdGF9fSk7XHJcbiAgICAgICAgICAgIHJldHVybiBsaXN0YUVsaW1pbmFkYTsgXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN0YXRpYyBhc3luYyBvYnRlbmVyVG9ybmVvKGFuaW9fdG9ybmVvLHRpcG9fdG9ybmVvKXtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgY29uc3QgdG9ybmVvID0gYXdhaXQgVG9ybmVvLmZpbmRPbmUoe3doZXJlOnthbmlvOmFuaW9fdG9ybmVvLHRpcG86dGlwb190b3JuZW99fSk7XHJcbiAgICAgICAgICByZXR1cm4gdG9ybmVvLmRhdGFWYWx1ZXM7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHRocm93IGVycm9yOyAgIFxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgc3RhdGljIGFzeW5jIG9idGVuZXJKdWdhZG9yZXMoaWRfbGlzdGEpe1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCBsaXN0YSA9IGF3YWl0IExpc3RhSW5zY3JpcGNpb24uZmluZEJ5UGsoaWRfbGlzdGEpO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBpZiAobGlzdGEpe1xyXG4gICAgICAgICAgICBjb25zdCBqdWdhZG9yZXMgPSBhd2FpdCBKdWdhZG9yX2ludGVncmFfTGlzdGEuZmluZEFsbCh7cmF3OnRydWUsd2hlcmU6e2lkX2xpc3RhOmlkX2xpc3RhfX0pO1xyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiSnVnYWRvcmVzIGRlIGxhIGxpc3RhXCIsIGp1Z2Fkb3Jlcyk7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4ganVnYWRvcmVzO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbn0gXHJcblxyXG4gIGV4cG9ydCBkZWZhdWx0IExpc3RhSW5zY3JpcGNpb25TZXJ2aWNlO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ListaInscripcionService.js"
      ],
      "names": [
        "ListaInscripcionService",
        "nuevaListaInscripcion",
        "ListaInscripcion",
        "create",
        "findAll",
        "id_lista",
        "findByPk",
        "lista",
        "listaExistente",
        "update",
        "where",
        "Jugador_integra_Lista",
        "destroy",
        "listaEliminada",
        "anio_torneo",
        "tipo_torneo",
        "Torneo",
        "findOne",
        "anio",
        "tipo",
        "torneo",
        "dataValues",
        "raw",
        "jugadores"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;IAEMA,uB;;;;;;;;;4CACmCC,qB;;;;;;;8CAEpBC,6BAAiBC,MAAjB,CAAwBF,qBAAxB,C;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQAC,6BAAiBE,OAAjB,E;;;;;;;;;;;;;;;;;;;4CAQoBC,Q;;;;;;;;8CAEbH,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAdE,cAAAA,K;gDACCA,K;;;;;;;;;;;;;;;;+CAO6BF,Q,EAASE,K;;;;;;;;8CAEhBL,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAvBG,cAAAA,c;;mBAEHA,c;;;;;;8CACKN,6BAAiBO,MAAjB,CAAwBF,KAAxB,EAA8B;AAACG,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAA9B,C;;;gDACCE,K;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;6CAQ2BF,Q;;;;;;;;8CAELH,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAvBG,cAAAA,c;;mBACHA,c;;;;;;8CACKG,kCAAsBC,OAAtB,CAA8B;AAACF,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAA9B,C;;;;8CACuBH,6BAAiBU,OAAjB,CAAyB;AAACF,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAP,eAAzB,C;;;AAAvBQ,cAAAA,c;gDACCA,c;;;gDAGA,I;;;;;;;;;;;;;;;;;;;;kCAQcC,W,EAAYC,W;;;;;;;;8CAEdC,mBAAOC,OAAP,CAAe;AAACP,gBAAAA,KAAK,EAAC;AAACQ,kBAAAA,IAAI,EAACJ,WAAN;AAAkBK,kBAAAA,IAAI,EAACJ;AAAvB;AAAP,eAAf,C;;;AAAfK,cAAAA,M;gDACCA,MAAM,CAACC,U;;;;;;;;;;;;;;;;qCAOYhB,Q;;;;;;;;8CAENH,6BAAiBI,QAAjB,CAA0BD,QAA1B,C;;;AAAdE,cAAAA,K;;mBAEFA,K;;;;;;8CACsBI,kCAAsBP,OAAtB,CAA8B;AAACkB,gBAAAA,GAAG,EAAC,IAAL;AAAUZ,gBAAAA,KAAK,EAAC;AAACL,kBAAAA,QAAQ,EAACA;AAAV;AAAhB,eAA9B,C;;;AAAlBkB,cAAAA,S;gDAGCA,S;;;;;;;;;;;;;;;;;;;;;;;eAUFvB,uB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import ListaInscripcion from '../models/ListaInscripcion';\r\n\r\nimport Torneo from '../models/Torneo';\r\nimport Jugador_integra_Lista from '../models/Jugador_integra_Lista';\r\n\r\nclass ListaInscripcionService { \r\n    static async agregarListaInscripcion(nuevaListaInscripcion) {\r\n      try {\r\n        return await ListaInscripcion.create(nuevaListaInscripcion);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    static async obtenerListasInscripcion(){\r\n      try {\r\n        return await ListaInscripcion.findAll();\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n\r\n    static async obtenerListaInscripcion(id_lista){\r\n      try {\r\n        const lista = await ListaInscripcion.findByPk(id_lista);\r\n        return lista;\r\n      } \r\n      catch (error) {\r\n        throw error;   \r\n      }\r\n    }\r\n\r\n    static async actualizarListaInscripcion(id_lista,lista){\r\n      try {\r\n        const listaExistente = await ListaInscripcion.findByPk(id_lista);\r\n\r\n        if(listaExistente){\r\n          await ListaInscripcion.update(lista,{where:{id_lista:id_lista}});\r\n          return lista; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n\r\n      static async eliminarListaInscripcion(id_lista){\r\n        try {\r\n          const listaExistente = await ListaInscripcion.findByPk(id_lista);\r\n          if(listaExistente){\r\n            await Jugador_integra_Lista.destroy({where:{id_lista:id_lista}}); //eliminamos la lista de jugadores\r\n            const listaEliminada = await ListaInscripcion.destroy({where:{id_lista:id_lista}});\r\n            return listaEliminada; \r\n          }\r\n          else{\r\n            return null;\r\n          }\r\n        }\r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n      static async obtenerTorneo(anio_torneo,tipo_torneo){\r\n        try {\r\n          const torneo = await Torneo.findOne({where:{anio:anio_torneo,tipo:tipo_torneo}});\r\n          return torneo.dataValues;\r\n        } \r\n        catch (error) {\r\n          throw error;   \r\n        }\r\n      }\r\n\r\n      static async obtenerJugadores(id_lista){\r\n        try {\r\n          const lista = await ListaInscripcion.findByPk(id_lista);\r\n          \r\n          if (lista){\r\n            const jugadores = await Jugador_integra_Lista.findAll({raw:true,where:{id_lista:id_lista}});\r\n            //console.log(\"Jugadores de la lista\", jugadores);\r\n\r\n            return jugadores;\r\n          }\r\n        } \r\n        catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n\r\n} \r\n\r\n  export default ListaInscripcionService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583882142514
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\services\\\\Jugador_integra_ListaService.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\Jugador_integra_ListaService.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\Jugador_integra_ListaService.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\services\\Jugador_integra_ListaService.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
        "sourceFileName": "Jugador_integra_ListaService.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Jugador = _interopRequireDefault(require(\"../models/Jugador\"));\n\nvar _Jugador_integra_Lista = _interopRequireDefault(require(\"../models/Jugador_integra_Lista\"));\n\nvar _ListaInscripcion = _interopRequireDefault(require(\"../models/ListaInscripcion\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Jugador_integra_ListaService =\n/*#__PURE__*/\nfunction () {\n  function Jugador_integra_ListaService() {\n    _classCallCheck(this, Jugador_integra_ListaService);\n  }\n\n  _createClass(Jugador_integra_ListaService, null, [{\n    key: \"agregarJugadoresEnLista\",\n    value: function agregarJugadoresEnLista(id_lista, jugadores) {\n      var jugadores_lista, i, jugador, dni, operacion;\n      return regeneratorRuntime.async(function agregarJugadoresEnLista$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //recibe una lista de jugadores \n              jugadores_lista = [];\n\n              for (i in jugadores) {\n                jugador = jugadores[i];\n                dni = jugador.dni_jugador;\n                jugadores_lista.push({\n                  dni_jugador: dni,\n                  id_lista: id_lista\n                }); //creamos las tuplas (dni_jugador, id_lista);\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].bulkCreate(jugadores_lista, {\n                returning: true\n              }));\n\n            case 5:\n              operacion = _context.sent;\n              return _context.abrupt(\"return\", operacion);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              throw new Error(_context.t0.message + _context.t0.parent.detail);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 9]]);\n    }\n  }, {\n    key: \"eliminarJugadorEnLista\",\n    value: function eliminarJugadorEnLista(id_lista, dni_jugador) {\n      var jugadorEliminado;\n      return regeneratorRuntime.async(function eliminarJugadorEnLista$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_Jugador_integra_Lista[\"default\"].destroy({\n                where: {\n                  id_lista: id_lista,\n                  dni_jugador: dni_jugador\n                }\n              }));\n\n            case 3:\n              jugadorEliminado = _context2.sent;\n\n              if (!jugadorEliminado) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", jugadorEliminado);\n\n            case 8:\n              return _context2.abrupt(\"return\", null);\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n    /*    static async obtenerJugador(dni){\r\n          try {\r\n            const jugador = await Jugador.findByPk(dni);\r\n            return jugador; \r\n          }\r\n           catch (error) {\r\n             throw error;\r\n            }\r\n          }\r\n        \r\n        static async actualizarJugador(dni,jugador){\r\n          try {\r\n            const jugadorExistente = await Jugador.findByPk(dni);\r\n    \r\n            if(jugadorExistente){\r\n              await Jugador.update(jugador,{where:{dni:dni}});\r\n              return jugador; \r\n            }\r\n            else{\r\n              return null;\r\n            }\r\n          }\r\n           catch (error) {\r\n             throw error;\r\n            }\r\n          }\r\n          \r\n        static async eliminarJugador(dni){\r\n          try {\r\n            const jugadorExistente = await Jugador.findByPk(dni);\r\n    \r\n            if(jugadorExistente){\r\n              const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n              return jugadorEliminado; \r\n            }\r\n            else{\r\n              return null;\r\n            }\r\n          }\r\n          catch (error) {\r\n            throw error;\r\n          }\r\n        } */\n\n  }]);\n\n  return Jugador_integra_ListaService;\n}();\n\nvar _default = Jugador_integra_ListaService;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkp1Z2Fkb3JfaW50ZWdyYV9MaXN0YVNlcnZpY2UuanMiXSwibmFtZXMiOlsiSnVnYWRvcl9pbnRlZ3JhX0xpc3RhU2VydmljZSIsImlkX2xpc3RhIiwianVnYWRvcmVzIiwianVnYWRvcmVzX2xpc3RhIiwiaSIsImp1Z2Fkb3IiLCJkbmkiLCJkbmlfanVnYWRvciIsInB1c2giLCJKdWdhZG9yX2ludGVncmFfTGlzdGEiLCJidWxrQ3JlYXRlIiwicmV0dXJuaW5nIiwib3BlcmFjaW9uIiwiRXJyb3IiLCJtZXNzYWdlIiwicGFyZW50IiwiZGV0YWlsIiwiZGVzdHJveSIsIndoZXJlIiwianVnYWRvckVsaW1pbmFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7O0lBRU1BLDRCOzs7Ozs7Ozs7NENBQ21DQyxRLEVBQVNDLFM7Ozs7OztBQUFnQjtBQUN0REMsY0FBQUEsZSxHQUFrQixFOztBQUN6QixtQkFBU0MsQ0FBVCxJQUFjRixTQUFkLEVBQXdCO0FBQ2hCRyxnQkFBQUEsT0FEZ0IsR0FDTkgsU0FBUyxDQUFDRSxDQUFELENBREg7QUFFaEJFLGdCQUFBQSxHQUZnQixHQUVWRCxPQUFPLENBQUNFLFdBRkU7QUFHdEJKLGdCQUFBQSxlQUFlLENBQUNLLElBQWhCLENBQXFCO0FBQUNELGtCQUFBQSxXQUFXLEVBQUNELEdBQWI7QUFBaUJMLGtCQUFBQSxRQUFRLEVBQUNBO0FBQTFCLGlCQUFyQixFQUhzQixDQUdxQztBQUMzRDs7Ozs4Q0FHdUJRLGtDQUFzQkMsVUFBdEIsQ0FBaUNQLGVBQWpDLEVBQWlEO0FBQUNRLGdCQUFBQSxTQUFTLEVBQUM7QUFBWCxlQUFqRCxDOzs7QUFBbEJDLGNBQUFBLFM7K0NBRUNBLFM7Ozs7O29CQUdELElBQUlDLEtBQUosQ0FBVSxZQUFNQyxPQUFOLEdBQWdCLFlBQU1DLE1BQU4sQ0FBYUMsTUFBdkMsQzs7Ozs7Ozs7Ozs7MkNBSTBCZixRLEVBQVVNLFc7Ozs7Ozs7OzhDQUVYRSxrQ0FBc0JRLE9BQXRCLENBQThCO0FBQUNDLGdCQUFBQSxLQUFLLEVBQUM7QUFBQ2pCLGtCQUFBQSxRQUFRLEVBQUNBLFFBQVY7QUFBbUJNLGtCQUFBQSxXQUFXLEVBQUNBO0FBQS9CO0FBQVAsZUFBOUIsQzs7O0FBQXpCWSxjQUFBQSxnQjs7bUJBQ0hBLGdCOzs7OztnREFDTUEsZ0I7OztnREFHQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFZZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQTZDaUJuQiw0QiIsInNvdXJjZVJvb3QiOiJEOlxceGFtcHAyXFxodGRvY3NcXGFwaS1mdXRzYWxcXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSnVnYWRvciBmcm9tICcuLi9tb2RlbHMvSnVnYWRvcic7XHJcbmltcG9ydCBKdWdhZG9yX2ludGVncmFfTGlzdGEgZnJvbSAnLi4vbW9kZWxzL0p1Z2Fkb3JfaW50ZWdyYV9MaXN0YSc7XHJcbmltcG9ydCBMaXN0YUluc2NyaXBjaW9uIGZyb20gJy4uL21vZGVscy9MaXN0YUluc2NyaXBjaW9uJztcclxuXHJcbmNsYXNzIEp1Z2Fkb3JfaW50ZWdyYV9MaXN0YVNlcnZpY2UgeyAgXHJcbiAgICBzdGF0aWMgYXN5bmMgYWdyZWdhckp1Z2Fkb3Jlc0VuTGlzdGEoaWRfbGlzdGEsanVnYWRvcmVzKSB7ICAgIC8vcmVjaWJlIHVuYSBsaXN0YSBkZSBqdWdhZG9yZXMgXHJcbiAgICAgIGNvbnN0IGp1Z2Fkb3Jlc19saXN0YSA9IFtdO1xyXG4gICAgIGZvciAodmFyIGkgaW4ganVnYWRvcmVzKXtcclxuICAgICAgIGNvbnN0IGp1Z2Fkb3IgPSBqdWdhZG9yZXNbaV07XHJcbiAgICAgICBjb25zdCBkbmkgPSBqdWdhZG9yLmRuaV9qdWdhZG9yO1xyXG4gICAgICAganVnYWRvcmVzX2xpc3RhLnB1c2goe2RuaV9qdWdhZG9yOmRuaSxpZF9saXN0YTppZF9saXN0YX0pOyAvL2NyZWFtb3MgbGFzIHR1cGxhcyAoZG5pX2p1Z2Fkb3IsIGlkX2xpc3RhKTtcclxuICAgICAgfVxyXG5cclxuICAgIHRyeXtcclxuICAgICAgY29uc3Qgb3BlcmFjaW9uID0gYXdhaXQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhLmJ1bGtDcmVhdGUoanVnYWRvcmVzX2xpc3RhLHtyZXR1cm5pbmc6dHJ1ZX0pO1xyXG4gICAgICAvL2FuZHV2byBvayEgZWwgdGVtYSBlcyBzaSBsYXMgdHVwbGFzIGxhIGFybW8gZGUgZXN0ZSBsYWRvIG8gdGllbmUgcXVlIHZlbmlyIGFzw60gZGVsIGZyb250LWVuZFxyXG4gICAgICByZXR1cm4gb3BlcmFjaW9uO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGVycm9yKXtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UgKyBlcnJvci5wYXJlbnQuZGV0YWlsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBlbGltaW5hckp1Z2Fkb3JFbkxpc3RhKGlkX2xpc3RhLCBkbmlfanVnYWRvcil7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBqdWdhZG9yRWxpbWluYWRvID0gYXdhaXQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhLmRlc3Ryb3koe3doZXJlOntpZF9saXN0YTppZF9saXN0YSxkbmlfanVnYWRvcjpkbmlfanVnYWRvcn19KTtcclxuICAgICAgaWYoanVnYWRvckVsaW1pbmFkbyl7XHJcbiAgICAgICAgcmV0dXJuIGp1Z2Fkb3JFbGltaW5hZG87XHJcbiAgICAgIH1cclxuICAgICAgZWxzZXtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxuICBcclxuXHJcbi8qICAgIHN0YXRpYyBhc3luYyBvYnRlbmVySnVnYWRvcihkbmkpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGp1Z2Fkb3IgPSBhd2FpdCBKdWdhZG9yLmZpbmRCeVBrKGRuaSk7XHJcbiAgICAgICAgcmV0dXJuIGp1Z2Fkb3I7IFxyXG4gICAgICB9XHJcbiAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBhY3R1YWxpemFySnVnYWRvcihkbmksanVnYWRvcil7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QganVnYWRvckV4aXN0ZW50ZSA9IGF3YWl0IEp1Z2Fkb3IuZmluZEJ5UGsoZG5pKTtcclxuXHJcbiAgICAgICAgaWYoanVnYWRvckV4aXN0ZW50ZSl7XHJcbiAgICAgICAgICBhd2FpdCBKdWdhZG9yLnVwZGF0ZShqdWdhZG9yLHt3aGVyZTp7ZG5pOmRuaX19KTtcclxuICAgICAgICAgIHJldHVybiBqdWdhZG9yOyBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBcclxuICAgIHN0YXRpYyBhc3luYyBlbGltaW5hckp1Z2Fkb3IoZG5pKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBqdWdhZG9yRXhpc3RlbnRlID0gYXdhaXQgSnVnYWRvci5maW5kQnlQayhkbmkpO1xyXG5cclxuICAgICAgICBpZihqdWdhZG9yRXhpc3RlbnRlKXtcclxuICAgICAgICAgIGNvbnN0IGp1Z2Fkb3JFbGltaW5hZG8gPSBhd2FpdCBKdWdhZG9yLmRlc3Ryb3koe3doZXJlOntkbmk6ZG5pfX0pO1xyXG4gICAgICAgICAgcmV0dXJuIGp1Z2Fkb3JFbGltaW5hZG87IFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9ICovXHJcbn0gXHJcbiAgXHJcbiAgZXhwb3J0IGRlZmF1bHQgSnVnYWRvcl9pbnRlZ3JhX0xpc3RhU2VydmljZTtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Jugador_integra_ListaService.js"
      ],
      "names": [
        "Jugador_integra_ListaService",
        "id_lista",
        "jugadores",
        "jugadores_lista",
        "i",
        "jugador",
        "dni",
        "dni_jugador",
        "push",
        "Jugador_integra_Lista",
        "bulkCreate",
        "returning",
        "operacion",
        "Error",
        "message",
        "parent",
        "detail",
        "destroy",
        "where",
        "jugadorEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEMA,4B;;;;;;;;;4CACmCC,Q,EAASC,S;;;;;;AAAgB;AACtDC,cAAAA,e,GAAkB,E;;AACzB,mBAASC,CAAT,IAAcF,SAAd,EAAwB;AAChBG,gBAAAA,OADgB,GACNH,SAAS,CAACE,CAAD,CADH;AAEhBE,gBAAAA,GAFgB,GAEVD,OAAO,CAACE,WAFE;AAGtBJ,gBAAAA,eAAe,CAACK,IAAhB,CAAqB;AAACD,kBAAAA,WAAW,EAACD,GAAb;AAAiBL,kBAAAA,QAAQ,EAACA;AAA1B,iBAArB,EAHsB,CAGqC;AAC3D;;;;8CAGuBQ,kCAAsBC,UAAtB,CAAiCP,eAAjC,EAAiD;AAACQ,gBAAAA,SAAS,EAAC;AAAX,eAAjD,C;;;AAAlBC,cAAAA,S;+CAECA,S;;;;;oBAGD,IAAIC,KAAJ,CAAU,YAAMC,OAAN,GAAgB,YAAMC,MAAN,CAAaC,MAAvC,C;;;;;;;;;;;2CAI0Bf,Q,EAAUM,W;;;;;;;;8CAEXE,kCAAsBQ,OAAtB,CAA8B;AAACC,gBAAAA,KAAK,EAAC;AAACjB,kBAAAA,QAAQ,EAACA,QAAV;AAAmBM,kBAAAA,WAAW,EAACA;AAA/B;AAAP,eAA9B,C;;;AAAzBY,cAAAA,gB;;mBACHA,gB;;;;;gDACMA,gB;;;gDAGA,I;;;;;;;;;;;;;;;;;;AAYf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA6CiBnB,4B",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\services",
      "sourcesContent": [
        "import Jugador from '../models/Jugador';\r\nimport Jugador_integra_Lista from '../models/Jugador_integra_Lista';\r\nimport ListaInscripcion from '../models/ListaInscripcion';\r\n\r\nclass Jugador_integra_ListaService {  \r\n    static async agregarJugadoresEnLista(id_lista,jugadores) {    //recibe una lista de jugadores \r\n      const jugadores_lista = [];\r\n     for (var i in jugadores){\r\n       const jugador = jugadores[i];\r\n       const dni = jugador.dni_jugador;\r\n       jugadores_lista.push({dni_jugador:dni,id_lista:id_lista}); //creamos las tuplas (dni_jugador, id_lista);\r\n      }\r\n\r\n    try{\r\n      const operacion = await Jugador_integra_Lista.bulkCreate(jugadores_lista,{returning:true});\r\n      //anduvo ok! el tema es si las tuplas la armo de este lado o tiene que venir así del front-end\r\n      return operacion;\r\n    }\r\n    catch (error){\r\n      throw new Error(error.message + error.parent.detail);\r\n    }\r\n  }\r\n\r\n  static async eliminarJugadorEnLista(id_lista, dni_jugador){\r\n    try {\r\n      const jugadorEliminado = await Jugador_integra_Lista.destroy({where:{id_lista:id_lista,dni_jugador:dni_jugador}});\r\n      if(jugadorEliminado){\r\n        return jugadorEliminado;\r\n      }\r\n      else{\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n/*    static async obtenerJugador(dni){\r\n      try {\r\n        const jugador = await Jugador.findByPk(dni);\r\n        return jugador; \r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n    \r\n    static async actualizarJugador(dni,jugador){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          await Jugador.update(jugador,{where:{dni:dni}});\r\n          return jugador; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n       catch (error) {\r\n         throw error;\r\n        }\r\n      }\r\n      \r\n    static async eliminarJugador(dni){\r\n      try {\r\n        const jugadorExistente = await Jugador.findByPk(dni);\r\n\r\n        if(jugadorExistente){\r\n          const jugadorEliminado = await Jugador.destroy({where:{dni:dni}});\r\n          return jugadorEliminado; \r\n        }\r\n        else{\r\n          return null;\r\n        }\r\n      }\r\n      catch (error) {\r\n        throw error;\r\n      }\r\n    } */\r\n} \r\n  \r\n  export default Jugador_integra_ListaService;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619047902071
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\tabla.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\tabla.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\tabla.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\tabla.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "tabla.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _tabla = _interopRequireDefault(require(\"../controllers/tabla.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.post('/', _tabla[\"default\"].crearTabla);\nrouter.get('/:id', _tabla[\"default\"].obtenerTabla);\nrouter.get('/', _tabla[\"default\"].obtenerTablas);\nrouter.put('/:id/resetear', _tabla[\"default\"].resetearTabla);\nrouter.put('/:id', _tabla[\"default\"].actualizarTabla);\nrouter[\"delete\"]('/:id', _tabla[\"default\"].eliminarTabla);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxhLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJUYWJsYUNvbnRyb2xsZXIiLCJjcmVhclRhYmxhIiwiZ2V0Iiwib2J0ZW5lclRhYmxhIiwib2J0ZW5lclRhYmxhcyIsInB1dCIsInJlc2V0ZWFyVGFibGEiLCJhY3R1YWxpemFyVGFibGEiLCJlbGltaW5hclRhYmxhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBR0E7Ozs7QUFGQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFJQUEsTUFBTSxDQUFDQyxJQUFQLENBQVksR0FBWixFQUFpQkMsa0JBQWdCQyxVQUFqQztBQUNBSCxNQUFNLENBQUNJLEdBQVAsQ0FBVyxNQUFYLEVBQWtCRixrQkFBZ0JHLFlBQWxDO0FBQ0FMLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLEdBQVgsRUFBZUYsa0JBQWdCSSxhQUEvQjtBQUVBTixNQUFNLENBQUNPLEdBQVAsQ0FBVyxlQUFYLEVBQTRCTCxrQkFBZ0JNLGFBQTVDO0FBRUFSLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLE1BQVgsRUFBa0JMLGtCQUFnQk8sZUFBbEM7QUFDQVQsTUFBTSxVQUFOLENBQWMsTUFBZCxFQUFxQkUsa0JBQWdCUSxhQUFyQztlQUVlVixNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5pbXBvcnQgVGFibGFDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3RhYmxhLmNvbnRyb2xsZXInO1xyXG5cclxucm91dGVyLnBvc3QoJy8nLCBUYWJsYUNvbnRyb2xsZXIuY3JlYXJUYWJsYSk7XHJcbnJvdXRlci5nZXQoJy86aWQnLFRhYmxhQ29udHJvbGxlci5vYnRlbmVyVGFibGEpO1xyXG5yb3V0ZXIuZ2V0KCcvJyxUYWJsYUNvbnRyb2xsZXIub2J0ZW5lclRhYmxhcyk7XHJcblxyXG5yb3V0ZXIucHV0KCcvOmlkL3Jlc2V0ZWFyJywgVGFibGFDb250cm9sbGVyLnJlc2V0ZWFyVGFibGEpO1xyXG5cclxucm91dGVyLnB1dCgnLzppZCcsVGFibGFDb250cm9sbGVyLmFjdHVhbGl6YXJUYWJsYSk7XHJcbnJvdXRlci5kZWxldGUoJy86aWQnLFRhYmxhQ29udHJvbGxlci5lbGltaW5hclRhYmxhKTsgXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "tabla.js"
      ],
      "names": [
        "router",
        "post",
        "TablaController",
        "crearTabla",
        "get",
        "obtenerTabla",
        "obtenerTablas",
        "put",
        "resetearTabla",
        "actualizarTabla",
        "eliminarTabla"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBC,kBAAgBC,UAAjC;AACAH,MAAM,CAACI,GAAP,CAAW,MAAX,EAAkBF,kBAAgBG,YAAlC;AACAL,MAAM,CAACI,GAAP,CAAW,GAAX,EAAeF,kBAAgBI,aAA/B;AAEAN,MAAM,CAACO,GAAP,CAAW,eAAX,EAA4BL,kBAAgBM,aAA5C;AAEAR,MAAM,CAACO,GAAP,CAAW,MAAX,EAAkBL,kBAAgBO,eAAlC;AACAT,MAAM,UAAN,CAAc,MAAd,EAAqBE,kBAAgBQ,aAArC;eAEeV,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport TablaController from '../controllers/tabla.controller';\r\n\r\nrouter.post('/', TablaController.crearTabla);\r\nrouter.get('/:id',TablaController.obtenerTabla);\r\nrouter.get('/',TablaController.obtenerTablas);\r\n\r\nrouter.put('/:id/resetear', TablaController.resetearTabla);\r\n\r\nrouter.put('/:id',TablaController.actualizarTabla);\r\nrouter.delete('/:id',TablaController.eliminarTabla); \r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1616977470508
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\tabla.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\tabla.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\tabla.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\tabla.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "tabla.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _TablaService = _interopRequireDefault(require(\"../services/TablaService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar TablaController =\n/*#__PURE__*/\nfunction () {\n  function TablaController() {\n    _classCallCheck(this, TablaController);\n  }\n\n  _createClass(TablaController, null, [{\n    key: \"crearTabla\",\n    value: function crearTabla(req, res) {\n      var nuevaTabla, TablaCreada;\n      return regeneratorRuntime.async(function crearTabla$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevaTabla = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].agregarTabla(nuevaTabla));\n\n            case 4:\n              TablaCreada = _context.sent;\n              util.setSuccess(201, 'Tabla añadida', TablaCreada);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerTablas\",\n    value: function obtenerTablas(req, res) {\n      var tablas;\n      return regeneratorRuntime.async(function obtenerTablas$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].obtenerTablas());\n\n            case 3:\n              tablas = _context2.sent;\n\n              if (tablas && tablas.length > 0) {\n                util.setSuccess(200, 'Tablas obtenidas', tablas);\n              } else {\n                util.setSuccess(200, 'No se encuentran Tablas');\n              }\n\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerTabla\",\n    value: function obtenerTabla(req, res) {\n      var id_tabla, tabla;\n      return regeneratorRuntime.async(function obtenerTabla$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              id_tabla = req.params.id;\n              _context3.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].obtenerTabla(id_tabla));\n\n            case 4:\n              tabla = _context3.sent;\n\n              if (tabla) {\n                util.setSuccess(200, 'Tabla obtenida', tabla);\n              } else {\n                util.setError(404, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no encontrado\"));\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(404, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"resetearTabla\",\n    value: function resetearTabla(req, res) {\n      var id_tabla, tablaCreada;\n      return regeneratorRuntime.async(function resetearTabla$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_tabla = req.params.id;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].resetearTabla(id_tabla));\n\n            case 4:\n              tablaCreada = _context4.sent;\n              util.setSuccess(201, 'Tabla reestablecida', tablaCreada);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(400, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"eliminarTabla\",\n    value: function eliminarTabla(req, res) {\n      var id_tabla, tablaEliminada;\n      return regeneratorRuntime.async(function eliminarTabla$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_tabla = req.params.id;\n              _context5.next = 4;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].eliminarTabla(id_tabla));\n\n            case 4:\n              tablaEliminada = _context5.sent;\n\n              if (tablaEliminada) {\n                util.setSuccess(200, 'Tabla eliminada');\n              } else {\n                util.setError(404, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no encontrada\"));\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarTabla\",\n    value: function actualizarTabla(req, res) {\n      var id_tabla, tabla, tablaActualizada;\n      return regeneratorRuntime.async(function actualizarTabla$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              id_tabla = req.params.id;\n              tabla = req.body;\n              _context6.next = 5;\n              return regeneratorRuntime.awrap(_TablaService[\"default\"].actualizarTabla(id_tabla, tabla));\n\n            case 5:\n              tablaActualizada = _context6.sent;\n\n              if (tablaActualizada == 0) {\n                // no hay columnas actualizadas\n                util.setError(400, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no se pudo actualizar. Chequear par\\xE1metros\"));\n              } else {\n                if (tablaActualizada == null) {\n                  util.setError(404, \"Tabla con id:\\\"\".concat(id_tabla, \"\\\" no se encuentra\"));\n                } else {\n                  util.setSuccess(200, 'Tabla actualizada', tablaActualizada);\n                }\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context6.prev = 10;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }]);\n\n  return TablaController;\n}();\n\nvar _default = TablaController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "tabla.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "TablaController",
        "req",
        "res",
        "nuevaTabla",
        "body",
        "TablaService",
        "agregarTabla",
        "TablaCreada",
        "setSuccess",
        "send",
        "setError",
        "message",
        "obtenerTablas",
        "tablas",
        "length",
        "id_tabla",
        "params",
        "id",
        "obtenerTabla",
        "tabla",
        "resetearTabla",
        "tablaCreada",
        "eliminarTabla",
        "tablaEliminada",
        "actualizarTabla",
        "tablaActualizada"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,e;;;;;;;;;+BACsBC,G,EAAKC,G;;;;;;;AAEfC,cAAAA,U,GAAaF,GAAG,CAACG,I;;8CACGC,yBAAaC,YAAb,CAA0BH,UAA1B,C;;;AAApBI,cAAAA,W;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,eAApB,EAAqCD,WAArC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;;8CAEHG,yBAAaO,aAAb,E;;;AAAfC,cAAAA,M;;AAEN,kBAAGA,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAA7B,EAA+B;AAC3BhB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCK,MAAvC;AACH,eAFD,MAGI;AACAf,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,yBAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;iCAIWD,G,EAAKC,G;;;;;;;AAEjBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACRZ,yBAAaa,YAAb,CAA0BH,QAA1B,C;;;AAAdI,cAAAA,K;;AAEN,kBAAGA,KAAH,EAAS;AACLrB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,gBAApB,EAAqCW,KAArC;AACH,eAFD,MAGI;AACArB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH;;gDACMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAElBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACFZ,yBAAae,aAAb,CAA2BL,QAA3B,C;;;AAApBM,cAAAA,W;AAENvB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA2Ca,WAA3C;gDACOvB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAElBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;;8CACCZ,yBAAaiB,aAAb,CAA2BP,QAA3B,C;;;AAAvBQ,cAAAA,c;;AAEN,kBAAGA,cAAH,EAAkB;AACdzB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH;;gDAEMjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBa,cAAAA,Q,GAAWd,GAAG,CAACe,MAAJ,CAAWC,E;AACtBE,cAAAA,K,GAAQlB,GAAG,CAACG,I;;8CAEaC,yBAAamB,eAAb,CAA6BT,QAA7B,EAAsCI,KAAtC,C;;;AAAzBM,cAAAA,gB;;AAEN,kBAAGA,gBAAgB,IAAE,CAArB,EAAuB;AAAE;AACrB3B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH,eAFD,MAGI;AACA,oBAAGU,gBAAgB,IAAE,IAArB,EAA0B;AACtB3B,kBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,2BAAmCK,QAAnC;AACH,iBAFD,MAGI;AACAjB,kBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCiB,gBAAxC;AACH;AACJ;;gDACM3B,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,e",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import TablaService from '../services/TablaService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass TablaController {\r\n    static async crearTabla(req, res) {    \r\n        try {    \r\n            const nuevaTabla = req.body;\r\n            const TablaCreada = await TablaService.agregarTabla(nuevaTabla);\r\n\r\n            util.setSuccess(201,'Tabla añadida', TablaCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerTablas(req, res){\r\n        try {\r\n            const tablas = await TablaService.obtenerTablas();\r\n        \r\n            if(tablas && tablas.length > 0){\r\n                util.setSuccess(200,'Tablas obtenidas',tablas);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Tablas'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerTabla(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tabla = await TablaService.obtenerTabla(id_tabla);\r\n            \r\n            if(tabla){\r\n                util.setSuccess(200,'Tabla obtenida',tabla);\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla con id:\"${id_tabla}\" no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async resetearTabla(req, res) {    \r\n        try {    \r\n            const id_tabla = req.params.id;\r\n            const tablaCreada = await TablaService.resetearTabla(id_tabla);\r\n\r\n            util.setSuccess(201,'Tabla reestablecida', tablaCreada);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async eliminarTabla(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tablaEliminada = await TablaService.eliminarTabla(id_tabla);\r\n\r\n            if(tablaEliminada){\r\n                util.setSuccess(200,'Tabla eliminada');\r\n            }\r\n            else{\r\n                util.setError(404,`Tabla con id:\"${id_tabla}\" no encontrada`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    } \r\n\r\n    static async actualizarTabla(req, res){\r\n        try {\r\n            const id_tabla = req.params.id;\r\n            const tabla = req.body;\r\n\r\n            const tablaActualizada = await TablaService.actualizarTabla(id_tabla,tabla);\r\n\r\n            if(tablaActualizada==0){ // no hay columnas actualizadas\r\n                util.setError(400,`Tabla con id:\"${id_tabla}\" no se pudo actualizar. Chequear parámetros`);\r\n            }\r\n            else{\r\n                if(tablaActualizada==null){\r\n                    util.setError(404,`Tabla con id:\"${id_tabla}\" no se encuentra`);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,'Tabla actualizada',tablaActualizada);\r\n                }\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);\r\n            return util.send(res);\r\n        }\r\n    } \r\n}\r\n\r\nexport default TablaController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616976790739
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\routes\\\\partido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\partido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\partido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes\\partido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
        "sourceFileName": "partido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _partido = _interopRequireDefault(require(\"../controllers/partido.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _partido[\"default\"].obtenerPartidos);\nrouter.post('/', _partido[\"default\"].crearPartido);\nrouter.post('/crearPartidos', _partido[\"default\"].crearPartidos);\nrouter.get('/:id', _partido[\"default\"].obtenerPartido);\nrouter.put('/actualizarPartido/:id', _partido[\"default\"].actualizarPartido);\nrouter.put('/actualizarPartidos', _partido[\"default\"].actualizarPartidos);\nrouter[\"delete\"]('/:id', _partido[\"default\"].eliminarPartido);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpZG8uanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiUGFydGlkb0NvbnRyb2xsZXIiLCJvYnRlbmVyUGFydGlkb3MiLCJwb3N0IiwiY3JlYXJQYXJ0aWRvIiwiY3JlYXJQYXJ0aWRvcyIsIm9idGVuZXJQYXJ0aWRvIiwicHV0IiwiYWN0dWFsaXphclBhcnRpZG8iLCJhY3R1YWxpemFyUGFydGlkb3MiLCJlbGltaW5hclBhcnRpZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWVDLG9CQUFrQkMsZUFBakM7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFnQkYsb0JBQWtCRyxZQUFsQztBQUNBTCxNQUFNLENBQUNJLElBQVAsQ0FBYSxnQkFBYixFQUE4QkYsb0JBQWtCSSxhQUFoRDtBQUNBTixNQUFNLENBQUNDLEdBQVAsQ0FBVyxNQUFYLEVBQWtCQyxvQkFBa0JLLGNBQXBDO0FBQ0FQLE1BQU0sQ0FBQ1EsR0FBUCxDQUFXLHdCQUFYLEVBQW9DTixvQkFBa0JPLGlCQUF0RDtBQUNBVCxNQUFNLENBQUNRLEdBQVAsQ0FBVyxxQkFBWCxFQUFpQ04sb0JBQWtCUSxrQkFBbkQ7QUFDQVYsTUFBTSxVQUFOLENBQWMsTUFBZCxFQUFxQkUsb0JBQWtCUyxlQUF2QztlQUVlWCxNIiwic291cmNlUm9vdCI6IkQ6XFx4YW1wcDJcXGh0ZG9jc1xcYXBpLWZ1dHNhbFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5pbXBvcnQgUGFydGlkb0NvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvcGFydGlkby5jb250cm9sbGVyJztcclxuXHJcbnJvdXRlci5nZXQoJy8nLFBhcnRpZG9Db250cm9sbGVyLm9idGVuZXJQYXJ0aWRvcyk7XHJcbnJvdXRlci5wb3N0KCcvJyxQYXJ0aWRvQ29udHJvbGxlci5jcmVhclBhcnRpZG8pO1xyXG5yb3V0ZXIucG9zdCAoJy9jcmVhclBhcnRpZG9zJyxQYXJ0aWRvQ29udHJvbGxlci5jcmVhclBhcnRpZG9zKTtcclxucm91dGVyLmdldCgnLzppZCcsUGFydGlkb0NvbnRyb2xsZXIub2J0ZW5lclBhcnRpZG8pO1xyXG5yb3V0ZXIucHV0KCcvYWN0dWFsaXphclBhcnRpZG8vOmlkJyxQYXJ0aWRvQ29udHJvbGxlci5hY3R1YWxpemFyUGFydGlkbyk7XHJcbnJvdXRlci5wdXQoJy9hY3R1YWxpemFyUGFydGlkb3MnLFBhcnRpZG9Db250cm9sbGVyLmFjdHVhbGl6YXJQYXJ0aWRvcyk7XHJcbnJvdXRlci5kZWxldGUoJy86aWQnLFBhcnRpZG9Db250cm9sbGVyLmVsaW1pbmFyUGFydGlkbyk7IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "partido.js"
      ],
      "names": [
        "router",
        "get",
        "PartidoController",
        "obtenerPartidos",
        "post",
        "crearPartido",
        "crearPartidos",
        "obtenerPartido",
        "put",
        "actualizarPartido",
        "actualizarPartidos",
        "eliminarPartido"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAeC,oBAAkBC,eAAjC;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAgBF,oBAAkBG,YAAlC;AACAL,MAAM,CAACI,IAAP,CAAa,gBAAb,EAA8BF,oBAAkBI,aAAhD;AACAN,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,oBAAkBK,cAApC;AACAP,MAAM,CAACQ,GAAP,CAAW,wBAAX,EAAoCN,oBAAkBO,iBAAtD;AACAT,MAAM,CAACQ,GAAP,CAAW,qBAAX,EAAiCN,oBAAkBQ,kBAAnD;AACAV,MAAM,UAAN,CAAc,MAAd,EAAqBE,oBAAkBS,eAAvC;eAEeX,M",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nconst router = Router();\r\n\r\nimport PartidoController from '../controllers/partido.controller';\r\n\r\nrouter.get('/',PartidoController.obtenerPartidos);\r\nrouter.post('/',PartidoController.crearPartido);\r\nrouter.post ('/crearPartidos',PartidoController.crearPartidos);\r\nrouter.get('/:id',PartidoController.obtenerPartido);\r\nrouter.put('/actualizarPartido/:id',PartidoController.actualizarPartido);\r\nrouter.put('/actualizarPartidos',PartidoController.actualizarPartidos);\r\nrouter.delete('/:id',PartidoController.eliminarPartido); \r\n\r\nexport default router;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616966916414
  },
  "{\"sourceRoot\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"filename\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\\\\src\\\\controllers\\\\partido.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\xampp2\\\\htdocs\\\\api-futsal\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\xampp2\\htdocs\\api-futsal",
      "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\partido.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\xampp2\\htdocs\\api-futsal",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\partido.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers\\partido.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
        "sourceFileName": "partido.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _PartidoService = _interopRequireDefault(require(\"../services/PartidoService\"));\n\nvar _Utils = _interopRequireDefault(require(\"../utils/Utils\"));\n\nvar _Partido = _interopRequireDefault(require(\"../models/Partido\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar util = new _Utils[\"default\"]();\n\nvar PartidoController =\n/*#__PURE__*/\nfunction () {\n  function PartidoController() {\n    _classCallCheck(this, PartidoController);\n  }\n\n  _createClass(PartidoController, null, [{\n    key: \"crearPartido\",\n    value: function crearPartido(req, res) {\n      var nuevoPartido, partidoCreado;\n      return regeneratorRuntime.async(function crearPartido$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              nuevoPartido = req.body;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].agregarPartido(nuevoPartido));\n\n            case 4:\n              partidoCreado = _context.sent;\n              util.setSuccess(201, 'Partido añadido', partidoCreado);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              util.setError(400, _context.t0.message);\n              return _context.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"crearPartidos\",\n    value: function crearPartidos(req, res) {\n      var nuevosPartidos, partidosCreados;\n      return regeneratorRuntime.async(function crearPartidos$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              nuevosPartidos = req.body;\n              _context2.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].agregarPartidos(nuevosPartidos));\n\n            case 4:\n              partidosCreados = _context2.sent;\n              util.setSuccess(201, 'Partidos añadidos', partidosCreados);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              util.setError(400, \"No se añadieron los partidos: \" + _context2.t0.message);\n              return _context2.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"obtenerPartidos\",\n    value: function obtenerPartidos(req, res) {\n      var partidos;\n      return regeneratorRuntime.async(function obtenerPartidos$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].obtenerPartidos());\n\n            case 3:\n              partidos = _context3.sent;\n\n              if (partidos && partidos.length > 0) {\n                util.setSuccess(200, 'Partidos obtenidos', partidos);\n              } else {\n                util.setSuccess(200, 'No se encuentran Partidos');\n              }\n\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              util.setError(400, _context3.t0.message);\n              return _context3.abrupt(\"return\", util.send(res));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    }\n  }, {\n    key: \"obtenerPartido\",\n    value: function obtenerPartido(req, res) {\n      var id_partido, partido;\n      return regeneratorRuntime.async(function obtenerPartido$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              id_partido = req.params.id;\n              _context4.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].obtenerPartido(id_partido));\n\n            case 4:\n              partido = _context4.sent;\n\n              /* const arbitro = await partido.getArbitro();  //datos del árbitro\r\n              const asistente = await partido.getAsistente(); //datos del asistente\r\n              console.log(\"Datos del partido \",arbitro.dataValues,asistente.dataValues); */\n              if (partido) {\n                util.setSuccess(200, 'Partido obtenido', partido);\n              } else {\n                util.setError(404, \"Partido no encontrado\");\n              }\n\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              util.setError(404, _context4.t0.message);\n              return _context4.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"actualizarPartido\",\n    value: function actualizarPartido(req, res) {\n      var id_partido, partido, partidoActualizado;\n      return regeneratorRuntime.async(function actualizarPartido$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              id_partido = req.params.id;\n              partido = req.body;\n              _context5.next = 5;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].actualizarPartido(id_partido, partido));\n\n            case 5:\n              partidoActualizado = _context5.sent;\n\n              if (partidoActualizado == 0) {\n                util.setError(400, \"Partido con id:\\\"\".concat(id_partido, \"\\\" no se pudo actualizar. Chequear par\\xE1metros\"));\n              } else {\n                if (partidoActualizado == null) {\n                  util.setError(404, \"Partido con id:\\\"\".concat(id_partido, \"\\\" no encontrado\"));\n                } else {\n                  util.setSuccess(200, 'Partido actualizado', partidoActualizado);\n                }\n              }\n\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              util.setError(404, _context5.t0.message);\n              return _context5.abrupt(\"return\", util.send(res));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, {\n    key: \"actualizarPartidos\",\n    value: function actualizarPartidos(req, res) {\n      var partidos, partidosActualizados;\n      return regeneratorRuntime.async(function actualizarPartidos$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              partidos = req.body;\n              _context6.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].actualizarPartidos(partidos));\n\n            case 4:\n              partidosActualizados = _context6.sent;\n\n              if (partidosActualizados == 0) {\n                util.setError(400, \"No se pudo actualizar el conjunto de partidos. Chequear par\\xE1metros\");\n              } else {\n                if (partidosActualizados == null) {\n                  util.setError(404, \"Partido/s no encontrados\");\n                } else {\n                  util.setSuccess(200, 'Partidos actualizados', partidosActualizados);\n                }\n              }\n\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              util.setError(404, _context6.t0.message);\n              return _context6.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, {\n    key: \"eliminarPartido\",\n    value: function eliminarPartido(req, res) {\n      var id_partido, partidoEliminado;\n      return regeneratorRuntime.async(function eliminarPartido$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              id_partido = req.params.id;\n              _context7.next = 4;\n              return regeneratorRuntime.awrap(_PartidoService[\"default\"].eliminarPartido(id_partido));\n\n            case 4:\n              partidoEliminado = _context7.sent;\n\n              if (partidoEliminado) {\n                util.setSuccess(200, 'Partido eliminado');\n              } else {\n                util.setError(404, \"Partido con id: \".concat(id_partido, \" no encontrado\"));\n              }\n\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](0);\n              util.setError(404, _context7.t0.message);\n              return _context7.abrupt(\"return\", util.send(res));\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }]);\n\n  return PartidoController;\n}();\n\nvar _default = PartidoController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "partido.controller.js"
      ],
      "names": [
        "util",
        "Util",
        "PartidoController",
        "req",
        "res",
        "nuevoPartido",
        "body",
        "PartidoService",
        "agregarPartido",
        "partidoCreado",
        "setSuccess",
        "send",
        "setError",
        "message",
        "nuevosPartidos",
        "agregarPartidos",
        "partidosCreados",
        "obtenerPartidos",
        "partidos",
        "length",
        "id_partido",
        "params",
        "id",
        "obtenerPartido",
        "partido",
        "actualizarPartido",
        "partidoActualizado",
        "actualizarPartidos",
        "partidosActualizados",
        "eliminarPartido",
        "partidoEliminado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,iB;;;;;;;;;iCACwBC,G,EAAKC,G;;;;;;;AAEjBC,cAAAA,Y,GAAeF,GAAG,CAACG,I;;8CACGC,2BAAeC,cAAf,CAA8BH,YAA9B,C;;;AAAtBI,cAAAA,a;AAENT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,iBAApB,EAAsCD,aAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,YAAMC,OAAxB;+CACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;kCAIYD,G,EAAKC,G;;;;;;;AAGlBU,cAAAA,c,GAAiBX,GAAG,CAACG,I;;8CACGC,2BAAeQ,eAAf,CAA+BD,cAA/B,C;;;AAAxBE,cAAAA,e;AACNhB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB,EAAwCM,eAAxC;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,mCAAiC,aAAMC,OAAzD;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;;8CAEHG,2BAAeU,eAAf,E;;;AAAjBC,cAAAA,Q;;AAEN,kBAAGA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAjC,EAAmC;AAC/BnB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,oBAApB,EAAyCQ,QAAzC;AACH,eAFD,MAGI;AACAlB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,2BAApB;AACH;;gDACMV,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;mCAIaD,G,EAAKC,G;;;;;;;AAEnBgB,cAAAA,U,GAAajB,GAAG,CAACkB,MAAJ,CAAWC,E;;8CACRf,2BAAegB,cAAf,CAA8BH,UAA9B,C;;;AAAhBI,cAAAA,O;;AACN;;;AAIA,kBAAGA,OAAH,EAAW;AACPxB,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,kBAApB,EAAuCc,OAAvC;AACH,eAFD,MAGI;AACAxB,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH;;gDACMZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAIgBD,G,EAAKC,G;;;;;;;AAEtBgB,cAAAA,U,GAAajB,GAAG,CAACkB,MAAJ,CAAWC,E;AACxBE,cAAAA,O,GAAUrB,GAAG,CAACG,I;;8CACaC,2BAAekB,iBAAf,CAAiCL,UAAjC,EAA4CI,OAA5C,C;;;AAA3BE,cAAAA,kB;;AAEN,kBAAGA,kBAAkB,IAAE,CAAvB,EAAyB;AACrB1B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAqCQ,UAArC;AACH,eAFD,MAGI;AACA,oBAAGM,kBAAkB,IAAE,IAAvB,EAA4B;AACxB1B,kBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,6BAAqCQ,UAArC;AACH,iBAFD,MAGI;AACApB,kBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,qBAApB,EAA0CgB,kBAA1C;AACH;AACJ;;gDACM1B,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;uCAIiBD,G,EAAKC,G;;;;;;;AAGvBc,cAAAA,Q,GAAWf,GAAG,CAACG,I;;8CAEcC,2BAAeoB,kBAAf,CAAkCT,QAAlC,C;;;AAA7BU,cAAAA,oB;;AAGN,kBAAGA,oBAAoB,IAAE,CAAzB,EAA2B;AACvB5B,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH,eAFD,MAGI;AACA,oBAAGgB,oBAAoB,IAAE,IAAzB,EAA8B;AAC1B5B,kBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd;AACH,iBAFD,MAGI;AACAZ,kBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,uBAApB,EAA4CkB,oBAA5C;AACH;AACJ;;gDACM5B,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAIcD,G,EAAKC,G;;;;;;;AAEpBgB,cAAAA,U,GAAajB,GAAG,CAACkB,MAAJ,CAAWC,E;;8CACCf,2BAAesB,eAAf,CAA+BT,UAA/B,C;;;AAAzBU,cAAAA,gB;;AAEN,kBAAGA,gBAAH,EAAoB;AAChB9B,gBAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAoB,mBAApB;AACH,eAFD,MAGI;AACAV,gBAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,4BAAqCQ,UAArC;AACH;;gDAEMpB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAGPJ,cAAAA,IAAI,CAACY,QAAL,CAAc,GAAd,EAAkB,aAAMC,OAAxB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;;;;eAKJF,iB",
      "sourceRoot": "D:\\xampp2\\htdocs\\api-futsal\\src\\controllers",
      "sourcesContent": [
        "import PartidoService from '../services/PartidoService';\r\nimport Util from '../utils/Utils';\r\nimport Partido from '../models/Partido';\r\n\r\nconst util = new Util();\r\n\r\nclass PartidoController {\r\n    static async crearPartido(req, res) {    \r\n        try {    \r\n            const nuevoPartido = req.body;\r\n            const partidoCreado = await PartidoService.agregarPartido(nuevoPartido);\r\n\r\n            util.setSuccess(201,'Partido añadido',partidoCreado);\r\n            return util.send(res);\r\n        }   \r\n        catch (error){\r\n            util.setError(400,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async crearPartidos(req, res) {    \r\n        //Recibe un arreglo objetos Partido para ser creadas, se insertan todos (si no hay error), o ninguno (si hay error)\r\n        try {    \r\n            const nuevosPartidos = req.body;\r\n            const partidosCreados = await PartidoService.agregarPartidos(nuevosPartidos);\r\n            util.setSuccess(201,'Partidos añadidos',partidosCreados);\r\n            return util.send(res);\r\n        }\r\n        catch (error){\r\n            util.setError(400,\"No se añadieron los partidos: \"+error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async obtenerPartidos(req, res){\r\n        try {\r\n            const partidos = await PartidoService.obtenerPartidos();\r\n            \r\n            if(partidos && partidos.length > 0){\r\n                util.setSuccess(200,'Partidos obtenidos',partidos);\r\n            }\r\n            else{\r\n                util.setSuccess(200,'No se encuentran Partidos'); \r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(400,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n\r\n    static async obtenerPartido(req, res){\r\n        try {\r\n            const id_partido = req.params.id;\r\n            const partido = await PartidoService.obtenerPartido(id_partido);\r\n            /* const arbitro = await partido.getArbitro();  //datos del árbitro\r\n            const asistente = await partido.getAsistente(); //datos del asistente\r\n            console.log(\"Datos del partido \",arbitro.dataValues,asistente.dataValues); */\r\n            \r\n            if(partido){\r\n                util.setSuccess(200,'Partido obtenido',partido);\r\n            }\r\n            else{\r\n                util.setError(404,`Partido no encontrado`);\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n   \r\n    static async actualizarPartido(req, res){\r\n        try {\r\n            const id_partido = req.params.id;\r\n            const partido = req.body;\r\n            const partidoActualizado = await PartidoService.actualizarPartido(id_partido,partido);\r\n\r\n            if(partidoActualizado==0){\r\n                util.setError(400,`Partido con id:\"${id_partido}\" no se pudo actualizar. Chequear parámetros`);\r\n            }\r\n            else{\r\n                if(partidoActualizado==null){\r\n                    util.setError(404,`Partido con id:\"${id_partido}\" no encontrado`);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,'Partido actualizado',partidoActualizado);\r\n                }\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async actualizarPartidos(req, res){\r\n        try {\r\n\r\n            const partidos = req.body;\r\n\r\n            const partidosActualizados = await PartidoService.actualizarPartidos(partidos);\r\n\r\n\r\n            if(partidosActualizados==0){\r\n                util.setError(400,`No se pudo actualizar el conjunto de partidos. Chequear parámetros`);\r\n            }\r\n            else{\r\n                if(partidosActualizados==null){\r\n                    util.setError(404,`Partido/s no encontrados`);\r\n                }\r\n                else{\r\n                    util.setSuccess(200,'Partidos actualizados',partidosActualizados);\r\n                }\r\n            }\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);\r\n            return util.send(res);\r\n        }\r\n    }\r\n\r\n    static async eliminarPartido(req, res){\r\n        try {\r\n            const id_partido = req.params.id;\r\n            const partidoEliminado = await PartidoService.eliminarPartido(id_partido);\r\n\r\n            if(partidoEliminado){\r\n                util.setSuccess(200,'Partido eliminado');\r\n            }\r\n            else{\r\n                util.setError(404,`Partido con id: ${id_partido} no encontrado`);\r\n            } \r\n\r\n            return util.send(res);\r\n        } \r\n        catch (error) {\r\n            util.setError(404,error.message);   \r\n            return util.send(res);   \r\n        }\r\n    }\r\n}\r\n\r\nexport default PartidoController;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616969407699
  }
}